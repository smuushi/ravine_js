/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/TileMap */ \"./src/scripts/TileMap.js\");\n/* harmony import */ var _scripts_Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _scripts_UserInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/UserInterface */ \"./src/scripts/UserInterface.js\");\n/* harmony import */ var _scripts_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/foodUtils */ \"./src/scripts/foodUtils.js\");\n/* harmony import */ var _scripts_Consumable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/Consumable */ \"./src/scripts/Consumable.js\");\n/* harmony import */ var _scripts_EnvObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _scripts_Menus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scripts/Menus */ \"./src/scripts/Menus.js\");\n/* harmony import */ var _scripts_Options__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scripts/Options */ \"./src/scripts/Options.js\");\n/* harmony import */ var _scripts_musics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scripts/musics */ \"./src/scripts/musics.js\");\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // waiting for stuff to load first. lmao\n\n  const modal = document.querySelector(\".modal\");\n  const overlay = document.querySelector(\".overlay\");\n  const openModalBtn = document.querySelector(\".btn-open\");\n  const closeModalBtn = document.querySelector(\".btn-close\");\n  const openModal = function () {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n  };\n  const closeModal = function () {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n    this.gameStateFocused = true;\n\n    // debugger\n\n    if (this.paused === false) {\n      // debugger;\n      this.gameStartMusic.play();\n    }\n  };\n  openModalBtn.addEventListener(\"click\", openModal);\n  const tileSize = 16;\n  const theTileMapInstance = new _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](tileSize);\n  closeModalBtn.addEventListener(\"click\", closeModal.bind(theTileMapInstance));\n  console.log('hello world');\n  console.log('hellos from index');\n\n  // game info so far... \n  // map size will be 30 x 20 squares. \n  // tile size 16 x 16 pixels also. \n\n  const canvas = document.getElementById('game-canvas'); // gathered my html elements that I will be working in. \n  const ctx = canvas.getContext('2d'); // all rendering takes place on the ctx. \n\n  const player = theTileMapInstance.getPlayer(1.13);\n  const nextDayMenu = new _scripts_Menus__WEBPACK_IMPORTED_MODULE_7__[\"default\"](theTileMapInstance);\n  const theOptionsMenu = new _scripts_Options__WEBPACK_IMPORTED_MODULE_8__[\"default\"](theTileMapInstance);\n  theTileMapInstance.bedMenu = nextDayMenu; // THIS IS AN IMPORTANT LINE OF CODE.. ughhh lmaoooo haha\n  theTileMapInstance.optionsMenu = theOptionsMenu; // by convention now.. all menus will be made this way lmaoo\n  // it's important to tie the menus to the tileMap so that the player inputs can reference it when making their selections.. \n  theTileMapInstance.player = player; // this is also vital for skeleton pathing.. lmao\n\n  // debugger;\n  if (!localStorage.getItem('ENEMIES')) {\n    // debugger;\n    theTileMapInstance.totalEnemiesKilled = 0;\n    // localStorageEnemiesCount = 0;\n  } else {\n    theTileMapInstance.totalEnemiesKilled = JSON.parse(localStorage.getItem('ENEMIES'));\n  }\n  const userInter = new _scripts_UserInterface__WEBPACK_IMPORTED_MODULE_2__[\"default\"](theTileMapInstance, player);\n  const envObjects = theTileMapInstance.getObjects();\n  // console.log(player);\n  // debugger\n\n  // if (!EnvObject.prototype.INTERACTIVEITEMS){\n  const foodItems = _scripts_EnvObject__WEBPACK_IMPORTED_MODULE_6__[\"default\"].prototype.INTERACTIVEITEMS;\n  // }\n\n  const hitboxes = _scripts_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.ALLHITBOXESMADE;\n  const passableHitboxes = _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].prototype.PASSABLEHITBOXES;\n  const gameOverMusic = new _scripts_musics__WEBPACK_IMPORTED_MODULE_9__[\"default\"]('./src/graphics/NinjaAdventure/Musics/14 - Curse.ogg');\n\n  // const gameStartMusic = new Sound('./src/graphics/NinjaAdventure/Musics/16 = Melancholia.ogg')\n  // gameStartMusic.play();\n\n  // debugger\n  function gameRender() {\n    // layer draw calls to create layers\n\n    //update stats at each render because yeah.. idk bro.. I'm kinda tired\n    // so I'm just coding a little randomly to get these features done. \n\n    theTileMapInstance.updateScores();\n    if (theTileMapInstance.paused === false) {\n      theTileMapInstance.draw(ctx);\n      foodItems.forEach(food => food._drawFood(ctx));\n      // debugger\n      // player.animate(ctx)\n      // console.log(\"hello\")\n      // player.move(ctx);\n      // player.animate(ctx)\n      let aliveEnemies = theTileMapInstance.enemies.filter(enemy => enemy.health > 0);\n      let deadEnemies = theTileMapInstance.enemies.filter(enemy => enemy.health <= 0);\n      theTileMapInstance.deads = deadEnemies;\n      const enemiesKilled = deadEnemies.length;\n\n      // console.log(aliveEnemies);\n\n      deadEnemies.forEach(enemy => {\n        enemy.animateDeath(ctx);\n        enemy.hitbox.x = 0;\n        enemy.hitbox.y = 0;\n      });\n      aliveEnemies.forEach(enemy => {\n        if (enemy.vulnerable === true) {\n          if (enemy.aggressionState === \"idle\") {\n            enemy.animate(ctx);\n          } else if (enemy.aggressionState === \"aggro\") {\n            enemy.animateAttack(ctx);\n          }\n        } else if (enemy.vulnerable === false) {\n          enemy.framesDrawn++;\n          if (enemy.framesDrawn % 3 === 0) {\n            if (enemy.aggressionState === \"idle\") {\n              enemy.animate(ctx);\n            } else if (enemy.aggressionState === \"aggro\") {\n              enemy.animateAttack(ctx);\n            }\n          }\n        }\n        if (enemy.health > 0) {\n          enemy.move();\n        }\n      });\n\n      // aliveEnemies.forEach((enemy) => enemy.move())\n\n      if (player.vulnerable === true) {\n        // console.log('player IS VULNERABLE')\n      } else if (player.vulnerable === false) {\n        // console.log('player is invulnerable')\n      }\n\n      // console.log(theTileMapInstance.enemies)\n      // console.log(player)\n\n      if (player.health === 0) {\n        // player.currentFrame = 0;\n        player.animateDeath(ctx);\n        theTileMapInstance.gameStartMusic.stop();\n        gameOverMusic.play();\n\n        // aliveEnemies.forEach((enemy) => enemy.move())\n      } else {\n        // theTileMapInstance.gameStartMusic.play();\n        player.move(ctx);\n        if (player.vulnerable === false) {\n          // debugger\n          player.framesDrawn++;\n          if (player.framesDrawn % 2 === 0) {\n            // player.currentFrame++\n            if (player.state === \"idle\") {\n              // debugger\n              player.animate(ctx);\n            } else if (player.state === \"attacking\") {\n              console.log('animating attacks');\n              player.animateAttack(ctx);\n            }\n          }\n        } else if (player.vulnerable === true) {\n          if (player.state === \"idle\") {\n            player.animate(ctx);\n          } else if (player.state === \"attacking\") {\n            console.log('animating attacks');\n            player.animateAttack(ctx);\n          }\n        }\n      }\n      theTileMapInstance.draw2(ctx);\n    } else {\n      console.log(\"paused!\");\n      if (theTileMapInstance.optionsToggle === false) {\n        nextDayMenu.draw(ctx);\n        // render pause next day menu here!\n      } else if (theTileMapInstance.optionsToggle === true) {\n        theOptionsMenu.drawOptions(ctx);\n        // console.log(player.health)\n        // debugger\n        if (player.health === 0) {\n          // debugger\n          theOptionsMenu.drawDeadStatus(ctx);\n        } else if (player.health > 0) {\n          theOptionsMenu.drawAliveStatus(ctx);\n        }\n      }\n    }\n    userInter.drawControls(ctx);\n    userInter.drawDays(ctx);\n    userInter.drawFoodAmt(ctx);\n    userInter.drawHealthAmt(ctx);\n\n    // envObjects.forEach((obj) => obj.drawHitboxes(ctx));\n\n    //below lines will draw hitboxes.. comment them out to disable hitbox rendering\n    // player.hitbox._debugDraw(ctx)\n    // hitboxes.forEach((box) => box._debugDraw(ctx));\n    // passableHitboxes.forEach((box) => box._debugDraww(ctx));\n\n    // console.log(hitboxes);\n    _scripts_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateCollisionStateToTrueIfColliding();\n    _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].updateDetectionStateToTrueIfDetecting();\n  }\n  theTileMapInstance.setCanvasSize(canvas);\n  setInterval(gameRender, 1000 / 75);\n\n  // order logic =>\n\n  // TileMap.js handles rendering logic. \n  // hitboxes handles collision detection only!\n  // each class will have their own move() function which will handle collision logic and what to do.\n  // separate player class. with a hitbox instance tied on an attribute. \n  // separate envionmental objects class. with a hitbox also tied. \n  // \n\n  // to do list: \n  // write out hitbox collision detection logic and refactor player.move() code to account. \n  // current problem is that in order to update collision, I need to iterate through all combinations of \n  // hitboxes... so I need to find a way of collecting them as they're created... \n  // look up a way of exporting an updatable class constant that I can use in the gameRender callback.\n\n  // above done by the end of Friday!\n\n  // next to do list.. \n  // create a food item that will render and place itself based on the tilemap.. \n  // after creating the note below, I will also extend this food item from the env objects class. \n  // we'll call it 'consumable'\n  //\n  // create a new day functionality.. \n  // ^ will necessitate a rendering and processing of an object that will allow the player to sleep. \n  // ^ will not sure if this will be a custom environmental object.. maybe I can do that by extending the class. \n\n  // food was done!... and picking up the food is tracking well... \n  // I just need to add the new day functionality now. \n  // I added a space to better contextualize where things will go.. So I added a room. \n  // Going to add a bed that will result in a menu prompt that will go to the next day and let the player spend their\n  // collected surplus food on upgrades to speed, health, luck, and attacking. \n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Consumable.js":
/*!***********************************!*\
  !*** ./src/scripts/Consumable.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _foodUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foodUtils */ \"./src/scripts/foodUtils.js\");\n\n\nclass Consumable extends _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0, passHitboxXOffset = 0, passHitboxYOffset = 0, rng) {\n    super(x, y, tileSize - 13, velocity, tileMap, hitboxXOffset, hitboxYOffset);\n    this.consImages = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.consImages[0].src = './src/graphics/NinjaAdventure/Items/Food/Fish.png';\n    this.consImages[1].src = './src/graphics/NinjaAdventure/Items/Food/Onigiri.png';\n    this.consImages[2].src = './src/graphics/NinjaAdventure/Items/Food/Octopus.png';\n    this.consImages[3].src = './src/graphics/NinjaAdventure/Items/Food/Shrimp.png';\n    this.consImages[4].src = './src/graphics/NinjaAdventure/Items/Food/Sushi.png';\n    this.consImages[5].src = './src/graphics/NinjaAdventure/Items/Food/Sushi2.png';\n    this.consImages[6].src = './src/graphics/NinjaAdventure/Items/Food/Yakitori.png';\n    this.consImages[7].src = './src/graphics/NinjaAdventure/Items/Food/SeedLarge.png';\n    this.consImages[8].src = './src/graphics/NinjaAdventure/Items/Food/Noodle.png';\n    this.rng = rng;\n    this.foodHitbox = new _foodUtils__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, tileSize - 3, tileSize - 3, this, passHitboxXOffset + 1.5, passHitboxYOffset + 2);\n    console.log(this);\n    if (!_EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS) {\n      _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS = [];\n    }\n    _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS.push(this);\n  }\n  _drawFood(ctx) {\n    // debugger\n    let foodSelector = this.rng % 8;\n    ctx.drawImage(this.consImages[foodSelector], this.x, this.y, this.tileSize + 13, this.tileSize + 13);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Consumable);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9Db25zdW1hYmxlLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFvQztBQUNLO0FBRXpDLE1BQU1FLFVBQVUsU0FBU0Ysa0RBQVMsQ0FBQztFQUUvQkcsV0FBV0EsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGlCQUFpQixHQUFHLENBQUMsRUFBRUMsaUJBQWlCLEdBQUcsQ0FBQyxFQUFFQyxHQUFHLEVBQUU7SUFDcEksS0FBSyxDQUFDVCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsUUFBUSxHQUFHLEVBQUUsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRUMsYUFBYSxDQUFDO0lBRTNFLElBQUksQ0FBQ0ksVUFBVSxHQUFHLENBQ2QsSUFBSUMsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLENBQ2Q7SUFDRCxJQUFJLENBQUNELFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLG1EQUFtRDtJQUM1RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHNEQUFzRDtJQUMvRSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHNEQUFzRDtJQUMvRSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUM5RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLG9EQUFvRDtJQUM3RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUM5RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHVEQUF1RDtJQUNoRixJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHdEQUF3RDtJQUNqRixJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUU5RSxJQUFJLENBQUNILEdBQUcsR0FBR0EsR0FBRztJQUVkLElBQUksQ0FBQ0ksVUFBVSxHQUFHLElBQUloQixrREFBYyxDQUFDRyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsUUFBUSxHQUFHLENBQUMsRUFBRUEsUUFBUSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUVLLGlCQUFpQixHQUFHLEdBQUcsRUFBRUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBRzVITSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUM7SUFFakIsSUFBSSxDQUFDbkIsNkVBQW9DLEVBQUU7TUFDdkNBLDZFQUFvQyxHQUFHLEVBQUU7SUFDN0M7SUFFQUEsa0ZBQXlDLENBQUMsSUFBSSxDQUFDO0VBRW5EO0VBRUF1QixTQUFTQSxDQUFDQyxHQUFHLEVBQUU7SUFDWDtJQUNBLElBQUlDLFlBQVksR0FBSSxJQUFJLENBQUNaLEdBQUcsR0FBRyxDQUFFO0lBQ2pDVyxHQUFHLENBQUNFLFNBQVMsQ0FBQyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1csWUFBWSxDQUFDLEVBQUUsSUFBSSxDQUFDckIsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEVBQUUsRUFBRSxJQUFJLENBQUNBLFFBQVEsR0FBRyxFQUFFLENBQUM7RUFFeEc7QUFJSjtBQUVBLCtEQUFlSixVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9zcmMvc2NyaXB0cy9Db25zdW1hYmxlLmpzPzdmY2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVudk9iamVjdCBmcm9tIFwiLi9FbnZPYmplY3RcIjtcbmltcG9ydCBQYXNzYWJsZUhpdGJveCBmcm9tIFwiLi9mb29kVXRpbHNcIjtcblxuY2xhc3MgQ29uc3VtYWJsZSBleHRlbmRzIEVudk9iamVjdCB7XG5cbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCB0aWxlU2l6ZSwgdmVsb2NpdHksIHRpbGVNYXAsIGhpdGJveFhPZmZzZXQgPSAwLCBoaXRib3hZT2Zmc2V0ID0gMCwgcGFzc0hpdGJveFhPZmZzZXQgPSAwLCBwYXNzSGl0Ym94WU9mZnNldCA9IDAsIHJuZykge1xuICAgICAgICBzdXBlcih4LCB5LCB0aWxlU2l6ZSAtIDEzLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCwgaGl0Ym94WU9mZnNldClcblxuICAgICAgICB0aGlzLmNvbnNJbWFnZXMgPSBbXG4gICAgICAgICAgICBuZXcgSW1hZ2UoKSwgXG4gICAgICAgICAgICBuZXcgSW1hZ2UoKSxcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpXG4gICAgICAgIF1cbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzBdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL0Zpc2gucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbMV0uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvT25pZ2lyaS5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1syXS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9PY3RvcHVzLnBuZydcbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzNdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL1NocmltcC5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1s0XS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9TdXNoaS5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1s1XS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9TdXNoaTIucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbNl0uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvWWFraXRvcmkucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbN10uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvU2VlZExhcmdlLnBuZydcbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzhdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL05vb2RsZS5wbmcnXG4gICAgICAgIFxuICAgICAgICB0aGlzLnJuZyA9IHJuZztcbiAgICAgICAgXG4gICAgICAgIHRoaXMuZm9vZEhpdGJveCA9IG5ldyBQYXNzYWJsZUhpdGJveCh4LCB5LCB0aWxlU2l6ZSAtIDMsIHRpbGVTaXplIC0gMywgdGhpcywgcGFzc0hpdGJveFhPZmZzZXQgKyAxLjUsIHBhc3NIaXRib3hZT2Zmc2V0ICsgMilcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzKVxuXG4gICAgICAgIGlmICghRW52T2JqZWN0LnByb3RvdHlwZS5JTlRFUkFDVElWRUlURU1TKSB7XG4gICAgICAgICAgICBFbnZPYmplY3QucHJvdG90eXBlLklOVEVSQUNUSVZFSVRFTVMgPSBbXVxuICAgICAgICB9XG5cbiAgICAgICAgRW52T2JqZWN0LnByb3RvdHlwZS5JTlRFUkFDVElWRUlURU1TLnB1c2godGhpcylcblxuICAgIH1cblxuICAgIF9kcmF3Rm9vZChjdHgpIHtcbiAgICAgICAgLy8gZGVidWdnZXJcbiAgICAgICAgbGV0IGZvb2RTZWxlY3RvciA9ICh0aGlzLnJuZyAlIDgpXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5jb25zSW1hZ2VzW2Zvb2RTZWxlY3Rvcl0sIHRoaXMueCwgdGhpcy55LCB0aGlzLnRpbGVTaXplICsgMTMsIHRoaXMudGlsZVNpemUgKyAxMylcblxuICAgIH1cblxuXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uc3VtYWJsZTsiXSwibmFtZXMiOlsiRW52T2JqZWN0IiwiUGFzc2FibGVIaXRib3giLCJDb25zdW1hYmxlIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInRpbGVTaXplIiwidmVsb2NpdHkiLCJ0aWxlTWFwIiwiaGl0Ym94WE9mZnNldCIsImhpdGJveFlPZmZzZXQiLCJwYXNzSGl0Ym94WE9mZnNldCIsInBhc3NIaXRib3hZT2Zmc2V0Iiwicm5nIiwiY29uc0ltYWdlcyIsIkltYWdlIiwic3JjIiwiZm9vZEhpdGJveCIsImNvbnNvbGUiLCJsb2ciLCJwcm90b3R5cGUiLCJJTlRFUkFDVElWRUlURU1TIiwicHVzaCIsIl9kcmF3Rm9vZCIsImN0eCIsImZvb2RTZWxlY3RvciIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Consumable.js\n");

/***/ }),

/***/ "./src/scripts/EnvObject.js":
/*!**********************************!*\
  !*** ./src/scripts/EnvObject.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\n\nclass EnvObject {\n  //let rock = new EnvObject(col * this.tileSize, col * this.tileSize, this.tileSize, this.tileMap)\n\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.hitboxes = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize, this.tileSize, hitboxXOffset, hitboxYOffset);\n  }\n  drawHitboxes(ctx) {\n    // for debugging to see a semitransparent hitbox on all env objects like a rock.\n    // this.hitboxes.forEach((hitbox) => hitbox._debugDraw(ctx))\n    this.hitboxes._debugDraw(ctx);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnvObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9FbnZPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBZ0M7QUFJaEMsTUFBTUMsU0FBUyxDQUFDO0VBRVo7O0VBRUFDLFdBQVdBLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFO0lBQ2pGLElBQUksQ0FBQ04sQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUdBLENBQUM7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUV4QixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNDLE9BQU8sR0FBR0EsT0FBTztJQUV0QixJQUFJLENBQUNHLFFBQVEsR0FBRyxJQUFJVixpREFBTSxDQUFDLElBQUksQ0FBQ0csQ0FBQyxFQUFFLElBQUksQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0EsUUFBUSxFQUFFRyxhQUFhLEVBQUVDLGFBQWEsQ0FBQztFQUUxRztFQUVBRSxZQUFZQSxDQUFDQyxHQUFHLEVBQUU7SUFBRTtJQUNoQjtJQUNBLElBQUksQ0FBQ0YsUUFBUSxDQUFDRyxVQUFVLENBQUNELEdBQUcsQ0FBQztFQUNqQztBQUtKO0FBRUEsK0RBQWVYLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL0Vudk9iamVjdC5qcz9kYTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIaXRib3ggZnJvbSBcIi4vdXRpbHMuanNcIjtcblxuXG5cbmNsYXNzIEVudk9iamVjdCB7XG5cbiAgICAvL2xldCByb2NrID0gbmV3IEVudk9iamVjdChjb2wgKiB0aGlzLnRpbGVTaXplLCBjb2wgKiB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVNYXApXG4gICAgIFxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHRpbGVTaXplLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCA9IDAsIGhpdGJveFlPZmZzZXQgPSAwKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMudGlsZVNpemUgPSB0aWxlU2l6ZTtcblxuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gdmVsb2NpdHk7XG4gICAgICAgIHRoaXMudGlsZU1hcCA9IHRpbGVNYXA7XG5cbiAgICAgICAgdGhpcy5oaXRib3hlcyA9IG5ldyBIaXRib3godGhpcy54LCB0aGlzLnksIHRoaXMudGlsZVNpemUsIHRoaXMudGlsZVNpemUsIGhpdGJveFhPZmZzZXQsIGhpdGJveFlPZmZzZXQpO1xuICAgICAgICBcbiAgICB9XG5cbiAgICBkcmF3SGl0Ym94ZXMoY3R4KSB7IC8vIGZvciBkZWJ1Z2dpbmcgdG8gc2VlIGEgc2VtaXRyYW5zcGFyZW50IGhpdGJveCBvbiBhbGwgZW52IG9iamVjdHMgbGlrZSBhIHJvY2suXG4gICAgICAgIC8vIHRoaXMuaGl0Ym94ZXMuZm9yRWFjaCgoaGl0Ym94KSA9PiBoaXRib3guX2RlYnVnRHJhdyhjdHgpKVxuICAgICAgICB0aGlzLmhpdGJveGVzLl9kZWJ1Z0RyYXcoY3R4KTtcbiAgICB9XG5cblxuICAgIFxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEVudk9iamVjdCJdLCJuYW1lcyI6WyJIaXRib3giLCJFbnZPYmplY3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwidGlsZVNpemUiLCJ2ZWxvY2l0eSIsInRpbGVNYXAiLCJoaXRib3hYT2Zmc2V0IiwiaGl0Ym94WU9mZnNldCIsImhpdGJveGVzIiwiZHJhd0hpdGJveGVzIiwiY3R4IiwiX2RlYnVnRHJhdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/EnvObject.js\n");

/***/ }),

/***/ "./src/scripts/Menus.js":
/*!******************************!*\
  !*** ./src/scripts/Menus.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TileMap */ \"./src/scripts/TileMap.js\");\n\nclass BedMenu {\n  constructor(tileMap) {\n    this.nextDayMenuImg = new Image();\n    this.nextDayMenuImg.src = './src/graphics/menus/nextdaymenu.png';\n    this.selectionIndex = 1;\n    this.cursor = new Image();\n    this.cursor.src = './src/graphics/NinjaAdventure/HUD/NinePathRect/DialogueBubble.png';\n    this.options = [\"yes\", \"no\"];\n    this.tileMap = tileMap;\n  }\n  draw(ctx) {\n    ctx.drawImage(this.nextDayMenuImg, 0, 0);\n    if (this.selectionIndex === 0) {\n      ctx.drawImage(this.cursor, 120, 97);\n    } else if (this.selectionIndex === 1) {\n      ctx.drawImage(this.cursor, 265, 97);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (BedMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9NZW51cy5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUNnQztBQUVoQyxNQUFNQyxPQUFPLENBQUM7RUFFVkMsV0FBV0EsQ0FBRUMsT0FBTyxFQUFFO0lBRWxCLElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlDLEtBQUssRUFBRztJQUNsQyxJQUFJLENBQUNELGNBQWMsQ0FBQ0UsR0FBRyxHQUFHLHNDQUFzQztJQUNoRSxJQUFJLENBQUNDLGNBQWMsR0FBRyxDQUFDO0lBQ3ZCLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUlILEtBQUssRUFBRTtJQUN6QixJQUFJLENBQUNHLE1BQU0sQ0FBQ0YsR0FBRyxHQUFHLG1FQUFtRTtJQUVyRixJQUFJLENBQUNHLE9BQU8sR0FBRyxDQUNYLEtBQUssRUFDTCxJQUFJLENBQ1A7SUFHRCxJQUFJLENBQUNOLE9BQU8sR0FBR0EsT0FBTztFQUcxQjtFQUVBTyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFFTkEsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDUixjQUFjLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUV4QyxJQUFJLElBQUksQ0FBQ0csY0FBYyxLQUFLLENBQUMsRUFBRTtNQUMzQkksR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDSixNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUN2QyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNELGNBQWMsS0FBSyxDQUFDLEVBQUU7TUFDbENJLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ0osTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDdkM7RUFJSjtBQU1KO0FBRUEsK0RBQWVQLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL01lbnVzLmpzPzk4NDciXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgVGlsZU1hcCBmcm9tIFwiLi9UaWxlTWFwXCI7XG5cbmNsYXNzIEJlZE1lbnUge1xuXG4gICAgY29uc3RydWN0b3IgKHRpbGVNYXApIHtcblxuICAgICAgICB0aGlzLm5leHREYXlNZW51SW1nID0gbmV3IEltYWdlICgpO1xuICAgICAgICB0aGlzLm5leHREYXlNZW51SW1nLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9tZW51cy9uZXh0ZGF5bWVudS5wbmcnXG4gICAgICAgIHRoaXMuc2VsZWN0aW9uSW5kZXggPSAxO1xuICAgICAgICB0aGlzLmN1cnNvciA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmN1cnNvci5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSFVEL05pbmVQYXRoUmVjdC9EaWFsb2d1ZUJ1YmJsZS5wbmcnXG4gICAgICAgIFxuICAgICAgICB0aGlzLm9wdGlvbnMgPSBbXG4gICAgICAgICAgICBcInllc1wiLFxuICAgICAgICAgICAgXCJub1wiXG4gICAgICAgIF07XG5cblxuICAgICAgICB0aGlzLnRpbGVNYXAgPSB0aWxlTWFwO1xuXG5cbiAgICB9XG5cbiAgICBkcmF3KGN0eCkge1xuXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5uZXh0RGF5TWVudUltZywgMCwgMClcblxuICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25JbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmN1cnNvciwgMTIwLCA5NylcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGlvbkluZGV4ID09PSAxKSB7XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuY3Vyc29yLCAyNjUsIDk3KVxuICAgICAgICB9XG5cblxuXG4gICAgfVxuXG5cbiAgICBcblxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJlZE1lbnUiXSwibmFtZXMiOlsiVGlsZU1hcCIsIkJlZE1lbnUiLCJjb25zdHJ1Y3RvciIsInRpbGVNYXAiLCJuZXh0RGF5TWVudUltZyIsIkltYWdlIiwic3JjIiwic2VsZWN0aW9uSW5kZXgiLCJjdXJzb3IiLCJvcHRpb25zIiwiZHJhdyIsImN0eCIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Menus.js\n");

/***/ }),

/***/ "./src/scripts/Options.js":
/*!********************************!*\
  !*** ./src/scripts/Options.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass OptionsMenu {\n  constructor(tileMap) {\n    this.tileMap = tileMap;\n    this.selectionIndex = 0;\n    this.optionsMenu = new Image();\n    this.optionsMenu.src = './src/graphics/menus/updatedoptionsmenu.png';\n    this.aliveStatusImage = new Image();\n    this.aliveStatusImage.src = './src/graphics/menus/aliveStatus.png';\n    this.deadStatusImage = new Image();\n    this.deadStatusImage.src = './src/graphics/menus/deadStatus.png';\n    this.cursor = new Image();\n    this.cursor.src = './src/graphics/NinjaAdventure/HUD/NinePathRect/DialogueBubble.png';\n    this.options = [\"volume\", \"new game\"];\n  }\n  drawOptions(ctx) {\n    ctx.drawImage(this.optionsMenu, 0, 0);\n    // debugger\n    if (this.selectionIndex === 0) {\n      ctx.drawImage(this.cursor, 140, 218);\n    } else if (this.selectionIndex === 1) {\n      ctx.drawImage(this.cursor, 236, 218);\n    } else if (this.selectionIndex === 2) {\n      ctx.drawImage(this.cursor, 291, 238);\n    }\n  }\n  drawAliveStatus(ctx) {\n    ctx.drawImage(this.aliveStatusImage, 0, 0);\n  }\n  drawDeadStatus(ctx) {\n    ctx.drawImage(this.deadStatusImage, 0, 0);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (OptionsMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9PcHRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxXQUFXLENBQUM7RUFDZEMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFDO0lBRWhCLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPO0lBRXRCLElBQUksQ0FBQ0MsY0FBYyxHQUFHLENBQUM7SUFFdkIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUMsS0FBSyxFQUFHO0lBQy9CLElBQUksQ0FBQ0QsV0FBVyxDQUFDRSxHQUFHLEdBQUcsNkNBQTZDO0lBRXBFLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUcsSUFBSUYsS0FBSyxFQUFFO0lBQ25DLElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNELEdBQUcsR0FBRyxzQ0FBc0M7SUFFbEUsSUFBSSxDQUFDRSxlQUFlLEdBQUcsSUFBSUgsS0FBSyxFQUFFO0lBQ2xDLElBQUksQ0FBQ0csZUFBZSxDQUFDRixHQUFHLEdBQUcscUNBQXFDO0lBRWhFLElBQUksQ0FBQ0csTUFBTSxHQUFHLElBQUlKLEtBQUssRUFBRTtJQUN6QixJQUFJLENBQUNJLE1BQU0sQ0FBQ0gsR0FBRyxHQUFHLG1FQUFtRTtJQUVyRixJQUFJLENBQUNJLE9BQU8sR0FBRyxDQUNYLFFBQVEsRUFDUixVQUFVLENBQ2I7RUFFTDtFQUdBQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYkEsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDVCxXQUFXLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM3QztJQUNRLElBQUksSUFBSSxDQUFDRCxjQUFjLEtBQUssQ0FBQyxFQUFFO01BQzNCUyxHQUFHLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNKLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO0lBQ3hDLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQ04sY0FBYyxLQUFLLENBQUMsRUFBRTtNQUNsQ1MsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDSixNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztJQUN4QyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNOLGNBQWMsS0FBSyxDQUFDLEVBQUU7TUFDbENTLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ0osTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7SUFFeEM7RUFDSjtFQUVBSyxlQUFlQSxDQUFDRixHQUFHLEVBQUU7SUFDakJBLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ04sZ0JBQWdCLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztFQUM1QztFQUVBUSxjQUFjQSxDQUFDSCxHQUFHLEVBQUU7SUFDaEJBLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ0wsZUFBZSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7RUFDM0M7QUFDSjtBQUVBLCtEQUFlUixXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9zcmMvc2NyaXB0cy9PcHRpb25zLmpzP2ExNzciXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT3B0aW9uc01lbnUge1xuICAgIGNvbnN0cnVjdG9yKHRpbGVNYXApe1xuXG4gICAgICAgIHRoaXMudGlsZU1hcCA9IHRpbGVNYXA7XG5cbiAgICAgICAgdGhpcy5zZWxlY3Rpb25JbmRleCA9IDA7XG5cbiAgICAgICAgdGhpcy5vcHRpb25zTWVudSA9IG5ldyBJbWFnZSAoKTtcbiAgICAgICAgdGhpcy5vcHRpb25zTWVudS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvbWVudXMvdXBkYXRlZG9wdGlvbnNtZW51LnBuZydcblxuICAgICAgICB0aGlzLmFsaXZlU3RhdHVzSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdGhpcy5hbGl2ZVN0YXR1c0ltYWdlLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9tZW51cy9hbGl2ZVN0YXR1cy5wbmcnXG5cbiAgICAgICAgdGhpcy5kZWFkU3RhdHVzSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdGhpcy5kZWFkU3RhdHVzSW1hZ2Uuc3JjID0gJy4vc3JjL2dyYXBoaWNzL21lbnVzL2RlYWRTdGF0dXMucG5nJ1xuXG4gICAgICAgIHRoaXMuY3Vyc29yID0gbmV3IEltYWdlKCk7XG4gICAgICAgIHRoaXMuY3Vyc29yLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9IVUQvTmluZVBhdGhSZWN0L0RpYWxvZ3VlQnViYmxlLnBuZydcblxuICAgICAgICB0aGlzLm9wdGlvbnMgPSBbXG4gICAgICAgICAgICBcInZvbHVtZVwiLFxuICAgICAgICAgICAgXCJuZXcgZ2FtZVwiXG4gICAgICAgIF1cblxuICAgIH1cblxuXG4gICAgZHJhd09wdGlvbnMoY3R4KSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5vcHRpb25zTWVudSwgMCwgMCk7XG4vLyBkZWJ1Z2dlclxuICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25JbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmN1cnNvciwgMTQwLCAyMTgpXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3Rpb25JbmRleCA9PT0gMSkge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmN1cnNvciwgMjM2LCAyMTgpXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3Rpb25JbmRleCA9PT0gMikge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmN1cnNvciwgMjkxLCAyMzgpXG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRyYXdBbGl2ZVN0YXR1cyhjdHgpIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmFsaXZlU3RhdHVzSW1hZ2UsMCwwKTtcbiAgICB9XG5cbiAgICBkcmF3RGVhZFN0YXR1cyhjdHgpIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmRlYWRTdGF0dXNJbWFnZSwwLDApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgT3B0aW9uc01lbnU7Il0sIm5hbWVzIjpbIk9wdGlvbnNNZW51IiwiY29uc3RydWN0b3IiLCJ0aWxlTWFwIiwic2VsZWN0aW9uSW5kZXgiLCJvcHRpb25zTWVudSIsIkltYWdlIiwic3JjIiwiYWxpdmVTdGF0dXNJbWFnZSIsImRlYWRTdGF0dXNJbWFnZSIsImN1cnNvciIsIm9wdGlvbnMiLCJkcmF3T3B0aW9ucyIsImN0eCIsImRyYXdJbWFnZSIsImRyYXdBbGl2ZVN0YXR1cyIsImRyYXdEZWFkU3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/Options.js\n");

/***/ }),

/***/ "./src/scripts/Player.js":
/*!*******************************!*\
  !*** ./src/scripts/Player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\n/* harmony import */ var _foodUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foodUtils.js */ \"./src/scripts/foodUtils.js\");\n/* harmony import */ var _attackbox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attackbox.js */ \"./src/scripts/attackbox.js\");\n/* harmony import */ var _musics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./musics.js */ \"./src/scripts/musics.js\");\nconst DIRS = [\n// directions made here to refer to. \n[0, -1], [0, 1], [1, 0], [-1, 0]];\n\n\n\n\nconst foodSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Success1.wav\");\nconst treeSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/MiniImpact.wav\");\nconst ouchieSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Hit4.wav\");\nconst healingSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/PowerUp1.wav\");\nconst normalNextDaySound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Success3.wav\");\nconst swordSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Sword.wav\");\nconst menuSelectSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Menu/Menu2.wav\");\nconst badLuckSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/GameOver.wav\");\nconst optionsOpenSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Menu/Menu10.wav');\n// optionsOpenSound.sound.volume = 0.5\nconst optionsCloseSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Menu/Menu11.wav');\n// optionsCloseSound.sound.volume = 0.5\nconst toggleMuteOnSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Menu/Accept2.wav');\nconst toggleMuteOffSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Menu/Accept.wav');\nconst doorSound = new _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Game/Voice3.wav');\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nclass Player {\n  constructor(x, y, tileSize, velocity, tileMap) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.state = \"idle\";\n    this.muted = false;\n    this.vulnerable = true;\n\n    // const spriteCols = 10;\n    // const spriteRows = 6;\n    // const totalFrames = 6\n\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.playerImage = new Image();\n    this.playerImage.src = \"./src/graphics/sprites/characters/player.png\"; // idk how to use sprite sheets.. so I used the rock... \n    // this.playerImage.src = '../graphics/sprites/objects/rock_in_water_01.png'\n\n    this.dust = new Image();\n    this.dust.src = './src/graphics/sprites/particles/dust_particles_01.png';\n    this.currentMovingDirection = null;\n    document.addEventListener('keydown', this._keydown); // \n    document.addEventListener('keyup', this._keyup); // listener to set player current moving direction to null if they let go of a direction.\n\n    // this.currentFrame = 0; // why is there a duplicate here??? idk lmaoo \n\n    this.lastMovingDirection;\n    this.hitbox = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize - 5, this.tileSize, 1.5, -4);\n    this.passableHitbox = new _foodUtils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.x, this.y, this.tileSize - 4, this.tileSize, this, 1.5, -4);\n    this.attackBox = new _attackbox_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.x, this.y, this.tileSize + 13, this.tileSize + 13, this, 1.5, -4);\n    /// attackbox will be located out of bounds.... when the player attacks, it will temporarily move the attack box to the player x, y pos. \n\n    if (!Player.prototype.keyss) {\n      Player.prototype.keyss = {};\n    }\n\n    // logic is... the player needs to collect 5 food each day\n    // if he doesn't, he will die.\n    // colliding with a food increases this.food by one and \n    // also destroys the food on the map.. \n    // at the end of the day, the player spend the extra food they pick up\n    // to gain an ability to attack, increase speed, increase health.. \n    // gaining extra stats require more food per day. \n    // shaking trees make monsters more aggressive, but also drops more food.\n\n    this.targetFood = 5;\n    this.food = 3;\n    this.health = 3;\n  }\n  animateDeath(ctx) {\n    // this.currentFrame = 0\n\n    // debugger\n    let srcX = this.currentFrame * 48;\n    if (srcX > 96) {\n      srcX = 96;\n    }\n    let srcY = 447;\n    // debugger\n\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(-this.x - 32), Math.floor(this.y - 15), 39, 39);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(-this.x - 32), Math.floor(this.y - 15), 39, 39);\n      ctx.restore();\n    } else {\n      if (Object.keys(Player.prototype.keyss).some(key => !!Player.prototype.keyss[key])) {\n        ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(this.x - 17 + Math.random() * 2), Math.floor(this.y - 15 + Math.random() * 2), 39, 39);\n      } else {\n        ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(this.x - 17), Math.floor(this.y - 15), 39, 39);\n        // ctx.drawImage(this.playerImage, 32, 0, 32, 32, Math.floor(-this.x), Math.floor(this.y -15), -32, 32)\n      }\n    }\n\n    this.framesDrawn++;\n    if (this.framesDrawn > 45) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this.attackBox.x = 0;\n    this.attackBox.y = 0;\n  }\n  animateAttack(ctx) {\n    // console.log(\"reached line 124\")\n\n    let srcY;\n    let srcX = this.currentFrame * 48;\n\n    // debugger\n    if (srcX > 145) {\n      srcX = 144;\n    }\n    // console.log(srcX)\n\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right attack\n      srcY = 352;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up attack\n      srcY = 399;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 304;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 352;\n      srcX = this.currentFrame * 48 % 288 * 1;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle attack\n        srcY = 352;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle attack\n        srcY = 399;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 352;\n      } else {\n        // down idle\n        srcY = 304;\n      }\n    }\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(-this.x + 1 + 11), Math.floor(this.y - 15), -42, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(-this.x + 11), Math.floor(this.y - 15), -42, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 42, 32);\n      // if (srcX === 144) {\n      //     this.state = \"idle\";\n      // }\n      // ctx.restore()\n    }\n\n    if (srcX === 144) {\n      this.state = \"idle\";\n    }\n    if (srcX === 96) {\n      this.attackBox.x = 0;\n      this.attackBox.y = 0;\n    }\n    console.log(srcX);\n    this.framesDrawn++;\n    if (this.framesDrawn >= 11) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n  }\n  animate(ctx) {\n    //288 x 480\n    // requestAnimationFrame(animate)\n\n    // currentFrame = this.currentFrame % totalFrames;\n    // if (this.health === 0) {\n    //     /// DEATH ANIMATION LMAO\n    //     /// moved section up to be a separate function that is called when health === 0\n    //     console.log('dead')\n    //     this.currentFrame = 0\n    //     // return\n    // } /// currentFrame set to 0 at the moment of playerinput/action..\n    /// no need to check for it during the animation call. \n\n    let srcX = this.currentFrame * 48 % 288;\n    let srcY;\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      srcY = 208;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      srcY = 255;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 158;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 208;\n      srcX = this.currentFrame * 48 % 288 * 1;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        srcY = 64;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        srcY = 110;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 64;\n      } else {\n        // down idle\n        srcY = 16;\n      }\n    }\n\n    // really ugly code to mirror the right animation run.. :T\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(-this.x + 1), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(-this.x), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 32, 32);\n      // ctx.restore()\n    }\n\n    this.framesDrawn++;\n    if (this.framesDrawn >= 11) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n\n    // if (this.health === 0) {\n    //     /// DEATH ANIMATION LMAO\n    //     /// moved section up to be a separate function that is called when health === 0\n    //     console.log('dead')\n    //     this.currentFrame = 0\n\n    // }\n\n    // this.attackBox.x = 0;\n    // this.attackBox.y = 0;\n  }\n\n  _keydown = event => {\n    // pay attention to notes for which sections are doing what... \n    // debugger \n    // console.log(event)\n    if (!Player.prototype.keyss[event.code]) {\n      Player.prototype.keyss[event.code] = event.code;\n      console.log(Player.prototype.keyss[event.code]);\n    }\n    if (this.tileMap.gameStateFocused === false) {\n      if (event.key === 'Escape') {\n        if (this.tileMap.gameStateFocused === false) {\n          document.getElementById('modal-button-close').click();\n        }\n      }\n      return;\n      // if not focused on the game because extra info Modal is loaded, \n      // then don't take any inputs. \n    }\n\n    if (event.key === 'ArrowUp' || event.key === 'w') {\n      this.currentMovingDirection = DIRS[0];\n    } else if (event.key === 'ArrowDown' || event.key === \"s\") {\n      this.currentMovingDirection = DIRS[1];\n    } else if (event.key === 'ArrowLeft' || event.key === \"a\") {\n      if (this.health > 0) {\n        this.currentMovingDirection = DIRS[3];\n      }\n      if (this.tileMap.bedMenu.selectionIndex === 1 && this.tileMap.paused === true) {\n        this.tileMap.bedMenu.selectionIndex--;\n        menuSelectSound.play();\n      }\n      if (this.tileMap.optionsMenu.selectionIndex > 0 && this.tileMap.paused === true) {\n        this.tileMap.optionsMenu.selectionIndex--;\n        menuSelectSound.play();\n      }\n    } else if (event.key === 'ArrowRight' || event.key === \"d\") {\n      if (this.health > 0) {\n        this.currentMovingDirection = DIRS[2];\n      }\n      if (this.tileMap.bedMenu.selectionIndex === 0 && this.tileMap.paused === true) {\n        this.tileMap.bedMenu.selectionIndex++;\n        menuSelectSound.play();\n      }\n      if (this.tileMap.optionsMenu.selectionIndex < 2 && this.tileMap.paused === true) {\n        this.tileMap.optionsMenu.selectionIndex++;\n        menuSelectSound.play();\n      }\n    }\n    // console.log('down')\n\n    // while (!!this.currentMovingDirection) {\n    // if (this.tileMap.paused === true) {\n\n    // }    \n\n    // debugger\n    if (event.key === ' ' && this.x > 347 && this.x < 390 && this.y < 70 && this.y > 50) {\n      //// TREE SHAKING OPERATIONS\n      let randomChance = Math.random() * 80;\n      console.log(randomChance);\n      treeSound.play();\n      this.tileMap.shakeStatus = true;\n      setTimeout(() => this.tileMap.shakeStatus = false, 300);\n      if (randomChance < this.tileMap.freeFood / 2 && this.tileMap.freeFood > 0) {\n        if (!this.counter) {\n          this.counter = 0;\n        }\n        this.tileMap.freeFood--;\n        this.food++;\n        foodSound.play();\n        this.counter++;\n        console.log(this.counter);\n        // this.tileMap.freeFood = randomChance;\n      } else if (randomChance < 0.35 && this.tileMap.freeFood === 0) {\n        this.food++;\n        foodSound.play();\n      }\n      let rando = randomIntFromInterval(1, 100);\n      if (rando === 1) {\n        this.tileMap.getNextDayEnemies();\n        this.tileMap.getBadLuckEnemies();\n        badLuckSound.play();\n      }\n    } else if (event.key === ' ' && this.x > 88 && this.x < 145 && this.y < 210 && this.y > 190) {\n      //// TREE SHAKING OPERATIONS\n      treeSound.play();\n      if (!this.counter) {\n        this.counter = 0;\n      }\n      let randomChance = Math.random() * 80;\n      console.log(randomChance);\n      this.tileMap.shakeStatus2 = true;\n      setTimeout(() => this.tileMap.shakeStatus2 = false, 300);\n      // setTimeout(() => {\n      if (randomChance < this.tileMap.freeFood / 2 && this.tileMap.freeFood > 0) {\n        this.tileMap.freeFood--;\n        this.food++;\n        foodSound.play();\n        this.counter++;\n        console.log(this.counter);\n        // this.tileMap.freeFood = randomChance;\n      } else if (randomChance < 0.35 && this.tileMap.freeFood === 0) {\n        this.food++;\n        foodSound.play();\n      }\n      let rando = randomIntFromInterval(1, 100);\n      if (rando === 1) {\n        this.tileMap.getNextDayEnemies();\n        this.tileMap.getBadLuckEnemies();\n        badLuckSound.play();\n      }\n\n      // }, 10000)\n      //// BUSH SHAKING OPERATIONS\n    } else if (event.key === ' ' && this.tileMap.paused === false && this.x > 110 && this.x < 129 && this.y < 110 && this.y > 55) {\n      // debugger\n      /// DOOR OPERATIONS HERE\n      if (this.tileMap.isDoorOpen === false) {\n        this.tileMap.isDoorOpen = true;\n        doorSound.play();\n      }\n      //     if (this.tileMap.bedMenu.selectionIndex === 0){\n      //         //FUNCTION TO GO TO NEXT DAY\n      //         console.log('chose to go to next day near bed')\n      //     } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n      //         this.tileMap.isDoorOpen = false;\n      //         console.log('chose to remain in the same day near bed')\n      //     }\n      // }\n\n      // if (this.tileMap.isDoorOpen === true) {\n      //     this.tileMap.isDoorOpen = false;\n\n      //     this.tileMap._updateDoorHitbox()\n      //     // let papaya = this.tileMap._updateDoorHitbox.bind(this.tileMap)\n      //     // setTimeout(papaya, 50000)\n\n      //     Hitbox.updateCollisionStateToTrueIfColliding();\n      //     // debugger\n      //     if (this.hitbox.collisionState === true){\n\n      //         this.tileMap.isDoorOpen = true;\n      //     } \n\n      // } else {\n      //     this.tileMap.isDoorOpen = true;\n      // }\n    } else if (event.key === ' ' && this.tileMap.paused === true && this.tileMap.optionsToggle === true) {\n      // OPTIONS MENU FUNCTIONS\n      console.log('tried to select something in the esc menu');\n      if (this.tileMap.optionsMenu.selectionIndex === 0) {\n        if (this.muted === false) {\n          // toggleMuteOnSound.play()\n          _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.ALLSOUNDS.forEach(sound => sound.sound.volume = 0);\n          toggleMuteOnSound.sound.volume = 1;\n          toggleMuteOnSound.play();\n          this.muted = true;\n        } else if (this.muted === true) {\n          _musics_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.ALLSOUNDS.forEach(sound => sound.sound.volume = 1);\n          toggleMuteOffSound.play();\n          this.muted = false;\n        }\n      } else if (this.tileMap.optionsMenu.selectionIndex === 1) {\n        window.location.reload(false);\n      } else if (this.tileMap.optionsMenu.selectionIndex === 2) {\n        // LOAD MODAL EXTRA MENU WITH GITHUB AND TIPS \n        document.getElementById('modal-button').click();\n        //\n        //\n        //\n        this.tileMap.gameStateFocused = false;\n      }\n      /// escape menu functionality \n    } else if (this.health > 0 && event.key === ' ' && this.x > 90 && this.x < 100 && this.y < 60 && this.y > 46) {\n      //// BED MENU OPERATIONS\n      // if (this.tileMap.paused === true){\n      // if (this.tileMap.bedMenu.selectionIndex === 0){\n      //     //FUNCTION TO GO TO NEXT DAY\n      //     console.log('chose to go to next day near bed')\n      // } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n      //     this.tileMap.paused = false;\n      //     console.log('chose to remain in the same day near bed')\n      // }\n      // }\n\n      if (this.tileMap.paused === false) {\n        this.tileMap.paused = true;\n      } else {\n        if (this.tileMap.bedMenu.selectionIndex === 0) {\n          //FUNCTION TO GO TO NEXT DAY\n          this.tileMap.getNextDayFoodObjects();\n          this.tileMap.getNextDayEnemies();\n          this.tileMap.level++;\n          console.log('chose to go to next day near bed');\n          this.tileMap.paused = false;\n          this.food = this.food - this.targetFood - Math.floor(this.tileMap.level * .25);\n          if (this.food < 0) {\n            if (this.health > 0) {\n              this.health--;\n              ouchieSound.play();\n              this.vulnerable = false;\n              // console.log(this.vulnerable)\n              const binded_resetVuln = this._resetVuln.bind(this);\n              setTimeout(binded_resetVuln, 3000);\n            }\n            this.food = 0;\n            if (this.health === 0) {\n              ///// update local storage here!\n\n              this.currentFrame = 0;\n            }\n          } else {\n            if (this.health < 3 && this.food > 1) {\n              this.food--;\n              this.health++;\n              healingSound.play();\n            } else if (this.health === 3 && this.food > 1) {\n              normalNextDaySound.play();\n            }\n          }\n          this.tileMap.freeFood = 10;\n        } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n          this.tileMap.paused = false;\n          console.log('chose to remain in the same day near bed');\n        }\n      }\n    } else if (event.key === ' ' && this.state === \"idle\") {\n      console.log('attacking');\n      swordSound.play();\n      this.state = \"attacking\";\n      this.currentFrame = 0;\n      this._moveAttackBox();\n      /// make an attacking animation.. attacking logic can go in here..\n      /// attacking animation occurs in the gameloop engine by checking this.state. \n      // ATTACK FUNCTION HERE; not written yet because I have no enemies to test on.. \n      // will come back later.  \n    } else if (event.key === 'Escape') {\n      if (this.tileMap.paused === false) {\n        this.tileMap.paused = true;\n        this.tileMap.optionsToggle = true;\n        optionsOpenSound.play();\n      } else {\n        this.tileMap.paused = false;\n        this.tileMap.optionsToggle = false;\n        optionsCloseSound.play();\n      }\n      console.log('opened options menu');\n    }\n  };\n  _moveAttackBox() {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      this.attackBox.x = this.x + 7;\n      this.attackBox.y = this.y - 4;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      this.attackBox.x = this.x - 8;\n      this.attackBox.y = this.y - 15;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      this.attackBox.x = this.x - 5.5;\n      this.attackBox.y = this.y + 5;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      this.attackBox.x = this.x - 18;\n      this.attackBox.y = this.y - 4;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        this.attackBox.x = this.x + 7;\n        this.attackBox.y = this.y - 4;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        this.attackBox.x = this.x - 8;\n        this.attackBox.y = this.y - 15;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        this.attackBox.x = this.x - 18;\n        this.attackBox.y = this.y - 4;\n      } else {\n        // down idle\n        this.attackBox.x = this.x - 5.5;\n        this.attackBox.y = this.y + 5;\n      }\n    }\n\n    // binded_resetAttackBoxPos = this._resetAttackBoxPos.bind(this);\n\n    // setTimeout(binded_resetAttackBoxPos, 3000)\n\n    // this.attackBox.x = 0;\n    // this.attackBox.y = 0;\n  }\n\n  // _resetAttackBoxPos () {\n  //     debugger\n  //     this.attackBox.x = 0;\n  //     this.attackBox.y = 0;\n  // }\n\n  _resetVuln() {\n    if (this.vulnerable === false) {\n      // debugger\n      this.vulnerable = true;\n    }\n  }\n  _keyup = event => {\n    Player.prototype.keyss[event.code] = null;\n\n    // debugger\n    if (event.code === 'Space') {\n      if (this.tileMap.shakeStatus === true) {\n        this.tileMap.shakeStatus = false;\n      }\n    } else {\n      console.log('key was let go');\n      // console.log('up')\n      // this.lastLastMovingDirectionLmao = this.lastMovingDirection; // this doesn't work lol\n      // note here.. attempting to make movement more fluid.. \n\n      // if (!!this.currentMovingDirection){\n      this.lastMovingDirection = this.currentMovingDirection;\n      // }\n\n      this.currentMovingDirection = null;\n      if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n        let stillHeldKey;\n        Object.values(Player.prototype.keyss).forEach(value => {\n          if (!!value) {\n            stillHeldKey = value;\n          }\n        });\n        // console.log(stillHeldKey)\n        if (this.health > 0) {\n          if (stillHeldKey === 'ArrowUp' || stillHeldKey === \"w\") {\n            this.currentMovingDirection = DIRS[0];\n          } else if (stillHeldKey === 'ArrowDown' || stillHeldKey === \"s\") {\n            this.currentMovingDirection = DIRS[1];\n          } else if (stillHeldKey === 'ArrowLeft' || stillHeldKey === \"a\") {\n            this.currentMovingDirection = DIRS[3];\n          } else if (stillHeldKey === 'ArrowRight' || stillHeldKey === \"d\") {\n            // debugger\n            this.currentMovingDirection = DIRS[2];\n          }\n        }\n\n        // console.log(this.currentMovingDirection)\n      }\n    }\n  };\n\n  _drawDust(ctx) {\n    // ctx.drawImage(this)\n    console.log(ctx);\n    ctx.drawImage(this.dust, this.x + 1, this.y - 15);\n    // wanted to implement a dust particle effect while moving... but too much work for nothing..\n    // need to focus more on functionality at this beginning state.. Can come back later maybe. \n  }\n\n  move(ctx) {\n    // move takes in a context to call movement specific additional drawings like dust particles. \n\n    console.log([this.x, this.y]);\n    if (this.passableHitbox.detectionState === true) {\n      // debugger\n      this._isCollidingWithFood();\n      this._isCollidingWithAttack();\n    }\n    if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n      if (!!this.currentMovingDirection) {\n        // let oldX = this.x;\n        // let oldY = this.y;\n\n        this.y = this.currentMovingDirection[1] * this.velocity + this.y;\n        this.x = this.currentMovingDirection[0] * this.velocity + this.x;\n        this.hitbox.x = this.x;\n        this.hitbox.y = this.y;\n        this.passableHitbox.x = this.x;\n        this.passableHitbox.y = this.y;\n        // this.attackBox.x = this.x;\n        // this.attackBox.y = this.y;\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n        while (this.hitbox.collisionState === true) {\n          // debugger\n          this.y = this.currentMovingDirection[1] * -1 * this.velocity + this.y;\n          this.x = this.currentMovingDirection[0] * -1 * this.velocity + this.x;\n          this.hitbox.x = this.x;\n          this.hitbox.y = this.y;\n          this.passableHitbox.x = this.x;\n          this.passableHitbox.y = this.y;\n          // this.attackBox.x = this.x;\n          // this.attackBox.y = this.y;\n          _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n\n          // debugger\n          return;\n        }\n\n        // this._drawDust(ctx); // see note in _drawDust.\n\n        // if (this.hitbox.collisionState === true) {\n        //     // debugger\n        //     this.y = this.currentMovingDirection[1]*(-1)* this.velocity + this.y; \n        //     this.x = this.currentMovingDirection[0]*(-1)* this.velocity + this.x;\n        //     this.hitbox.x = this.x;\n        //     this.hitbox.y = this.y;\n        //     // debugger\n        // }\n      }\n\n      if (!(this.x > 90 && this.x < 129 && this.y < 110 && this.y > 55)) {\n        this.tileMap.isDoorOpen = false;\n        // doorSound.play();\n      } // autocloses door if out of the coordinates. \n\n      // console.log([this.x, this.y])\n      // console.log(this.x)\n      // console.log(this.y)\n      // console.log(this.currentMovingDirection)\n    }\n  }\n\n  _isCollidingWithAttack() {\n    // console.log('DETECT DAMAGE COLLISIONS')\n\n    if (this.vulnerable === false) {\n      return;\n    }\n    if (this.passableHitbox.detectionState === true) {\n      let detections = this.passableHitbox._detectingWhat();\n      // debugger;\n\n      for (let i = 0; i < detections.length; i++) {\n        let questionedDetection = detections[i];\n\n        // debugger;\n        if (questionedDetection.tiedObj.constructor.name === \"Skeleton\" && questionedDetection.constructor.name === \"AttackBox\") {\n          console.log('Attacked by skeleton');\n          this.health--;\n          if (this.health < 0) {\n            this.health = 0;\n            f;\n          }\n          ouchieSound.play();\n          if (this.health === 0) {\n            //// update local storage here\n\n            this.currentFrame = 0;\n            this.hitbox.x = 0;\n            this.hitbox.y = 0;\n          }\n          this.vulnerable = false;\n          let binded_resetVuln = this._resetVuln.bind(this);\n          setTimeout(binded_resetVuln, 3000);\n\n          // play hurt sound here. \n        }\n      }\n    }\n  }\n\n  _isCollidingWithFood() {\n    if (this.passableHitbox.detectionState === true) {\n      let detections = this.passableHitbox._detectingWhat();\n      for (let i = 0; i < detections.length; i++) {\n        let questionedItem = detections[i];\n        // debugger\n        if (questionedItem.tiedObj.constructor.name === \"Consumable\") {\n          console.log('food/consumable detected by player');\n          this.food++;\n          foodSound.play();\n          if (this.food > 99) {\n            this.food = 99;\n          }\n          // questionedItem.tiedObj.hitbox = null;\n          // questionedItem.tiedObj.passableHitbox = null;\n          questionedItem.tiedObj.hitboxes.x = 0;\n          questionedItem.tiedObj.hitboxes.y = 0;\n          questionedItem.tiedObj.x = 0;\n          questionedItem.tiedObj.y = 0;\n          questionedItem.x = 0;\n          questionedItem.y = 0;\n          // debugger;\n          // questionedItem.tiedObj = null;\n          // questionedItem.x = null;\n          // questionedItem.y = null;\n          console.log(_foodUtils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.PASSABLEHITBOXES);\n          // this.passableHitbox.detectionState = false;\n          // debugger\n        }\n      }\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Player.js\n");

/***/ }),

/***/ "./src/scripts/Skeleton.js":
/*!*********************************!*\
  !*** ./src/scripts/Skeleton.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foodUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./foodUtils */ \"./src/scripts/foodUtils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _musics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./musics */ \"./src/scripts/musics.js\");\n/* harmony import */ var _attackbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attackbox */ \"./src/scripts/attackbox.js\");\n/* harmony import */ var webpack_merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! webpack-merge */ \"./node_modules/webpack-merge/dist/index.js\");\n/* harmony import */ var webpack_merge__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(webpack_merge__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst hitSound = new _musics__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('./src/graphics/NinjaAdventure/Sounds/Game/Hit.wav');\nhitSound.sound.volume = 0.3;\nconst DIRS = [\n// directions made here to refer to. \n[0, -1], [0, 1], [1, 0], [-1, 0]];\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nclass TraversalPoint {\n  constructor(x, y, velocity, height, width, xOffset, yOffset, excludedXandY) {\n    this.nextPoints = [];\n    this.parentPoints = null;\n    this.x = Math.floor(x);\n    this.y = Math.floor(y);\n    this.velocity = velocity;\n    this.height = height;\n    this.width = width;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    if (!excludedXandY) {\n      excludedXandY = [[this.x, this.y]];\n    } else {\n      excludedXandY.push([this.x, this.y]);\n    }\n\n    // this.hypotheticalHitBox = {x: x, y: y, height: height, width: width, xOffset: xOffset, yOffset: yOffset}\n  }\n\n  _hypotheticalCollision(hypotheticalHitBox) {\n    // debugger\n    for (let i = 0; i < _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.ALLHITBOXESMADE.length; i++) {\n      let hitbox1 = _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.ALLHITBOXESMADE[i];\n      let hitbox2 = hypotheticalHitBox;\n      if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"]._anyCollision(hitbox1, hitbox2)) {\n        return true;\n        debugger;\n      } else {\n        return false;\n      }\n    }\n  }\n  generateNextPointsAndSetParent() {\n    for (let i = 0; i < DIRS.length; i++) {\n      let questionedDir = DIRS[i];\n      let hypotheticalHitBox = {\n        x: Math.floor(this.x + questionedDir[0] * this.velocity),\n        y: Math.floor(this.y + questionedDir[1] * this.velocity),\n        height: this.height,\n        width: this.width,\n        xOffset: this.xOffset,\n        yOffset: this.yOffset\n      };\n      if (this._hypotheticalCollision(hypotheticalHitBox) && !excludedXandY.includes([hypotheticalHitBox.x, hypotheticalHitBox.y])) {\n        let theNextPoint = new TraversalPoint(this.x + questionedDir[0] * this.velocity, this.y + questionedDir[1] * this.velocity, this.velocity, this.height, this.width, this.xOffset, this.yOffset);\n        this.nextPoints.push(theNextPoint);\n        theNextPoint.parent = this;\n      }\n    }\n  }\n  findPath(destination) {}\n}\nclass Skeleton {\n  constructor(x, y, tileSize, velocity, tileMap) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.vulnerable = true;\n    this.aggressionState = \"idle\";\n    this.guardTree = false;\n    this.gottaChange = false;\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.skeleboyImage = new Image();\n    this.skeleboyImage.src = \"./src/graphics/sprites/characters/skeleton.png\";\n    this.currentMovingDirection = null;\n    this.lastMovingDirection;\n    this.hitbox = new _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.x, this.y, this.tileSize - 7, this.tileSize - 2, -2, -3);\n    this.passableHitbox = new _foodUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize, this.tileSize, this, -5.5, -3);\n    this.attackBox = new _attackbox__WEBPACK_IMPORTED_MODULE_3__[\"default\"](0, 0, this.tileSize + 10, this.tileSize + 10, this, -12, -7);\n    this.health = 3;\n    this.player = tileMap.player;\n    this.oldx;\n    this.oldy;\n  }\n  animateDeath(ctx) {\n    // let srcX = this.currentFrame * 1 % 384;\n    let srcX = 64 * this.currentFrame + 12;\n    // console.log(srcX)\n    if (srcX > 268) {\n      srcX = 268;\n    }\n    let srcY = 282;\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {// right\n      // srcY = 300;\n    } else if (this.currentMovingDirection === DIRS[0]) {// up\n      // srcY = 300;\n    } else if (this.currentMovingDirection === DIRS[1]) {// down\n      // srcY = 300;\n    } else if (this.currentMovingDirection === DIRS[3]) {// left\n      // srcY = 300;  \n      // srcX = (this.currentFrame * 48 % 288) * 1\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {// right idle\n        // srcY = 300;\n      } else if (this.lastMovingDirection === DIRS[0]) {// up idle\n        // srcY = 290;\n      } else if (this.lastMovingDirection === DIRS[3]) {// left idle... same as right idle lmao\n        // srcY = 290;\n      } else {// down idle\n        // debugger\n        // srcY = 290;\n      }\n    }\n    if (this.currentMovingDirection === DIRS[3]) {\n      // let srcX = 64 * this.currentFrame % 384 + 12;\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 32, 32, Math.floor(-this.x + 7), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 32, 32, Math.floor(-this.x + 6), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      // console.log('trying to draw basic')\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 33, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 33, 32);\n      // ctx.restore()\n    }\n\n    // console.log(this.currentMovingDirection)\n\n    // console.log('trying to draw skeleboy')\n\n    this.framesDrawn++;\n    if (this.framesDrawn >= 9) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this.attackBox.x = 0;\n    this.attackBox.y = 0;\n  }\n  animateAttack(ctx) {\n    let srcX = 64 * this.currentFrame % 320 + 12;\n    let srcY;\n    console.log(srcX);\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      srcY = 155;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      srcY = 155;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 155;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 155;\n      // srcX = (this.currentFrame * 48 % 288) * 1\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        srcY = 155;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        srcY = 155;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 155;\n      } else {\n        // down idle\n        // debugger\n        srcY = 155;\n      }\n    }\n    if (this.currentMovingDirection === DIRS[3]) {\n      // let srcX = 64 * this.currentFrame % 384 + 12;\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 50, 32, Math.floor(-this.x + 26), Math.floor(this.y - 15), -50, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 50, 32, Math.floor(-this.x + 26), Math.floor(this.y - 15), -50, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      // console.log('trying to draw basic')\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 50, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 50, 32);\n      // ctx.restore()\n    }\n\n    // console.log(this.currentMovingDirection)\n\n    // console.log('trying to draw skeleboy')\n\n    // if(srcX === 204){\n    //     this.attackBox.x = 0;\n    //     this.attackBox.y = 0;\n    // } \n\n    if (srcX === 204) {\n      this.attackBox.x = this.x;\n      this.attackBox.y = this.y;\n    } else {\n      this.attackBox.x = 0;\n      this.attackBox.y = 0;\n    }\n    this.framesDrawn++;\n    if (this.framesDrawn >= 12) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n  }\n  animate(ctx) {\n    // let srcX = this.currentFrame * 1 % 384;\n    let srcX = 64 * this.currentFrame % 384 + 12;\n    let srcY;\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      srcY = 91;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      srcY = 91;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 91;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 91;\n      // srcX = (this.currentFrame * 48 % 288) * 1\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        srcY = 26;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        srcY = 26;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 26;\n      } else {\n        // down idle\n        // debugger\n        srcY = 26;\n      }\n    }\n    if (this.currentMovingDirection === DIRS[3]) {\n      // let srcX = 64 * this.currentFrame % 384 + 12;\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 32, 32, Math.floor(-this.x + 7), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n      // } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      //     ctx.save();\n      //     ctx.scale(-1, 1);\n      //     ctx.drawImage(this.skeleboyImage, srcX, srcY, 32, 32, Math.floor(-this.x + 6), Math.floor(this.y -15), -32, 32)\n      //     ctx.restore();\n    } else {\n      // ctx.save()\n      // console.log('trying to draw basic')\n      ctx.drawImage(this.skeleboyImage, srcX, srcY, 33, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 33, 32);\n      // ctx.restore()\n    }\n\n    // console.log(this.currentMovingDirection)\n\n    // console.log('trying to draw skeleboy')\n\n    this.framesDrawn++;\n    if (this.framesDrawn >= 9) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this.attackBox.x = 0;\n    this.attackBox.y = 0;\n  }\n  _setIdleMovement() {\n    // function randomIntFromInterval(min, max) { // min and max included \n    //     return Math.floor(Math.random() * (max - min + 1) + min)\n    //   }\n    const rndInt = randomIntFromInterval(1, 4);\n    const changeDirChance = randomIntFromInterval(1, 5);\n    if (changeDirChance <= 2 && this.currentFrame % 4 === 0) {\n      this.lastMovingDirection = this.currentMovingDirection;\n      // let randomDirNum = Math.floor(Math.random() * 10 / 4)\n      this.currentMovingDirection = DIRS[rndInt - 1];\n    }\n  }\n  move() {\n    let distance = this._calcDistanceFromPlayer();\n    if (distance < 45) {\n      this.aggressionState = \"aggro\";\n    } else {\n      this.aggressionState = \"idle\";\n    }\n    let ran = randomIntFromInterval(1, 2);\n    if (this.aggressionState === \"idle\" && ran === 2) {\n      this._setIdleMovement();\n    }\n    if (this.aggressionState === \"aggro\") {\n      this._pathToTreeNonPathfinder([this.tileMap.player.x, this.tileMap.player.y]);\n    }\n\n    // if (this.guardTree === true) {\n    //     // debugger;\n    //     // validDirs = this._pathToShakingTree(this.x, this.y, this.currentMovingDirection, [367, 67], this.velocity)\n    //     // this.currentMovingDirection = validDirs[0]\n    //     this._pathToTreeNonPathfinder([370, 66])\n    // }\n    /// BROKEN CODE ATM. \n\n    if (this.passableHitbox.detectionState === true) {\n      // debugger\n      this._isCollidingWithAttack();\n    }\n    if (!!this.currentMovingDirection) {\n      // let oldX = this.x;\n      // let oldY = this.y;\n\n      this.oldx = this.x;\n      this.oldy = this.y;\n      this.y = this.currentMovingDirection[1] * this.velocity + this.y;\n      this.x = this.currentMovingDirection[0] * this.velocity + this.x;\n      this.hitbox.x = this.x;\n      this.hitbox.y = this.y;\n      this.passableHitbox.x = this.x;\n      this.passableHitbox.y = this.y;\n      _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateCollisionStateToTrueIfColliding();\n      while (this.hitbox.collisionState === true) {\n        // debugger\n        this.y = this.currentMovingDirection[1] * -1 * this.velocity + this.y;\n        this.x = this.currentMovingDirection[0] * -1 * this.velocity + this.x;\n        this.hitbox.x = this.x;\n        this.hitbox.y = this.y;\n        this.passableHitbox.x = this.x;\n        this.passableHitbox.y = this.y;\n        _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateCollisionStateToTrueIfColliding();\n\n        // debugger\n        // return\n      }\n    }\n  }\n\n  _pathToTreeNonPathfinder(destination) {\n    // debugger;\n    for (let i = 0; i < DIRS.length; i++) {\n      let questionedDir = DIRS[i];\n      let nextX = this.x + questionedDir[0];\n      let nextY = this.y + questionedDir[1];\n      let dx = Math.abs(destination[0] - this.x);\n      let dy = Math.abs(destination[1] - this.y);\n      let nextdx = Math.abs(destination[0] - nextX);\n      let nextdy = Math.abs(destination[1] - nextY);\n\n      // debugger;\n\n      if (nextdx <= dx && nextdy <= dy && !(dx === nextdx && dy === nextdy)) {\n        this.lastMovingDirection = this.currentMovingDirection;\n        this.currentMovingDirection = questionedDir;\n      }\n      ;\n    }\n  }\n  _pathToShakingTree(posX, posY, movingDirection, destination, velocity, excludedXandY) {\n    ///broken atm \n    // debugger\n    if (!excludedXandY) {\n      // debugger\n      excludedXandY = [[Math.floor(posX), Math.floor(posY)]];\n    } else {\n      excludedXandY.push([posX, posY]);\n    }\n    let newPosX = Math.floor(movingDirection[0] + posX);\n    let newPosY = Math.floor(movingDirection[1] + posY);\n    if (newPosX === destination[0] && newPosY === destination[1]) {\n      return true;\n    }\n    let newXandY = [newPosX, newPosY];\n\n    // debugger\n    if (excludedXandY.includes(newXandY)) {\n      debugger;\n      return null;\n    }\n    let hypotheticalHitBox = {\n      x: newPosX,\n      y: newPosY,\n      width: 16 - 7,\n      height: 16 - 2,\n      xOffset: -2,\n      yOffset: -3\n    };\n\n    // debugger\n    if (this._hypotheticalCollision(hypotheticalHitBox)) {\n      // debugger\n      return null;\n    }\n    let validDIRS = [];\n    let possibleDIRS = DIRS.filter(dir => {\n      if (dir !== movingDirection) {\n        return dir;\n      }\n    });\n    // debugger\n    //367, 67\n\n    for (let i = 0; i < possibleDIRS.length; i++) {\n      let questionedDir = possibleDIRS[i];\n      if (this._pathToShakingTree(newPosX, newPosY, questionedDir, destination, velocity, excludedXandY)) {\n        // debugger\n        validDIRS.push(questionedDir);\n      }\n    }\n    return validDIRS;\n  }\n  _hypotheticalCollision(hypotheticalHitBox) {\n    // debugger\n    for (let i = 0; i < _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.ALLHITBOXESMADE.length; i++) {\n      let hitbox1 = _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.ALLHITBOXESMADE[i];\n      let hitbox2 = hypotheticalHitBox;\n      if (this._anyCollision(hitbox1, hitbox2)) {\n        // debugger\n\n        console.log(_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"]._anyCollision);\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  _anyCollision(box1, box2) {\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _calcDistanceFromPlayer() {\n    let dx = this.player.x - this.x;\n    let dy = this.player.y - this.y;\n    let distance = Math.sqrt(dx * dx + dy * dy);\n    return distance;\n  }\n  _isCollidingWithAttack() {\n    // console.log('DETECT DAMAGE COLLISIONS')\n\n    if (this.vulnerable === false) {\n      return;\n    }\n    if (this.passableHitbox.detectionState === true) {\n      let detections = this.passableHitbox._detectingWhat();\n      // debugger;\n\n      for (let i = 0; i < detections.length; i++) {\n        let questionedDetection = detections[i];\n\n        // debugger;\n        if (questionedDetection.tiedObj.constructor.name === \"Player\" && questionedDetection.constructor.name === \"AttackBox\") {\n          console.log('Attacked by player');\n          this.health--;\n          this.velocity = 0.3;\n          hitSound.play();\n          if (this.health === 0) {\n            this.tileMap.totalEnemiesKilled++;\n            this.currentFrame = 0;\n            this.hitbox.x = 0;\n            this.hitbox.y = 0;\n          }\n          this.vulnerable = false;\n          let binded_resetVuln = this._resetVuln.bind(this);\n          setTimeout(binded_resetVuln, 1000);\n\n          // play hurt sound here. \n        }\n      }\n    }\n  }\n\n  _resetVuln() {\n    if (this.vulnerable === false) {\n      this.vulnerable = true;\n      this.velocity = 0.7;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Skeleton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Skeleton.js\n");

/***/ }),

/***/ "./src/scripts/TileMap.js":
/*!********************************!*\
  !*** ./src/scripts/TileMap.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _Consumable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Consumable */ \"./src/scripts/Consumable.js\");\n/* harmony import */ var _Skeleton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Skeleton */ \"./src/scripts/Skeleton.js\");\n/* harmony import */ var _musics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./musics */ \"./src/scripts/musics.js\");\n\n\n\n\n\n\n\n\n// const gameStartMusic = new Sound('./src/graphics/NinjaAdventure/Musics/16 = Melancholia.ogg')\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nclass TileMap {\n  constructor(tileSize) {\n    this.tileSize = tileSize;\n    this.gameStartMusic = new _musics__WEBPACK_IMPORTED_MODULE_5__[\"default\"]('./src/graphics/NinjaAdventure/Musics/16 - Melancholia.ogg');\n    this.paused = false;\n    this.optionsToggle = false;\n    this.grass = new Image();\n    this.grass.src = \"./src/graphics/sprites/tilesets/grass.png\";\n    this.water = new Image();\n    this.water.src = './src/graphics/sprites/tilesets/water2.png';\n    this.wro = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.wro[0].src = './src/graphics/sprites/objects/rock_in_water_01.png';\n    this.wro[1].src = './src/graphics/sprites/objects/rock_in_water_02.png';\n    this.wro[2].src = './src/graphics/sprites/objects/rock_in_water_03.png';\n    this.wro[3].src = './src/graphics/sprites/objects/rock_in_water_04.png';\n    this.wro[4].src = './src/graphics/sprites/objects/rock_in_water_05.png';\n    this.wro[5].src = './src/graphics/sprites/objects/rock_in_water_06.png';\n    this.map1 = {\n      0: new Image(),\n      1: new Image(),\n      2: new Image(),\n      3: new Image(),\n      4: new Image(),\n      5: new Image()\n    };\n    this.map1[0].src = './src/graphics/maps/map1frame1.png';\n    this.map1[1].src = './src/graphics/maps/map1frame2.png';\n    this.map1[2].src = './src/graphics/maps/map1frame3.png';\n    this.map1[3].src = './src/graphics/maps/map1frame4.png';\n    this.map1[4].src = './src/graphics/maps/map1frame5.png';\n    this.map1[5].src = './src/graphics/maps/map1frame6.png';\n    this.room = new Image();\n    this.room.src = './src/graphics/maps/room3.png';\n    this.isDoorOpen = false;\n    this.doorClosed = new Image();\n    this.doorClosed.src = './src/graphics/maps/doorclosed.png';\n    this.doorOpen = new Image();\n    this.doorOpen.src = './src/graphics/maps/dooropen.png';\n    this.doorObj; // a door is assigned to it below in getObjects();\n\n    this.gameStateFocused = false;\n    this.objectsImage = new Image();\n    this.objectsImage.src = './src/graphics/sprites/objects/objects.png';\n\n    // because food should disappear after interacting with the player, \n    // I moved the food rendering to the foodUtils.js page.. and it'll just be another loop\n    // that I call during my index rendering... omg so messy. haha\n    // this.foodImage = new Image();\n    // this.foodImage.src = \"./src/graphics/NinjaAdventure/Items/Food/Fish.png\"\n\n    this.shakeFactor = 1;\n    this.shakeStatus = false;\n    this.shakeStatus2 = false;\n    this.freeFood = 10;\n    this.deads = [];\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.level = 1;\n    if (!localStorage.getItem('BESTDAY')) {\n      this.bestLevel = 1;\n    } else {\n      // debugger;\n      this.bestLevel = JSON.parse(localStorage.getItem('BESTDAY'));\n    }\n    if (!localStorage.getItem('ENEMIES')) {\n      this.totalEnemiesKilled = 0;\n    } else {\n      // debugger;\n      this.totalEnemiesKilled = JSON.parse(localStorage.getItem('BESTDAY'));\n    }\n    this.enemies = [];\n\n    //this.bedMenu is assigned in index because of poor file management... :(\n    // this.player is assigned in index because of poor file management again sorry lmao\n  }\n\n  updateScores() {\n    if (this.level > this.bestLevel) {\n      // debugger\n      const newScore = this.level;\n      localStorage.setItem('BESTDAY', JSON.stringify(newScore));\n    }\n    const bestday = JSON.parse(localStorage.getItem('BESTDAY'));\n    const thedayHTMLele = document.getElementById('days-count');\n    thedayHTMLele.innerHTML = bestday;\n    if (this.totalEnemiesKilled > JSON.parse(localStorage.getItem('ENEMIES'))) {\n      // debugger;\n      const newEnemyScore = this.totalEnemiesKilled;\n      localStorage.setItem('ENEMIES', JSON.stringify(newEnemyScore));\n    }\n    const bestkillcount = JSON.parse(localStorage.getItem('ENEMIES'));\n    const theEnemyHTMLele = document.getElementById('enemies-count');\n    theEnemyHTMLele.innerHTML = bestkillcount;\n  }\n\n  // P = player\n  theMap1 = [[' ', ' ', ' ', ' ', ' ', '  ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Ta', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', 'Wr', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', '  ', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', '  ', ' ', 'BN', 'BN', ' ', 'P', 'Gc', ' ', ' ', 'BN', 'BN', 'Wr', '  ', 'BN', '  ', '  ', '  ', 'BN', 'BN', 'BN', '  ', 'BN', 'BN', '  ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', 'Bd', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', ' ', 'BN', 'BN', 'BN', ' ', ' ', ' ', ' ', '  ', ' ', 'BN', 'BN', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', '  ', ' ', 'BN', '  ', ' ', ' '], [' ', 'Wr', ' ', 'BN', 'BN', 'BN', 'BN', 'Dc', 'BN', 'BN', 'BN', 'BN', 'Co', ' ', ' ', 'Co', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', 'Skt', 'Skt', 'Skt', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', ' ', 'Co', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Sk', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', 'Wr', ' ', 'BN', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', ' ', 'BN', '', ' ', 'Sk', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', ' ', 'BC', ' ', ' ', 'R1', 'R1', 'R1', 'R1', 'R2', ' ', ' ', ' ', 'Sk', ' ', 'Co', ' ', ' ', 'BN', ' ', ' ', ' ', 'BN', ' ', 'Co', ' ', 'BC', 'BN', ' ', ' '], [' ', 'BN', ' ', ' ', ' ', ' ', 'Bu', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', ' ', ' ', 'BN', ' ', ' ', ' '], [' ', 'BN', ' ', 'Co', ' ', ' ', '', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' '], [' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Sk', ' ', 'BN', ' ', 'Wr', ' '], [' ', 'BN', ' ', '  ', 'Co', ' ', 'Skt', 'Skt', 'Skt', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', 'BN', 'Co', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', '  ', ' ', '  ', 'BN', '  ', ' '], [' ', 'BN', ' ', ' ', 'Sk', ' ', ' ', 'BN', '  ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', 'BN', ' ', ' '], [' ', 'BN', 'BC', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Sk', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', '  '], [' ', ' ', 'BN', 'BC', '  ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', 'Co', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', 'SkG', ' ', 'Co', 'BN'], [' ', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN'], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Wr', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']];\n  draw(ctx) {\n    // debugger\n    // adding some more if then logic to render background map animations so that it\n    // doesn't feel like we're on a floating landmass lmao.\n\n    this.framesDrawn = this.framesDrawn + Math.floor(Math.random() * 10);\n    if (this.framesDrawn >= 45) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this._drawBaseMap(ctx);\n    this._drawRoom(ctx);\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === 'P') {\n          // logic to denote what to render given the value in the theMap1 array.\n          // for now, just trying to render grass.. \n          // this._drawGrass, but also render the player or something so that I can use a player to manip..\n          // this._drawGrass(ctx, col, row, this.tileSize);\n          // this.getPlayer()\n          // depreciated section.. player drawing handled in player file.\n        } else if (tile === 'BN') {\n\n          // RENDER BOUNDARY HITBOX HERE\n          // depreciated code logic... hitboxes will be in .getObjects() below.\n        } else if (tile === \"W\") {\n          this._drawWater(ctx, 25, 20, col, row, this.tileSize);\n        } else if (tile === \"M1\") {\n          this._drawWater(ctx, 80, 0, col, row, this.tileSize); // top right corner!!\n        } else if (tile === \"M2\") {\n          this._drawWater(ctx, 64, 0, col, row, this.tileSize); //\n        } else if (tile === \"M3\") {\n          this._drawWater(ctx, 64, 16, col, row, this.tileSize);\n        } else if (tile === \"M4\") {\n          this._drawWater(ctx, 80, 16, col, row, this.tileSize);\n        } else if (tile === \"Wr\") {\n          this._drawWro(ctx, col, row, this.tileSize);\n        } else if (tile === \"R2\") {\n          this._drawObject(ctx, 16, 16, 16, 16, row, col);\n        } else if (tile === \"R1\") {\n          this._drawObject(ctx, 0, 16, 16, 16, row, col);\n        } else if (tile === \"Ta\") {\n          this._drawObject(ctx, 50, 146, 47, 64, row, col, tile);\n        } else if (tile === \"Co\") {\n          // this._drawFood(ctx, col, row, this.tileSize)\n          // see notes above.\n        } else if (tile === \"Bd\") {\n          this._drawObject(ctx, 176, 32, 16, 32, row * .94, col * .95, \"Bd\");\n        } else if (tile === \"Bu\") {\n          this._drawObject(ctx, 49, 75, 46, 70, row * .85, col, \"Bu\");\n        } else {\n          // debugger\n          // this._drawGrass(ctx, col, row, this.tileSize);\n        }\n      }\n    }\n  }\n  draw2(ctx) {\n    // draw things here that need to be drawn after the player renders. \n\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Dc\") {\n          this._drawDoor(ctx);\n        }\n      }\n    }\n  }\n  _drawDoor(ctx) {\n    if (this.isDoorOpen === false) {\n      ctx.drawImage(this.doorClosed, 0, 0);\n      this._updateDoorHitbox();\n      // console.log(this.doorObj)\n    } else {\n      ctx.drawImage(this.doorOpen, 0, 0);\n      this._updateDoorHitbox();\n    }\n  }\n  _updateDoorHitbox() {\n    if (this.isDoorOpen === true) {\n      this.doorObj.hitboxes.x = 0;\n      this.doorObj.hitboxes.y = 0;\n    } else {\n      this.doorObj.hitboxes.x = 112;\n      this.doorObj.hitboxes.y = 80;\n    }\n  }\n  _drawRoom(ctx) {\n    ctx.drawImage(this.room, 0, 0);\n  }\n  _drawBaseMap(ctx) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.map1[frameNum], 0, 0);\n  }\n  _drawFood(ctx, col, row, size) {\n\n    // ctx.drawImage(this.foodImage, col * this.tileSize, row *this.tileSize, size, size)\n    // depreciated.. see note in constructor. \n  }\n  _drawObject(ctx, srcX, srcY, cropSizeWidth, cropSizeHeight, row, col, tileType) {\n    if (tileType === \"Ta\" && this.shakeStatus === true && (this.currentFrame % 3 === 0 || this.currentFrame % 10 === 0 || this.currentFrame % 11 === 0 || this.currentFrame % 12 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 14 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 15 === 0)) {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth - 1, cropSizeHeight, col * this.tileSize + (3 - Math.floor(Math.random() * 10) / 3), row * this.tileSize + Math.random(), cropSizeWidth, cropSizeHeight);\n    } else if (tileType === \"Bu\" && this.shakeStatus2 === true) {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth - 1, cropSizeHeight, col * this.tileSize + (3 - Math.floor(Math.random() * 10) / 3), row * this.tileSize + Math.random(), cropSizeWidth, cropSizeHeight);\n    } else {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth, cropSizeHeight, col * this.tileSize, row * this.tileSize, cropSizeWidth, cropSizeHeight);\n    }\n    // this.currentFrame;\n  } // drawing a specific object needs to have a hardcoded srcX and srcY, and also a hard coded cropsize. \n  // specific drawing animations done here.... could maybe move this to the object instance,\n  // but this would require an extra reorganization.. \n\n  _drawWater(ctx, srcX, srcY, col, row, size) {\n    ctx.drawImage(this.water, srcX, srcY, size, size, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawWro(ctx, col, row, size) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.wro[frameNum], col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawGrass(ctx, col, row, size) {\n    ctx.drawImage(this.grass, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  getPlayer(velocity) {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"P\") {\n          return new _Player__WEBPACK_IMPORTED_MODULE_0__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, velocity, this);\n        }\n      }\n    }\n  }\n  getNextDayFoodObjects() {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Co\") {\n          if (this.level > 10) {\n            this.spawn = 10;\n          } else {\n            this.spawn = this.level;\n          }\n          let rng = Math.floor(Math.random() * 100) / 3 + this.spawn;\n          if (rng <= 11) {\n            let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n          }\n        }\n      }\n    }\n  }\n  getNextDayEnemies() {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Sk\" || tile === \"Skt\") {\n          let sub = this.level;\n          let rand = randomIntFromInterval(1, 15 - sub);\n          if (rand < 4) {\n            this.enemies.push(new _Skeleton__WEBPACK_IMPORTED_MODULE_4__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0.7, this));\n          }\n        }\n      }\n    }\n  }\n  getBadLuckEnemies() {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Skt\") {\n          let rand = randomIntFromInterval(1, 3);\n          if (rand === 1) {\n            this.enemies.push(new _Skeleton__WEBPACK_IMPORTED_MODULE_4__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0.7, this));\n          }\n        }\n      }\n    }\n  }\n  getObjects() {\n    let objectsCollection = [];\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Wr\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 0, -3);\n          objectsCollection.push(rock);\n          // console.log(objectsCollection)\n        } else if (tile === 'BN') {\n          // render border hitbox here\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize - 5, 0, this, 3);\n          objectsCollection.push(invisBoundary);\n          // console.log(objectsCollection)\n        } else if (tile === 'BC') {\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize - 6, this.tileSize - 9, 0, this, 5, 5);\n          objectsCollection.push(invisBoundary);\n        } else if (tile === \"R2\" || tile === \"R1\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize - 3, 0, this, 1, 0);\n          objectsCollection.push(rock);\n        } else if (tile === \"Ta\") {\n          let tree = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 23, 0, this, 3, 8);\n          objectsCollection.push(tree);\n        } else if (tile == \"Bu\") {\n          let tree = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 23, 0, this, 3, -9);\n          objectsCollection.push(tree);\n        } else if (tile === \"Co\") {\n          if (this.level > 10) {\n            this.spawn = 10;\n          } else {\n            this.spawn = this.level;\n          }\n          let rng = Math.floor(Math.random() * 100) / 3 + this.spawn;\n          if (rng <= 11) {\n            let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n          }\n        } else if (tile === \"Gc\") {\n          let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n        } else if (tile === \"Dc\") {\n          this.doorObj = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 6, 0, this, -4, -2);\n        } else if (tile === \"Bd\") {\n          let bed = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, -4, -3);\n        } else if (tile === \"Sk\") {\n          let rand = randomIntFromInterval(1, 15 - this.level);\n          if (rand < 4) {\n            this.enemies.push(new _Skeleton__WEBPACK_IMPORTED_MODULE_4__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0.7, this));\n          }\n        } else if (tile === \"SkG\") {\n          this.enemies.push(new _Skeleton__WEBPACK_IMPORTED_MODULE_4__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0.7, this));\n        }\n      }\n    }\n    return objectsCollection;\n  }\n  setCanvasSize(canvas) {\n    canvas.width = this.theMap1[0].length * this.tileSize;\n    canvas.height = this.theMap1.length * this.tileSize;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (TileMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/TileMap.js\n");

/***/ }),

/***/ "./src/scripts/UserInterface.js":
/*!**************************************!*\
  !*** ./src/scripts/UserInterface.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass UserInterface {\n  // the point of this class file is to constantly display the controls of\n  // space to interact, escape to reach options, \n  // as well as constantly display/draw the player health and player collected food amount. \n\n  // player is linked as an attribute to keep track of those updates. \n  // not too sure why I need to link the tileMap... I just forgot why, but Im sure i'll run into it lmaooo\n\n  constructor(tileMap, player) {\n    this.tileMap = tileMap;\n    this.player = player;\n    this.controls = new Image();\n    this.controls.src = './src/graphics/userinterface/basicControlsDraft2.png';\n    this.dayOnesNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.dayOnesNums[0].src = './src/graphics/userinterface/days/dayones0.png';\n    this.dayOnesNums[1].src = './src/graphics/userinterface/days/dayones1.png';\n    this.dayOnesNums[2].src = './src/graphics/userinterface/days/dayones2.png';\n    this.dayOnesNums[3].src = './src/graphics/userinterface/days/dayones3.png';\n    this.dayOnesNums[4].src = './src/graphics/userinterface/days/dayones4.png';\n    this.dayOnesNums[5].src = './src/graphics/userinterface/days/dayones5.png';\n    this.dayOnesNums[6].src = './src/graphics/userinterface/days/dayones6.png';\n    this.dayOnesNums[7].src = './src/graphics/userinterface/days/dayones7.png';\n    this.dayOnesNums[8].src = './src/graphics/userinterface/days/dayones8.png';\n    this.dayOnesNums[9].src = './src/graphics/userinterface/days/dayones9.png';\n    this.dayTensNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.dayTensNums[0].src = './src/graphics/userinterface/days/daytens0.png';\n    this.dayTensNums[1].src = './src/graphics/userinterface/days/daytens1.png';\n    this.dayTensNums[2].src = './src/graphics/userinterface/days/daytens2.png';\n    this.dayTensNums[3].src = './src/graphics/userinterface/days/daytens3.png';\n    this.dayTensNums[4].src = './src/graphics/userinterface/days/daytens4.png';\n    this.dayTensNums[5].src = './src/graphics/userinterface/days/daytens5.png';\n    this.dayTensNums[6].src = './src/graphics/userinterface/days/daytens6.png';\n    this.dayTensNums[7].src = './src/graphics/userinterface/days/daytens7.png';\n    this.dayTensNums[8].src = './src/graphics/userinterface/days/daytens8.png';\n    this.dayTensNums[9].src = './src/graphics/userinterface/days/daytens9.png';\n    this.foodOnesNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.foodOnesNums[0].src = './src/graphics/userinterface/food/foodones0.png';\n    this.foodOnesNums[1].src = './src/graphics/userinterface/food/foodones1.png';\n    this.foodOnesNums[2].src = './src/graphics/userinterface/food/foodones2.png';\n    this.foodOnesNums[3].src = './src/graphics/userinterface/food/foodones3.png';\n    this.foodOnesNums[4].src = './src/graphics/userinterface/food/foodones4.png';\n    this.foodOnesNums[5].src = './src/graphics/userinterface/food/foodones5.png';\n    this.foodOnesNums[6].src = './src/graphics/userinterface/food/foodones6.png';\n    this.foodOnesNums[7].src = './src/graphics/userinterface/food/foodones7.png';\n    this.foodOnesNums[8].src = './src/graphics/userinterface/food/foodones8.png';\n    this.foodOnesNums[9].src = './src/graphics/userinterface/food/foodones9.png';\n    this.foodTensNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.foodTensNums[0].src = './src/graphics/userinterface/food/foodtens0.png';\n    this.foodTensNums[1].src = './src/graphics/userinterface/food/foodtens1.png';\n    this.foodTensNums[2].src = './src/graphics/userinterface/food/foodtens2.png';\n    this.foodTensNums[3].src = './src/graphics/userinterface/food/foodtens3.png';\n    this.foodTensNums[4].src = './src/graphics/userinterface/food/foodtens4.png';\n    this.foodTensNums[5].src = './src/graphics/userinterface/food/foodtens5.png';\n    this.foodTensNums[6].src = './src/graphics/userinterface/food/foodtens6.png';\n    this.foodTensNums[7].src = './src/graphics/userinterface/food/foodtens7.png';\n    this.foodTensNums[8].src = './src/graphics/userinterface/food/foodtens8.png';\n    this.foodTensNums[9].src = './src/graphics/userinterface/food/foodtens9.png';\n    this.healthImg = new Image();\n    this.healthImg.src = './src/graphics/NinjaAdventure/HUD/Heart.png';\n\n    // this.optionsMenu = new Image ();\n    // this.optionsMenu.src = './src/graphics/menus/optionsMenu.png'\n\n    // this.aliveStatusImage = new Image();\n    // this.aliveStatusImage.src = './src/graphics/menus/aliveStatus.png'\n\n    // this.deadStatusImage = new Image();\n    // this.deadStatusImage.src = './src/graphics/menus/deadStatus.png'\n  }\n\n  drawControls(ctx) {\n    ctx.drawImage(this.controls, 0, 0);\n  }\n  drawDays(ctx) {\n    let onesNum = this.tileMap.level % 10;\n    let tensNum = (this.tileMap.level - onesNum) / 10;\n    ctx.drawImage(this.dayOnesNums[onesNum], 0, 0);\n    ctx.drawImage(this.dayTensNums[tensNum], 0, 0);\n  }\n  drawFoodAmt(ctx) {\n    let onesNum = this.player.food % 10;\n    let tensNum = (this.player.food - onesNum) / 10;\n    ctx.drawImage(this.foodOnesNums[onesNum], 0, 0);\n    ctx.drawImage(this.foodTensNums[tensNum], 0, 0);\n  }\n  drawHealthAmt(ctx) {\n    if (this.player.health === 3) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 2) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 1) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 0) {\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (UserInterface);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/UserInterface.js\n");

/***/ }),

/***/ "./src/scripts/attackbox.js":
/*!**********************************!*\
  !*** ./src/scripts/attackbox.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _foodUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./foodUtils */ \"./src/scripts/foodUtils.js\");\n\nclass AttackBox extends _foodUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, width, height, tiedObj, xOffset = 0, yOffset = 0) {\n    super(x, y, width, height, tiedObj, xOffset, yOffset);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (AttackBox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hdHRhY2tib3guanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBeUM7QUFFekMsTUFBTUMsU0FBUyxTQUFTRCxrREFBYyxDQUFDO0VBRW5DRSxXQUFXQSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxHQUFHLENBQUMsRUFBRUMsT0FBTyxHQUFHLENBQUMsRUFBRTtJQUNoRSxLQUFLLENBQUNOLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sQ0FBQztFQUd6RDtBQUlKO0FBRUEsK0RBQWVSLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL2F0dGFja2JveC5qcz8wNDY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXNzYWJsZUhpdGJveCBmcm9tIFwiLi9mb29kVXRpbHNcIjtcblxuY2xhc3MgQXR0YWNrQm94IGV4dGVuZHMgUGFzc2FibGVIaXRib3gge1xuXG4gICAgY29uc3RydWN0b3IoeCwgeSwgd2lkdGgsIGhlaWdodCwgdGllZE9iaiwgeE9mZnNldCA9IDAsIHlPZmZzZXQgPSAwKSB7XG4gICAgICAgIHN1cGVyKHgsIHksIHdpZHRoLCBoZWlnaHQsIHRpZWRPYmosIHhPZmZzZXQsIHlPZmZzZXQpO1xuXG5cbiAgICB9XG4gXG5cblxufVxuXG5leHBvcnQgZGVmYXVsdCBBdHRhY2tCb3g7Il0sIm5hbWVzIjpbIlBhc3NhYmxlSGl0Ym94IiwiQXR0YWNrQm94IiwiY29uc3RydWN0b3IiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwidGllZE9iaiIsInhPZmZzZXQiLCJ5T2Zmc2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/attackbox.js\n");

/***/ }),

/***/ "./src/scripts/foodUtils.js":
/*!**********************************!*\
  !*** ./src/scripts/foodUtils.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n\nclass PassableHitbox {\n  constructor(x, y, width, height, tiedObj, xOffset = 0, yOffset = 0) {\n    // debugger\n    this.x = x;\n    this.y = y;\n    this.tiedObj = tiedObj;\n    // ^ a pointer back to what thing we're tied to.. \n\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.detectionState = false;\n    this.debugImageee = new Image();\n    this.debugImageee.src = './src/graphics/debug.png';\n    if (!PassableHitbox.prototype.PASSABLEHITBOXES) {\n      PassableHitbox.prototype.PASSABLEHITBOXES = [];\n    }\n    PassableHitbox.prototype.PASSABLEHITBOXES.push(this);\n    console.log(PassableHitbox.prototype.PASSABLEHITBOXES);\n  }\n  static updateDetectionStateToTrueIfDetecting() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n      PassableHitbox.prototype.PASSABLEHITBOXES[i].detectionState = false;\n    }\n    ;\n    for (let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n      for (let j = i + 1; j < PassableHitbox.prototype.PASSABLEHITBOXES.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = PassableHitbox.prototype.PASSABLEHITBOXES[i];\n        let hitbox2 = PassableHitbox.prototype.PASSABLEHITBOXES[j];\n        if (PassableHitbox._anyDetection(hitbox1, hitbox2)) {\n          hitbox1.detectionState = true;\n          hitbox2.detectionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  _detectingWhat() {\n    // copypasta'd the detections function above \n    // so that it would return an array of detections that I can iterate through later to implement logic. \n\n    let referencingPassableHitbox = this;\n    let listOfDetected = [];\n\n    // for(let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n    for (let j = 0; j < PassableHitbox.prototype.PASSABLEHITBOXES.length; j++) {\n      // console.log([i, j])\n      // let hitbox1 = PassableHitbox.prototype.PASSABLEHITBOXES[i];\n\n      let hitbox2 = PassableHitbox.prototype.PASSABLEHITBOXES[j];\n      if (PassableHitbox._anyDetection(referencingPassableHitbox, hitbox2) && !(referencingPassableHitbox === hitbox2)) {\n        // hitbox1.detectionState = true;\n        hitbox2.detectionState = true;\n        listOfDetected.push(hitbox2);\n        // debugger\n      }\n    }\n    // }\n    return listOfDetected;\n  }\n  static _anyDetection(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraww(ctx) {\n    // debugger\n    if (this.detectionState === false) {\n      ctx.filter = 'none';\n      // debugger\n      // ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height)\n      // ctx.drawImage(this.debugImage, 16, 16, this.x + this.xOffset, this.y + this.yOffset)\n      ctx.drawImage(this.debugImageee, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.detectionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImageee, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PassableHitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/foodUtils.js\n");

/***/ }),

/***/ "./src/scripts/musics.js":
/*!*******************************!*\
  !*** ./src/scripts/musics.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Sound {\n  constructor(src) {\n    this.sound = document.createElement(\"audio\");\n    this.sound.src = src;\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n    this.play = function () {\n      this.sound.play();\n    };\n    this.stop = function () {\n      this.sound.pause();\n    };\n    if (!Sound.prototype.ALLSOUNDS) {\n      Sound.prototype.ALLSOUNDS = [];\n    }\n    Sound.prototype.ALLSOUNDS.push(this);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tdXNpY3MuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLEtBQUssQ0FBQztFQUVSQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYixJQUFJLENBQUNDLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsT0FBTyxDQUFDO0lBQzVDLElBQUksQ0FBQ0YsS0FBSyxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDcEIsSUFBSSxDQUFDQyxLQUFLLENBQUNHLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO0lBQzFDLElBQUksQ0FBQ0gsS0FBSyxDQUFDRyxZQUFZLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQztJQUMzQyxJQUFJLENBQUNILEtBQUssQ0FBQ0ksS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtJQUNqQyxJQUFJLENBQUNDLElBQUksR0FBRyxZQUFXO01BQ25CLElBQUksQ0FBQ04sS0FBSyxDQUFDTSxJQUFJLEVBQUU7SUFDckIsQ0FBQztJQUdELElBQUksQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7TUFDbkIsSUFBSSxDQUFDUCxLQUFLLENBQUNRLEtBQUssRUFBRTtJQUN0QixDQUFDO0lBRUQsSUFBSSxDQUFDWCxLQUFLLENBQUNZLFNBQVMsQ0FBQ0MsU0FBUyxFQUFFO01BQzVCYixLQUFLLENBQUNZLFNBQVMsQ0FBQ0MsU0FBUyxHQUFHLEVBQUU7SUFDbEM7SUFFQWIsS0FBSyxDQUFDWSxTQUFTLENBQUNDLFNBQVMsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztFQUN4QztBQUVKO0FBRUEsK0RBQWVkLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL211c2ljcy5qcz81ODVlIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFNvdW5kIHtcblxuICAgIGNvbnN0cnVjdG9yKHNyYykge1xuICAgICAgICB0aGlzLnNvdW5kID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImF1ZGlvXCIpO1xuICAgICAgICB0aGlzLnNvdW5kLnNyYyA9IHNyYztcbiAgICAgICAgdGhpcy5zb3VuZC5zZXRBdHRyaWJ1dGUoXCJwcmVsb2FkXCIsIFwiYXV0b1wiKTtcbiAgICAgICAgdGhpcy5zb3VuZC5zZXRBdHRyaWJ1dGUoXCJjb250cm9sc1wiLCBcIm5vbmVcIik7XG4gICAgICAgIHRoaXMuc291bmQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB0aGlzLnBsYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuc291bmQucGxheSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuXG4gICAgICAgIHRoaXMuc3RvcCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5zb3VuZC5wYXVzZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFTb3VuZC5wcm90b3R5cGUuQUxMU09VTkRTKSB7XG4gICAgICAgICAgICBTb3VuZC5wcm90b3R5cGUuQUxMU09VTkRTID0gW107XG4gICAgICAgIH1cblxuICAgICAgICBTb3VuZC5wcm90b3R5cGUuQUxMU09VTkRTLnB1c2godGhpcyk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNvdW5kOyJdLCJuYW1lcyI6WyJTb3VuZCIsImNvbnN0cnVjdG9yIiwic3JjIiwic291bmQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZSIsImRpc3BsYXkiLCJwbGF5Iiwic3RvcCIsInBhdXNlIiwicHJvdG90eXBlIiwiQUxMU09VTkRTIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/musics.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// const ALLHITBOXESMADE = [];\n\nclass Hitbox {\n  // hitbox logic... \n  // track x, y positions in the game world. \n  // track height and width of the hitbox. \n  // MUST loop through all combinations of hitboxes to detect collisions. \n  // isColliding(target, checkingWith) => `target.collisionState = true` && return true if target and checking with colliding.\n  // \n  // Currently thinking of adding an x and y offset so I can attach accurate hitboxes to all the game assets.\n  // whenever a new object is made, hitboxes are tied to it through a callback. \n  constructor(x, y, width, height, xOffset = 0, yOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.collisionState = false;\n    this.debugImage = new Image();\n    this.debugImage.src = './src/graphics/debug.png';\n    if (!Hitbox.prototype.ALLHITBOXESMADE) {\n      Hitbox.prototype.ALLHITBOXESMADE = [];\n    }\n    Hitbox.prototype.ALLHITBOXESMADE.push(this);\n    // console.log(ALLHITBOXESMADE);\n  }\n\n  static updateCollisionStateToTrueIfColliding() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      Hitbox.prototype.ALLHITBOXESMADE[i].collisionState = false;\n    }\n    ;\n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      for (let j = i + 1; j < Hitbox.prototype.ALLHITBOXESMADE.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = Hitbox.prototype.ALLHITBOXESMADE[i];\n        let hitbox2 = Hitbox.prototype.ALLHITBOXESMADE[j];\n        if (Hitbox._anyCollision(hitbox1, hitbox2)) {\n          hitbox1.collisionState = true;\n          hitbox2.collisionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  static _anyCollision(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraw(ctx) {\n    // debugger\n    if (this.collisionState === false) {\n      ctx.filter = 'none';\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.collisionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n\n// class PassableHitbox {\n\n//     constructor(x, y, width, height, xOffset = 0, yOffset = 0){\n\n//         debugger\n//         this.x = x;\n//         this.y = y;\n\n//         this.xOffset = xOffset;\n//         this.yOffset = yOffset;\n\n//         this.width = width;\n//         this.height = height;\n\n//         this.detectionState = false;\n\n//         this.debugImage = new Image();\n//         this.debugImage.src = './src/graphics/debug.pngg';\n\n//         if (!Hitbox.prototype.PASSABLEHITBOXES){\n//             Hitbox.prototype.PASSABLEHITBOXES = []\n//         }\n\n//         Hitbox.prototype.PASSABLEHITBOXES.push(this);\n\n//         console.log(Hitbox.prototype.PASSABLEHITBOXES)\n//     }\n\n// }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Hitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./node_modules/clone-deep/index.js":
/*!******************************************!*\
  !*** ./node_modules/clone-deep/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Module dependenices\n */\n\nconst clone = __webpack_require__(/*! shallow-clone */ \"./node_modules/shallow-clone/index.js\");\nconst typeOf = __webpack_require__(/*! kind-of */ \"./node_modules/kind-of/index.js\");\nconst isPlainObject = __webpack_require__(/*! is-plain-object */ \"./node_modules/is-plain-object/index.js\");\n\nfunction cloneDeep(val, instanceClone) {\n  switch (typeOf(val)) {\n    case 'object':\n      return cloneObjectDeep(val, instanceClone);\n    case 'array':\n      return cloneArrayDeep(val, instanceClone);\n    default: {\n      return clone(val);\n    }\n  }\n}\n\nfunction cloneObjectDeep(val, instanceClone) {\n  if (typeof instanceClone === 'function') {\n    return instanceClone(val);\n  }\n  if (instanceClone || isPlainObject(val)) {\n    const res = new val.constructor();\n    for (let key in val) {\n      res[key] = cloneDeep(val[key], instanceClone);\n    }\n    return res;\n  }\n  return val;\n}\n\nfunction cloneArrayDeep(val, instanceClone) {\n  const res = new val.constructor(val.length);\n  for (let i = 0; i < val.length; i++) {\n    res[i] = cloneDeep(val[i], instanceClone);\n  }\n  return res;\n}\n\n/**\n * Expose `cloneDeep`\n */\n\nmodule.exports = cloneDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xvbmUtZGVlcC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEsY0FBYyxtQkFBTyxDQUFDLDREQUFlO0FBQ3JDLGVBQWUsbUJBQU8sQ0FBQyxnREFBUztBQUNoQyxzQkFBc0IsbUJBQU8sQ0FBQyxnRUFBaUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvY2xvbmUtZGVlcC9pbmRleC5qcz85Njc1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5pY2VzXG4gKi9cblxuY29uc3QgY2xvbmUgPSByZXF1aXJlKCdzaGFsbG93LWNsb25lJyk7XG5jb25zdCB0eXBlT2YgPSByZXF1aXJlKCdraW5kLW9mJyk7XG5jb25zdCBpc1BsYWluT2JqZWN0ID0gcmVxdWlyZSgnaXMtcGxhaW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGNsb25lRGVlcCh2YWwsIGluc3RhbmNlQ2xvbmUpIHtcbiAgc3dpdGNoICh0eXBlT2YodmFsKSkge1xuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICByZXR1cm4gY2xvbmVPYmplY3REZWVwKHZhbCwgaW5zdGFuY2VDbG9uZSk7XG4gICAgY2FzZSAnYXJyYXknOlxuICAgICAgcmV0dXJuIGNsb25lQXJyYXlEZWVwKHZhbCwgaW5zdGFuY2VDbG9uZSk7XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIGNsb25lKHZhbCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNsb25lT2JqZWN0RGVlcCh2YWwsIGluc3RhbmNlQ2xvbmUpIHtcbiAgaWYgKHR5cGVvZiBpbnN0YW5jZUNsb25lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGluc3RhbmNlQ2xvbmUodmFsKTtcbiAgfVxuICBpZiAoaW5zdGFuY2VDbG9uZSB8fCBpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICBjb25zdCByZXMgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKCk7XG4gICAgZm9yIChsZXQga2V5IGluIHZhbCkge1xuICAgICAgcmVzW2tleV0gPSBjbG9uZURlZXAodmFsW2tleV0sIGluc3RhbmNlQ2xvbmUpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xuICB9XG4gIHJldHVybiB2YWw7XG59XG5cbmZ1bmN0aW9uIGNsb25lQXJyYXlEZWVwKHZhbCwgaW5zdGFuY2VDbG9uZSkge1xuICBjb25zdCByZXMgPSBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5sZW5ndGgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbC5sZW5ndGg7IGkrKykge1xuICAgIHJlc1tpXSA9IGNsb25lRGVlcCh2YWxbaV0sIGluc3RhbmNlQ2xvbmUpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbi8qKlxuICogRXhwb3NlIGBjbG9uZURlZXBgXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjbG9uZURlZXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/clone-deep/index.js\n");

/***/ }),

/***/ "./node_modules/is-plain-object/index.js":
/*!***********************************************!*\
  !*** ./node_modules/is-plain-object/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nvar isObject = __webpack_require__(/*! isobject */ \"./node_modules/isobject/index.js\");\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtcGxhaW4tb2JqZWN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsa0RBQVU7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL25vZGVfbW9kdWxlcy9pcy1wbGFpbi1vYmplY3QvaW5kZXguanM/ZmI0OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGlzLXBsYWluLW9iamVjdCA8aHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQvaXMtcGxhaW4tb2JqZWN0PlxuICpcbiAqIENvcHlyaWdodCAoYykgMjAxNC0yMDE3LCBKb24gU2NobGlua2VydC5cbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJ2lzb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0T2JqZWN0KG8pIHtcbiAgcmV0dXJuIGlzT2JqZWN0KG8pID09PSB0cnVlXG4gICAgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pID09PSAnW29iamVjdCBPYmplY3RdJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc1BsYWluT2JqZWN0KG8pIHtcbiAgdmFyIGN0b3IscHJvdDtcblxuICBpZiAoaXNPYmplY3RPYmplY3QobykgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7XG5cbiAgLy8gSWYgaGFzIG1vZGlmaWVkIGNvbnN0cnVjdG9yXG4gIGN0b3IgPSBvLmNvbnN0cnVjdG9yO1xuICBpZiAodHlwZW9mIGN0b3IgIT09ICdmdW5jdGlvbicpIHJldHVybiBmYWxzZTtcblxuICAvLyBJZiBoYXMgbW9kaWZpZWQgcHJvdG90eXBlXG4gIHByb3QgPSBjdG9yLnByb3RvdHlwZTtcbiAgaWYgKGlzT2JqZWN0T2JqZWN0KHByb3QpID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuXG4gIC8vIElmIGNvbnN0cnVjdG9yIGRvZXMgbm90IGhhdmUgYW4gT2JqZWN0LXNwZWNpZmljIG1ldGhvZFxuICBpZiAocHJvdC5oYXNPd25Qcm9wZXJ0eSgnaXNQcm90b3R5cGVPZicpID09PSBmYWxzZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIE1vc3QgbGlrZWx5IGEgcGxhaW4gT2JqZWN0XG4gIHJldHVybiB0cnVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-plain-object/index.js\n");

/***/ }),

/***/ "./node_modules/isobject/index.js":
/*!****************************************!*\
  !*** ./node_modules/isobject/index.js ***!
  \****************************************/
/***/ (function(module) {

"use strict";
eval("/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXNvYmplY3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmluZV9wcm9qLy4vbm9kZV9tb2R1bGVzL2lzb2JqZWN0L2luZGV4LmpzP2E4MzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBpc29iamVjdCA8aHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQvaXNvYmplY3Q+XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LTIwMTcsIEpvbiBTY2hsaW5rZXJ0LlxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIEFycmF5LmlzQXJyYXkodmFsKSA9PT0gZmFsc2U7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/isobject/index.js\n");

/***/ }),

/***/ "./node_modules/kind-of/index.js":
/*!***************************************!*\
  !*** ./node_modules/kind-of/index.js ***!
  \***************************************/
/***/ (function(module) {

eval("var toString = Object.prototype.toString;\n\nmodule.exports = function kindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n\n  var type = typeof val;\n  if (type === 'boolean') return 'boolean';\n  if (type === 'string') return 'string';\n  if (type === 'number') return 'number';\n  if (type === 'symbol') return 'symbol';\n  if (type === 'function') {\n    return isGeneratorFn(val) ? 'generatorfunction' : 'function';\n  }\n\n  if (isArray(val)) return 'array';\n  if (isBuffer(val)) return 'buffer';\n  if (isArguments(val)) return 'arguments';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  if (isRegexp(val)) return 'regexp';\n\n  switch (ctorName(val)) {\n    case 'Symbol': return 'symbol';\n    case 'Promise': return 'promise';\n\n    // Set, Map, WeakSet, WeakMap\n    case 'WeakMap': return 'weakmap';\n    case 'WeakSet': return 'weakset';\n    case 'Map': return 'map';\n    case 'Set': return 'set';\n\n    // 8-bit typed arrays\n    case 'Int8Array': return 'int8array';\n    case 'Uint8Array': return 'uint8array';\n    case 'Uint8ClampedArray': return 'uint8clampedarray';\n\n    // 16-bit typed arrays\n    case 'Int16Array': return 'int16array';\n    case 'Uint16Array': return 'uint16array';\n\n    // 32-bit typed arrays\n    case 'Int32Array': return 'int32array';\n    case 'Uint32Array': return 'uint32array';\n    case 'Float32Array': return 'float32array';\n    case 'Float64Array': return 'float64array';\n  }\n\n  if (isGeneratorObj(val)) {\n    return 'generator';\n  }\n\n  // Non-plain objects\n  type = toString.call(val);\n  switch (type) {\n    case '[object Object]': return 'object';\n    // iterators\n    case '[object Map Iterator]': return 'mapiterator';\n    case '[object Set Iterator]': return 'setiterator';\n    case '[object String Iterator]': return 'stringiterator';\n    case '[object Array Iterator]': return 'arrayiterator';\n  }\n\n  // other\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n};\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isArray(val) {\n  if (Array.isArray) return Array.isArray(val);\n  return val instanceof Array;\n}\n\nfunction isError(val) {\n  return val instanceof Error || (typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number');\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function'\n    && typeof val.getDate === 'function'\n    && typeof val.setDate === 'function';\n}\n\nfunction isRegexp(val) {\n  if (val instanceof RegExp) return true;\n  return typeof val.flags === 'string'\n    && typeof val.ignoreCase === 'boolean'\n    && typeof val.multiline === 'boolean'\n    && typeof val.global === 'boolean';\n}\n\nfunction isGeneratorFn(name, val) {\n  return ctorName(name) === 'GeneratorFunction';\n}\n\nfunction isGeneratorObj(val) {\n  return typeof val.throw === 'function'\n    && typeof val.return === 'function'\n    && typeof val.next === 'function';\n}\n\nfunction isArguments(val) {\n  try {\n    if (typeof val.length === 'number' && typeof val.callee === 'function') {\n      return true;\n    }\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  if (val.constructor && typeof val.constructor.isBuffer === 'function') {\n    return val.constructor.isBuffer(val);\n  }\n  return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMva2luZC1vZi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmluZV9wcm9qLy4vbm9kZV9tb2R1bGVzL2tpbmQtb2YvaW5kZXguanM/ZWY1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGtpbmRPZih2YWwpIHtcbiAgaWYgKHZhbCA9PT0gdm9pZCAwKSByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gIGlmICh2YWwgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG5cbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ2Jvb2xlYW4nKSByZXR1cm4gJ2Jvb2xlYW4nO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycpIHJldHVybiAnc3RyaW5nJztcbiAgaWYgKHR5cGUgPT09ICdudW1iZXInKSByZXR1cm4gJ251bWJlcic7XG4gIGlmICh0eXBlID09PSAnc3ltYm9sJykgcmV0dXJuICdzeW1ib2wnO1xuICBpZiAodHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBpc0dlbmVyYXRvckZuKHZhbCkgPyAnZ2VuZXJhdG9yZnVuY3Rpb24nIDogJ2Z1bmN0aW9uJztcbiAgfVxuXG4gIGlmIChpc0FycmF5KHZhbCkpIHJldHVybiAnYXJyYXknO1xuICBpZiAoaXNCdWZmZXIodmFsKSkgcmV0dXJuICdidWZmZXInO1xuICBpZiAoaXNBcmd1bWVudHModmFsKSkgcmV0dXJuICdhcmd1bWVudHMnO1xuICBpZiAoaXNEYXRlKHZhbCkpIHJldHVybiAnZGF0ZSc7XG4gIGlmIChpc0Vycm9yKHZhbCkpIHJldHVybiAnZXJyb3InO1xuICBpZiAoaXNSZWdleHAodmFsKSkgcmV0dXJuICdyZWdleHAnO1xuXG4gIHN3aXRjaCAoY3Rvck5hbWUodmFsKSkge1xuICAgIGNhc2UgJ1N5bWJvbCc6IHJldHVybiAnc3ltYm9sJztcbiAgICBjYXNlICdQcm9taXNlJzogcmV0dXJuICdwcm9taXNlJztcblxuICAgIC8vIFNldCwgTWFwLCBXZWFrU2V0LCBXZWFrTWFwXG4gICAgY2FzZSAnV2Vha01hcCc6IHJldHVybiAnd2Vha21hcCc7XG4gICAgY2FzZSAnV2Vha1NldCc6IHJldHVybiAnd2Vha3NldCc7XG4gICAgY2FzZSAnTWFwJzogcmV0dXJuICdtYXAnO1xuICAgIGNhc2UgJ1NldCc6IHJldHVybiAnc2V0JztcblxuICAgIC8vIDgtYml0IHR5cGVkIGFycmF5c1xuICAgIGNhc2UgJ0ludDhBcnJheSc6IHJldHVybiAnaW50OGFycmF5JztcbiAgICBjYXNlICdVaW50OEFycmF5JzogcmV0dXJuICd1aW50OGFycmF5JztcbiAgICBjYXNlICdVaW50OENsYW1wZWRBcnJheSc6IHJldHVybiAndWludDhjbGFtcGVkYXJyYXknO1xuXG4gICAgLy8gMTYtYml0IHR5cGVkIGFycmF5c1xuICAgIGNhc2UgJ0ludDE2QXJyYXknOiByZXR1cm4gJ2ludDE2YXJyYXknO1xuICAgIGNhc2UgJ1VpbnQxNkFycmF5JzogcmV0dXJuICd1aW50MTZhcnJheSc7XG5cbiAgICAvLyAzMi1iaXQgdHlwZWQgYXJyYXlzXG4gICAgY2FzZSAnSW50MzJBcnJheSc6IHJldHVybiAnaW50MzJhcnJheSc7XG4gICAgY2FzZSAnVWludDMyQXJyYXknOiByZXR1cm4gJ3VpbnQzMmFycmF5JztcbiAgICBjYXNlICdGbG9hdDMyQXJyYXknOiByZXR1cm4gJ2Zsb2F0MzJhcnJheSc7XG4gICAgY2FzZSAnRmxvYXQ2NEFycmF5JzogcmV0dXJuICdmbG9hdDY0YXJyYXknO1xuICB9XG5cbiAgaWYgKGlzR2VuZXJhdG9yT2JqKHZhbCkpIHtcbiAgICByZXR1cm4gJ2dlbmVyYXRvcic7XG4gIH1cblxuICAvLyBOb24tcGxhaW4gb2JqZWN0c1xuICB0eXBlID0gdG9TdHJpbmcuY2FsbCh2YWwpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdbb2JqZWN0IE9iamVjdF0nOiByZXR1cm4gJ29iamVjdCc7XG4gICAgLy8gaXRlcmF0b3JzXG4gICAgY2FzZSAnW29iamVjdCBNYXAgSXRlcmF0b3JdJzogcmV0dXJuICdtYXBpdGVyYXRvcic7XG4gICAgY2FzZSAnW29iamVjdCBTZXQgSXRlcmF0b3JdJzogcmV0dXJuICdzZXRpdGVyYXRvcic7XG4gICAgY2FzZSAnW29iamVjdCBTdHJpbmcgSXRlcmF0b3JdJzogcmV0dXJuICdzdHJpbmdpdGVyYXRvcic7XG4gICAgY2FzZSAnW29iamVjdCBBcnJheSBJdGVyYXRvcl0nOiByZXR1cm4gJ2FycmF5aXRlcmF0b3InO1xuICB9XG5cbiAgLy8gb3RoZXJcbiAgcmV0dXJuIHR5cGUuc2xpY2UoOCwgLTEpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXFxzL2csICcnKTtcbn07XG5cbmZ1bmN0aW9uIGN0b3JOYW1lKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbC5jb25zdHJ1Y3RvciA9PT0gJ2Z1bmN0aW9uJyA/IHZhbC5jb25zdHJ1Y3Rvci5uYW1lIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gaXNBcnJheSh2YWwpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkpIHJldHVybiBBcnJheS5pc0FycmF5KHZhbCk7XG4gIHJldHVybiB2YWwgaW5zdGFuY2VvZiBBcnJheTtcbn1cblxuZnVuY3Rpb24gaXNFcnJvcih2YWwpIHtcbiAgcmV0dXJuIHZhbCBpbnN0YW5jZW9mIEVycm9yIHx8ICh0eXBlb2YgdmFsLm1lc3NhZ2UgPT09ICdzdHJpbmcnICYmIHZhbC5jb25zdHJ1Y3RvciAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLnN0YWNrVHJhY2VMaW1pdCA9PT0gJ251bWJlcicpO1xufVxuXG5mdW5jdGlvbiBpc0RhdGUodmFsKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBEYXRlKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIHR5cGVvZiB2YWwudG9EYXRlU3RyaW5nID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIHZhbC5nZXREYXRlID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIHZhbC5zZXREYXRlID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc1JlZ2V4cCh2YWwpIHtcbiAgaWYgKHZhbCBpbnN0YW5jZW9mIFJlZ0V4cCkgcmV0dXJuIHRydWU7XG4gIHJldHVybiB0eXBlb2YgdmFsLmZsYWdzID09PSAnc3RyaW5nJ1xuICAgICYmIHR5cGVvZiB2YWwuaWdub3JlQ2FzZSA9PT0gJ2Jvb2xlYW4nXG4gICAgJiYgdHlwZW9mIHZhbC5tdWx0aWxpbmUgPT09ICdib29sZWFuJ1xuICAgICYmIHR5cGVvZiB2YWwuZ2xvYmFsID09PSAnYm9vbGVhbic7XG59XG5cbmZ1bmN0aW9uIGlzR2VuZXJhdG9yRm4obmFtZSwgdmFsKSB7XG4gIHJldHVybiBjdG9yTmFtZShuYW1lKSA9PT0gJ0dlbmVyYXRvckZ1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNHZW5lcmF0b3JPYmoodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsLnRocm93ID09PSAnZnVuY3Rpb24nXG4gICAgJiYgdHlwZW9mIHZhbC5yZXR1cm4gPT09ICdmdW5jdGlvbidcbiAgICAmJiB0eXBlb2YgdmFsLm5leHQgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbCkge1xuICB0cnkge1xuICAgIGlmICh0eXBlb2YgdmFsLmxlbmd0aCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHZhbC5jYWxsZWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyci5tZXNzYWdlLmluZGV4T2YoJ2NhbGxlZScpICE9PSAtMSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBJZiB5b3UgbmVlZCB0byBzdXBwb3J0IFNhZmFyaSA1LTcgKDgtMTAgeXItb2xkIGJyb3dzZXIpLFxuICogdGFrZSBhIGxvb2sgYXQgaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9pcy1idWZmZXJcbiAqL1xuXG5mdW5jdGlvbiBpc0J1ZmZlcih2YWwpIHtcbiAgaWYgKHZhbC5jb25zdHJ1Y3RvciAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlcih2YWwpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/kind-of/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./node_modules/shallow-clone/index.js":
/*!*********************************************!*\
  !*** ./node_modules/shallow-clone/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("/*!\n * shallow-clone <https://github.com/jonschlinkert/shallow-clone>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n\n\nconst valueOf = Symbol.prototype.valueOf;\nconst typeOf = __webpack_require__(/*! kind-of */ \"./node_modules/kind-of/index.js\");\n\nfunction clone(val, deep) {\n  switch (typeOf(val)) {\n    case 'array':\n      return val.slice();\n    case 'object':\n      return Object.assign({}, val);\n    case 'date':\n      return new val.constructor(Number(val));\n    case 'map':\n      return new Map(val);\n    case 'set':\n      return new Set(val);\n    case 'buffer':\n      return cloneBuffer(val);\n    case 'symbol':\n      return cloneSymbol(val);\n    case 'arraybuffer':\n      return cloneArrayBuffer(val);\n    case 'float32array':\n    case 'float64array':\n    case 'int16array':\n    case 'int32array':\n    case 'int8array':\n    case 'uint16array':\n    case 'uint32array':\n    case 'uint8clampedarray':\n    case 'uint8array':\n      return cloneTypedArray(val);\n    case 'regexp':\n      return cloneRegExp(val);\n    case 'error':\n      return Object.create(val);\n    default: {\n      return val;\n    }\n  }\n}\n\nfunction cloneRegExp(val) {\n  const flags = val.flags !== void 0 ? val.flags : (/\\w+$/.exec(val) || void 0);\n  const re = new val.constructor(val.source, flags);\n  re.lastIndex = val.lastIndex;\n  return re;\n}\n\nfunction cloneArrayBuffer(val) {\n  const res = new val.constructor(val.byteLength);\n  new Uint8Array(res).set(new Uint8Array(val));\n  return res;\n}\n\nfunction cloneTypedArray(val, deep) {\n  return new val.constructor(val.buffer, val.byteOffset, val.length);\n}\n\nfunction cloneBuffer(val) {\n  const len = val.length;\n  const buf = Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : Buffer.from(len);\n  val.copy(buf);\n  return buf;\n}\n\nfunction cloneSymbol(val) {\n  return valueOf ? Object(valueOf.call(val)) : {};\n}\n\n/**\n * Expose `clone`\n */\n\nmodule.exports = clone;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2hhbGxvdy1jbG9uZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxlQUFlLG1CQUFPLENBQUMsZ0RBQVM7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvc2hhbGxvdy1jbG9uZS9pbmRleC5qcz81MmY2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogc2hhbGxvdy1jbG9uZSA8aHR0cHM6Ly9naXRodWIuY29tL2pvbnNjaGxpbmtlcnQvc2hhbGxvdy1jbG9uZT5cbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgSm9uIFNjaGxpbmtlcnQuXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB2YWx1ZU9mID0gU3ltYm9sLnByb3RvdHlwZS52YWx1ZU9mO1xuY29uc3QgdHlwZU9mID0gcmVxdWlyZSgna2luZC1vZicpO1xuXG5mdW5jdGlvbiBjbG9uZSh2YWwsIGRlZXApIHtcbiAgc3dpdGNoICh0eXBlT2YodmFsKSkge1xuICAgIGNhc2UgJ2FycmF5JzpcbiAgICAgIHJldHVybiB2YWwuc2xpY2UoKTtcbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHZhbCk7XG4gICAgY2FzZSAnZGF0ZSc6XG4gICAgICByZXR1cm4gbmV3IHZhbC5jb25zdHJ1Y3RvcihOdW1iZXIodmFsKSk7XG4gICAgY2FzZSAnbWFwJzpcbiAgICAgIHJldHVybiBuZXcgTWFwKHZhbCk7XG4gICAgY2FzZSAnc2V0JzpcbiAgICAgIHJldHVybiBuZXcgU2V0KHZhbCk7XG4gICAgY2FzZSAnYnVmZmVyJzpcbiAgICAgIHJldHVybiBjbG9uZUJ1ZmZlcih2YWwpO1xuICAgIGNhc2UgJ3N5bWJvbCc6XG4gICAgICByZXR1cm4gY2xvbmVTeW1ib2wodmFsKTtcbiAgICBjYXNlICdhcnJheWJ1ZmZlcic6XG4gICAgICByZXR1cm4gY2xvbmVBcnJheUJ1ZmZlcih2YWwpO1xuICAgIGNhc2UgJ2Zsb2F0MzJhcnJheSc6XG4gICAgY2FzZSAnZmxvYXQ2NGFycmF5JzpcbiAgICBjYXNlICdpbnQxNmFycmF5JzpcbiAgICBjYXNlICdpbnQzMmFycmF5JzpcbiAgICBjYXNlICdpbnQ4YXJyYXknOlxuICAgIGNhc2UgJ3VpbnQxNmFycmF5JzpcbiAgICBjYXNlICd1aW50MzJhcnJheSc6XG4gICAgY2FzZSAndWludDhjbGFtcGVkYXJyYXknOlxuICAgIGNhc2UgJ3VpbnQ4YXJyYXknOlxuICAgICAgcmV0dXJuIGNsb25lVHlwZWRBcnJheSh2YWwpO1xuICAgIGNhc2UgJ3JlZ2V4cCc6XG4gICAgICByZXR1cm4gY2xvbmVSZWdFeHAodmFsKTtcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICByZXR1cm4gT2JqZWN0LmNyZWF0ZSh2YWwpO1xuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiB2YWw7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNsb25lUmVnRXhwKHZhbCkge1xuICBjb25zdCBmbGFncyA9IHZhbC5mbGFncyAhPT0gdm9pZCAwID8gdmFsLmZsYWdzIDogKC9cXHcrJC8uZXhlYyh2YWwpIHx8IHZvaWQgMCk7XG4gIGNvbnN0IHJlID0gbmV3IHZhbC5jb25zdHJ1Y3Rvcih2YWwuc291cmNlLCBmbGFncyk7XG4gIHJlLmxhc3RJbmRleCA9IHZhbC5sYXN0SW5kZXg7XG4gIHJldHVybiByZTtcbn1cblxuZnVuY3Rpb24gY2xvbmVBcnJheUJ1ZmZlcih2YWwpIHtcbiAgY29uc3QgcmVzID0gbmV3IHZhbC5jb25zdHJ1Y3Rvcih2YWwuYnl0ZUxlbmd0aCk7XG4gIG5ldyBVaW50OEFycmF5KHJlcykuc2V0KG5ldyBVaW50OEFycmF5KHZhbCkpO1xuICByZXR1cm4gcmVzO1xufVxuXG5mdW5jdGlvbiBjbG9uZVR5cGVkQXJyYXkodmFsLCBkZWVwKSB7XG4gIHJldHVybiBuZXcgdmFsLmNvbnN0cnVjdG9yKHZhbC5idWZmZXIsIHZhbC5ieXRlT2Zmc2V0LCB2YWwubGVuZ3RoKTtcbn1cblxuZnVuY3Rpb24gY2xvbmVCdWZmZXIodmFsKSB7XG4gIGNvbnN0IGxlbiA9IHZhbC5sZW5ndGg7XG4gIGNvbnN0IGJ1ZiA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSA/IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW4pIDogQnVmZmVyLmZyb20obGVuKTtcbiAgdmFsLmNvcHkoYnVmKTtcbiAgcmV0dXJuIGJ1Zjtcbn1cblxuZnVuY3Rpb24gY2xvbmVTeW1ib2wodmFsKSB7XG4gIHJldHVybiB2YWx1ZU9mID8gT2JqZWN0KHZhbHVlT2YuY2FsbCh2YWwpKSA6IHt9O1xufVxuXG4vKipcbiAqIEV4cG9zZSBgY2xvbmVgXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBjbG9uZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/shallow-clone/index.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/webpack-merge/dist/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nexports.unique = exports.mergeWithRules = exports.mergeWithCustomize = exports[\"default\"] = exports.merge = exports.CustomizeRule = exports.customizeObject = exports.customizeArray = void 0;\nvar wildcard_1 = __importDefault(__webpack_require__(/*! wildcard */ \"./node_modules/wildcard/index.js\"));\nvar merge_with_1 = __importDefault(__webpack_require__(/*! ./merge-with */ \"./node_modules/webpack-merge/dist/merge-with.js\"));\nvar join_arrays_1 = __importDefault(__webpack_require__(/*! ./join-arrays */ \"./node_modules/webpack-merge/dist/join-arrays.js\"));\nvar unique_1 = __importDefault(__webpack_require__(/*! ./unique */ \"./node_modules/webpack-merge/dist/unique.js\"));\nexports.unique = unique_1[\"default\"];\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/webpack-merge/dist/types.js\");\nexports.CustomizeRule = types_1.CustomizeRule;\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/webpack-merge/dist/utils.js\");\nfunction merge(firstConfiguration) {\n    var configurations = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        configurations[_i - 1] = arguments[_i];\n    }\n    return mergeWithCustomize({}).apply(void 0, __spreadArray([firstConfiguration], __read(configurations)));\n}\nexports.merge = merge;\nexports[\"default\"] = merge;\nfunction mergeWithCustomize(options) {\n    return function mergeWithOptions(firstConfiguration) {\n        var configurations = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            configurations[_i - 1] = arguments[_i];\n        }\n        if (utils_1.isUndefined(firstConfiguration) || configurations.some(utils_1.isUndefined)) {\n            throw new TypeError(\"Merging undefined is not supported\");\n        }\n        // @ts-ignore\n        if (firstConfiguration.then) {\n            throw new TypeError(\"Promises are not supported\");\n        }\n        // No configuration at all\n        if (!firstConfiguration) {\n            return {};\n        }\n        if (configurations.length === 0) {\n            if (Array.isArray(firstConfiguration)) {\n                // Empty array\n                if (firstConfiguration.length === 0) {\n                    return {};\n                }\n                if (firstConfiguration.some(utils_1.isUndefined)) {\n                    throw new TypeError(\"Merging undefined is not supported\");\n                }\n                // @ts-ignore\n                if (firstConfiguration[0].then) {\n                    throw new TypeError(\"Promises are not supported\");\n                }\n                return merge_with_1[\"default\"](firstConfiguration, join_arrays_1[\"default\"](options));\n            }\n            return firstConfiguration;\n        }\n        return merge_with_1[\"default\"]([firstConfiguration].concat(configurations), join_arrays_1[\"default\"](options));\n    };\n}\nexports.mergeWithCustomize = mergeWithCustomize;\nfunction customizeArray(rules) {\n    return function (a, b, key) {\n        var matchedRule = Object.keys(rules).find(function (rule) { return wildcard_1[\"default\"](rule, key); }) || \"\";\n        if (matchedRule) {\n            switch (rules[matchedRule]) {\n                case types_1.CustomizeRule.Prepend:\n                    return __spreadArray(__spreadArray([], __read(b)), __read(a));\n                case types_1.CustomizeRule.Replace:\n                    return b;\n                case types_1.CustomizeRule.Append:\n                default:\n                    return __spreadArray(__spreadArray([], __read(a)), __read(b));\n            }\n        }\n    };\n}\nexports.customizeArray = customizeArray;\nfunction mergeWithRules(rules) {\n    return mergeWithCustomize({\n        customizeArray: function (a, b, key) {\n            var currentRule = rules;\n            key.split(\".\").forEach(function (k) {\n                if (!currentRule) {\n                    return;\n                }\n                currentRule = currentRule[k];\n            });\n            if (utils_1.isPlainObject(currentRule)) {\n                return mergeWithRule({ currentRule: currentRule, a: a, b: b });\n            }\n            if (typeof currentRule === \"string\") {\n                return mergeIndividualRule({ currentRule: currentRule, a: a, b: b });\n            }\n            return undefined;\n        }\n    });\n}\nexports.mergeWithRules = mergeWithRules;\nvar isArray = Array.isArray;\nfunction mergeWithRule(_a) {\n    var currentRule = _a.currentRule, a = _a.a, b = _a.b;\n    if (!isArray(a)) {\n        return a;\n    }\n    var bAllMatches = [];\n    var ret = a.map(function (ao) {\n        if (!utils_1.isPlainObject(currentRule)) {\n            return ao;\n        }\n        var ret = {};\n        var rulesToMatch = [];\n        var operations = {};\n        Object.entries(currentRule).forEach(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            if (v === types_1.CustomizeRule.Match) {\n                rulesToMatch.push(k);\n            }\n            else {\n                operations[k] = v;\n            }\n        });\n        var bMatches = b.filter(function (o) {\n            var matches = rulesToMatch.every(function (rule) { var _a, _b; return ((_a = ao[rule]) === null || _a === void 0 ? void 0 : _a.toString()) === ((_b = o[rule]) === null || _b === void 0 ? void 0 : _b.toString()); });\n            if (matches) {\n                bAllMatches.push(o);\n            }\n            return matches;\n        });\n        if (!utils_1.isPlainObject(ao)) {\n            return ao;\n        }\n        Object.entries(ao).forEach(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            var rule = currentRule;\n            switch (currentRule[k]) {\n                case types_1.CustomizeRule.Match:\n                    ret[k] = v;\n                    Object.entries(rule).forEach(function (_a) {\n                        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                        if (v === types_1.CustomizeRule.Replace && bMatches.length > 0) {\n                            var val = last(bMatches)[k];\n                            if (typeof val !== \"undefined\") {\n                                ret[k] = val;\n                            }\n                        }\n                    });\n                    break;\n                case types_1.CustomizeRule.Append:\n                    if (!bMatches.length) {\n                        ret[k] = v;\n                        break;\n                    }\n                    var appendValue = last(bMatches)[k];\n                    if (!isArray(v) || !isArray(appendValue)) {\n                        throw new TypeError(\"Trying to append non-arrays\");\n                    }\n                    ret[k] = v.concat(appendValue);\n                    break;\n                case types_1.CustomizeRule.Merge:\n                    if (!bMatches.length) {\n                        ret[k] = v;\n                        break;\n                    }\n                    var lastValue = last(bMatches)[k];\n                    if (!utils_1.isPlainObject(v) || !utils_1.isPlainObject(lastValue)) {\n                        throw new TypeError(\"Trying to merge non-objects\");\n                    }\n                    // @ts-ignore: These should be objects now\n                    ret[k] = __assign(__assign({}, v), lastValue);\n                    break;\n                case types_1.CustomizeRule.Prepend:\n                    if (!bMatches.length) {\n                        ret[k] = v;\n                        break;\n                    }\n                    var prependValue = last(bMatches)[k];\n                    if (!isArray(v) || !isArray(prependValue)) {\n                        throw new TypeError(\"Trying to prepend non-arrays\");\n                    }\n                    ret[k] = prependValue.concat(v);\n                    break;\n                case types_1.CustomizeRule.Replace:\n                    ret[k] = bMatches.length > 0 ? last(bMatches)[k] : v;\n                    break;\n                default:\n                    var currentRule_1 = operations[k];\n                    // Use .flat(); starting from Node 12\n                    var b_1 = bMatches\n                        .map(function (o) { return o[k]; })\n                        .reduce(function (acc, val) {\n                        return isArray(acc) && isArray(val) ? __spreadArray(__spreadArray([], __read(acc)), __read(val)) : acc;\n                    }, []);\n                    ret[k] = mergeWithRule({ currentRule: currentRule_1, a: v, b: b_1 });\n                    break;\n            }\n        });\n        return ret;\n    });\n    return ret.concat(b.filter(function (o) { return !bAllMatches.includes(o); }));\n}\nfunction mergeIndividualRule(_a) {\n    var currentRule = _a.currentRule, a = _a.a, b = _a.b;\n    // What if there's no match?\n    switch (currentRule) {\n        case types_1.CustomizeRule.Append:\n            return a.concat(b);\n        case types_1.CustomizeRule.Prepend:\n            return b.concat(a);\n        case types_1.CustomizeRule.Replace:\n            return b;\n    }\n    return a;\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nfunction customizeObject(rules) {\n    return function (a, b, key) {\n        switch (rules[key]) {\n            case types_1.CustomizeRule.Prepend:\n                return merge_with_1[\"default\"]([b, a], join_arrays_1[\"default\"]());\n            case types_1.CustomizeRule.Replace:\n                return b;\n            case types_1.CustomizeRule.Append:\n                return merge_with_1[\"default\"]([a, b], join_arrays_1[\"default\"]());\n        }\n    };\n}\nexports.customizeObject = customizeObject;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLGlEQUFpRCxPQUFPO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFFBQVE7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSxrQkFBa0I7QUFDbEIsY0FBYyxHQUFHLHNCQUFzQixHQUFHLDBCQUEwQixHQUFHLGtCQUFrQixHQUFHLGFBQWEsR0FBRyxxQkFBcUIsR0FBRyx1QkFBdUIsR0FBRyxzQkFBc0I7QUFDcEwsaUNBQWlDLG1CQUFPLENBQUMsa0RBQVU7QUFDbkQsbUNBQW1DLG1CQUFPLENBQUMscUVBQWM7QUFDekQsb0NBQW9DLG1CQUFPLENBQUMsdUVBQWU7QUFDM0QsK0JBQStCLG1CQUFPLENBQUMsNkRBQVU7QUFDakQsY0FBYztBQUNkLGNBQWMsbUJBQU8sQ0FBQywyREFBUztBQUMvQixxQkFBcUI7QUFDckIsY0FBYyxtQkFBTyxDQUFDLDJEQUFTO0FBQy9CO0FBQ0E7QUFDQSxxQkFBcUIsdUJBQXVCO0FBQzVDO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQSxhQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxvRUFBb0UsMENBQTBDO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHVDQUF1QyxzQ0FBc0M7QUFDN0U7QUFDQTtBQUNBLDZDQUE2QyxzQ0FBc0M7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0RBQStELFlBQVksc0pBQXNKO0FBQ2pPO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBLDRDQUE0QyxjQUFjO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsNkNBQTZDLDBDQUEwQztBQUN2RjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMLDhDQUE4QyxrQ0FBa0M7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmluZV9wcm9qLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stbWVyZ2UvZGlzdC9pbmRleC5qcz83Njc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xuICAgIF9fYXNzaWduID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdDtcbiAgICB9O1xuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufTtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20pIHtcbiAgICBmb3IgKHZhciBpID0gMCwgaWwgPSBmcm9tLmxlbmd0aCwgaiA9IHRvLmxlbmd0aDsgaSA8IGlsOyBpKyssIGorKylcbiAgICAgICAgdG9bal0gPSBmcm9tW2ldO1xuICAgIHJldHVybiB0bztcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy51bmlxdWUgPSBleHBvcnRzLm1lcmdlV2l0aFJ1bGVzID0gZXhwb3J0cy5tZXJnZVdpdGhDdXN0b21pemUgPSBleHBvcnRzW1wiZGVmYXVsdFwiXSA9IGV4cG9ydHMubWVyZ2UgPSBleHBvcnRzLkN1c3RvbWl6ZVJ1bGUgPSBleHBvcnRzLmN1c3RvbWl6ZU9iamVjdCA9IGV4cG9ydHMuY3VzdG9taXplQXJyYXkgPSB2b2lkIDA7XG52YXIgd2lsZGNhcmRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwid2lsZGNhcmRcIikpO1xudmFyIG1lcmdlX3dpdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tZXJnZS13aXRoXCIpKTtcbnZhciBqb2luX2FycmF5c18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2pvaW4tYXJyYXlzXCIpKTtcbnZhciB1bmlxdWVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi91bmlxdWVcIikpO1xuZXhwb3J0cy51bmlxdWUgPSB1bmlxdWVfMVtcImRlZmF1bHRcIl07XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuZXhwb3J0cy5DdXN0b21pemVSdWxlID0gdHlwZXNfMS5DdXN0b21pemVSdWxlO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmZ1bmN0aW9uIG1lcmdlKGZpcnN0Q29uZmlndXJhdGlvbikge1xuICAgIHZhciBjb25maWd1cmF0aW9ucyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIGNvbmZpZ3VyYXRpb25zW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VXaXRoQ3VzdG9taXplKHt9KS5hcHBseSh2b2lkIDAsIF9fc3ByZWFkQXJyYXkoW2ZpcnN0Q29uZmlndXJhdGlvbl0sIF9fcmVhZChjb25maWd1cmF0aW9ucykpKTtcbn1cbmV4cG9ydHMubWVyZ2UgPSBtZXJnZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbWVyZ2U7XG5mdW5jdGlvbiBtZXJnZVdpdGhDdXN0b21pemUob3B0aW9ucykge1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVdpdGhPcHRpb25zKGZpcnN0Q29uZmlndXJhdGlvbikge1xuICAgICAgICB2YXIgY29uZmlndXJhdGlvbnMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb25zW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1dGlsc18xLmlzVW5kZWZpbmVkKGZpcnN0Q29uZmlndXJhdGlvbikgfHwgY29uZmlndXJhdGlvbnMuc29tZSh1dGlsc18xLmlzVW5kZWZpbmVkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIk1lcmdpbmcgdW5kZWZpbmVkIGlzIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpZiAoZmlyc3RDb25maWd1cmF0aW9uLnRoZW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcm9taXNlcyBhcmUgbm90IHN1cHBvcnRlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBObyBjb25maWd1cmF0aW9uIGF0IGFsbFxuICAgICAgICBpZiAoIWZpcnN0Q29uZmlndXJhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWd1cmF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGZpcnN0Q29uZmlndXJhdGlvbikpIHtcbiAgICAgICAgICAgICAgICAvLyBFbXB0eSBhcnJheVxuICAgICAgICAgICAgICAgIGlmIChmaXJzdENvbmZpZ3VyYXRpb24ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGZpcnN0Q29uZmlndXJhdGlvbi5zb21lKHV0aWxzXzEuaXNVbmRlZmluZWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJNZXJnaW5nIHVuZGVmaW5lZCBpcyBub3Qgc3VwcG9ydGVkXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgaWYgKGZpcnN0Q29uZmlndXJhdGlvblswXS50aGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcm9taXNlcyBhcmUgbm90IHN1cHBvcnRlZFwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lcmdlX3dpdGhfMVtcImRlZmF1bHRcIl0oZmlyc3RDb25maWd1cmF0aW9uLCBqb2luX2FycmF5c18xW1wiZGVmYXVsdFwiXShvcHRpb25zKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmlyc3RDb25maWd1cmF0aW9uO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtZXJnZV93aXRoXzFbXCJkZWZhdWx0XCJdKFtmaXJzdENvbmZpZ3VyYXRpb25dLmNvbmNhdChjb25maWd1cmF0aW9ucyksIGpvaW5fYXJyYXlzXzFbXCJkZWZhdWx0XCJdKG9wdGlvbnMpKTtcbiAgICB9O1xufVxuZXhwb3J0cy5tZXJnZVdpdGhDdXN0b21pemUgPSBtZXJnZVdpdGhDdXN0b21pemU7XG5mdW5jdGlvbiBjdXN0b21pemVBcnJheShydWxlcykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYiwga2V5KSB7XG4gICAgICAgIHZhciBtYXRjaGVkUnVsZSA9IE9iamVjdC5rZXlzKHJ1bGVzKS5maW5kKGZ1bmN0aW9uIChydWxlKSB7IHJldHVybiB3aWxkY2FyZF8xW1wiZGVmYXVsdFwiXShydWxlLCBrZXkpOyB9KSB8fCBcIlwiO1xuICAgICAgICBpZiAobWF0Y2hlZFJ1bGUpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocnVsZXNbbWF0Y2hlZFJ1bGVdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuUHJlcGVuZDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgX19yZWFkKGIpKSwgX19yZWFkKGEpKTtcbiAgICAgICAgICAgICAgICBjYXNlIHR5cGVzXzEuQ3VzdG9taXplUnVsZS5SZXBsYWNlOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYjtcbiAgICAgICAgICAgICAgICBjYXNlIHR5cGVzXzEuQ3VzdG9taXplUnVsZS5BcHBlbmQ6XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgX19yZWFkKGEpKSwgX19yZWFkKGIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmN1c3RvbWl6ZUFycmF5ID0gY3VzdG9taXplQXJyYXk7XG5mdW5jdGlvbiBtZXJnZVdpdGhSdWxlcyhydWxlcykge1xuICAgIHJldHVybiBtZXJnZVdpdGhDdXN0b21pemUoe1xuICAgICAgICBjdXN0b21pemVBcnJheTogZnVuY3Rpb24gKGEsIGIsIGtleSkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRSdWxlID0gcnVsZXM7XG4gICAgICAgICAgICBrZXkuc3BsaXQoXCIuXCIpLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgICAgICAgICAgICBpZiAoIWN1cnJlbnRSdWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY3VycmVudFJ1bGUgPSBjdXJyZW50UnVsZVtrXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHV0aWxzXzEuaXNQbGFpbk9iamVjdChjdXJyZW50UnVsZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWVyZ2VXaXRoUnVsZSh7IGN1cnJlbnRSdWxlOiBjdXJyZW50UnVsZSwgYTogYSwgYjogYiB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY3VycmVudFJ1bGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWVyZ2VJbmRpdmlkdWFsUnVsZSh7IGN1cnJlbnRSdWxlOiBjdXJyZW50UnVsZSwgYTogYSwgYjogYiB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMubWVyZ2VXaXRoUnVsZXMgPSBtZXJnZVdpdGhSdWxlcztcbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIG1lcmdlV2l0aFJ1bGUoX2EpIHtcbiAgICB2YXIgY3VycmVudFJ1bGUgPSBfYS5jdXJyZW50UnVsZSwgYSA9IF9hLmEsIGIgPSBfYS5iO1xuICAgIGlmICghaXNBcnJheShhKSkge1xuICAgICAgICByZXR1cm4gYTtcbiAgICB9XG4gICAgdmFyIGJBbGxNYXRjaGVzID0gW107XG4gICAgdmFyIHJldCA9IGEubWFwKGZ1bmN0aW9uIChhbykge1xuICAgICAgICBpZiAoIXV0aWxzXzEuaXNQbGFpbk9iamVjdChjdXJyZW50UnVsZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBhbztcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmV0ID0ge307XG4gICAgICAgIHZhciBydWxlc1RvTWF0Y2ggPSBbXTtcbiAgICAgICAgdmFyIG9wZXJhdGlvbnMgPSB7fTtcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoY3VycmVudFJ1bGUpLmZvckVhY2goZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICB2YXIgX2IgPSBfX3JlYWQoX2EsIDIpLCBrID0gX2JbMF0sIHYgPSBfYlsxXTtcbiAgICAgICAgICAgIGlmICh2ID09PSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBydWxlc1RvTWF0Y2gucHVzaChrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG9wZXJhdGlvbnNba10gPSB2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGJNYXRjaGVzID0gYi5maWx0ZXIoZnVuY3Rpb24gKG8pIHtcbiAgICAgICAgICAgIHZhciBtYXRjaGVzID0gcnVsZXNUb01hdGNoLmV2ZXJ5KGZ1bmN0aW9uIChydWxlKSB7IHZhciBfYSwgX2I7IHJldHVybiAoKF9hID0gYW9bcnVsZV0pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b1N0cmluZygpKSA9PT0gKChfYiA9IG9bcnVsZV0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi50b1N0cmluZygpKTsgfSk7XG4gICAgICAgICAgICBpZiAobWF0Y2hlcykge1xuICAgICAgICAgICAgICAgIGJBbGxNYXRjaGVzLnB1c2gobyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hlcztcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdXRpbHNfMS5pc1BsYWluT2JqZWN0KGFvKSkge1xuICAgICAgICAgICAgcmV0dXJuIGFvO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGFvKS5mb3JFYWNoKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgdmFyIF9iID0gX19yZWFkKF9hLCAyKSwgayA9IF9iWzBdLCB2ID0gX2JbMV07XG4gICAgICAgICAgICB2YXIgcnVsZSA9IGN1cnJlbnRSdWxlO1xuICAgICAgICAgICAgc3dpdGNoIChjdXJyZW50UnVsZVtrXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5DdXN0b21pemVSdWxlLk1hdGNoOlxuICAgICAgICAgICAgICAgICAgICByZXRba10gPSB2O1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhydWxlKS5mb3JFYWNoKGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9iID0gX19yZWFkKF9hLCAyKSwgayA9IF9iWzBdLCB2ID0gX2JbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodiA9PT0gdHlwZXNfMS5DdXN0b21pemVSdWxlLlJlcGxhY2UgJiYgYk1hdGNoZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBsYXN0KGJNYXRjaGVzKVtrXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHZhbCAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXRba10gPSB2YWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuQXBwZW5kOlxuICAgICAgICAgICAgICAgICAgICBpZiAoIWJNYXRjaGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0W2tdID0gdjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBhcHBlbmRWYWx1ZSA9IGxhc3QoYk1hdGNoZXMpW2tdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzQXJyYXkodikgfHwgIWlzQXJyYXkoYXBwZW5kVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiVHJ5aW5nIHRvIGFwcGVuZCBub24tYXJyYXlzXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldFtrXSA9IHYuY29uY2F0KGFwcGVuZFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuTWVyZ2U6XG4gICAgICAgICAgICAgICAgICAgIGlmICghYk1hdGNoZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXRba10gPSB2O1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhc3RWYWx1ZSA9IGxhc3QoYk1hdGNoZXMpW2tdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXV0aWxzXzEuaXNQbGFpbk9iamVjdCh2KSB8fCAhdXRpbHNfMS5pc1BsYWluT2JqZWN0KGxhc3RWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJUcnlpbmcgdG8gbWVyZ2Ugbm9uLW9iamVjdHNcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZTogVGhlc2Ugc2hvdWxkIGJlIG9iamVjdHMgbm93XG4gICAgICAgICAgICAgICAgICAgIHJldFtrXSA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCB2KSwgbGFzdFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuUHJlcGVuZDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFiTWF0Y2hlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldFtrXSA9IHY7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgcHJlcGVuZFZhbHVlID0gbGFzdChiTWF0Y2hlcylba107XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXNBcnJheSh2KSB8fCAhaXNBcnJheShwcmVwZW5kVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiVHJ5aW5nIHRvIHByZXBlbmQgbm9uLWFycmF5c1wiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXRba10gPSBwcmVwZW5kVmFsdWUuY29uY2F0KHYpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHR5cGVzXzEuQ3VzdG9taXplUnVsZS5SZXBsYWNlOlxuICAgICAgICAgICAgICAgICAgICByZXRba10gPSBiTWF0Y2hlcy5sZW5ndGggPiAwID8gbGFzdChiTWF0Y2hlcylba10gOiB2O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFJ1bGVfMSA9IG9wZXJhdGlvbnNba107XG4gICAgICAgICAgICAgICAgICAgIC8vIFVzZSAuZmxhdCgpOyBzdGFydGluZyBmcm9tIE5vZGUgMTJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJfMSA9IGJNYXRjaGVzXG4gICAgICAgICAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChvKSB7IHJldHVybiBvW2tdOyB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnJlZHVjZShmdW5jdGlvbiAoYWNjLCB2YWwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpc0FycmF5KGFjYykgJiYgaXNBcnJheSh2YWwpID8gX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoYWNjKSksIF9fcmVhZCh2YWwpKSA6IGFjYztcbiAgICAgICAgICAgICAgICAgICAgfSwgW10pO1xuICAgICAgICAgICAgICAgICAgICByZXRba10gPSBtZXJnZVdpdGhSdWxlKHsgY3VycmVudFJ1bGU6IGN1cnJlbnRSdWxlXzEsIGE6IHYsIGI6IGJfMSB9KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH0pO1xuICAgIHJldHVybiByZXQuY29uY2F0KGIuZmlsdGVyKGZ1bmN0aW9uIChvKSB7IHJldHVybiAhYkFsbE1hdGNoZXMuaW5jbHVkZXMobyk7IH0pKTtcbn1cbmZ1bmN0aW9uIG1lcmdlSW5kaXZpZHVhbFJ1bGUoX2EpIHtcbiAgICB2YXIgY3VycmVudFJ1bGUgPSBfYS5jdXJyZW50UnVsZSwgYSA9IF9hLmEsIGIgPSBfYS5iO1xuICAgIC8vIFdoYXQgaWYgdGhlcmUncyBubyBtYXRjaD9cbiAgICBzd2l0Y2ggKGN1cnJlbnRSdWxlKSB7XG4gICAgICAgIGNhc2UgdHlwZXNfMS5DdXN0b21pemVSdWxlLkFwcGVuZDpcbiAgICAgICAgICAgIHJldHVybiBhLmNvbmNhdChiKTtcbiAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuUHJlcGVuZDpcbiAgICAgICAgICAgIHJldHVybiBiLmNvbmNhdChhKTtcbiAgICAgICAgY2FzZSB0eXBlc18xLkN1c3RvbWl6ZVJ1bGUuUmVwbGFjZTpcbiAgICAgICAgICAgIHJldHVybiBiO1xuICAgIH1cbiAgICByZXR1cm4gYTtcbn1cbmZ1bmN0aW9uIGxhc3QoYXJyKSB7XG4gICAgcmV0dXJuIGFyclthcnIubGVuZ3RoIC0gMV07XG59XG5mdW5jdGlvbiBjdXN0b21pemVPYmplY3QocnVsZXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGtleSkge1xuICAgICAgICBzd2l0Y2ggKHJ1bGVzW2tleV0pIHtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5DdXN0b21pemVSdWxlLlByZXBlbmQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lcmdlX3dpdGhfMVtcImRlZmF1bHRcIl0oW2IsIGFdLCBqb2luX2FycmF5c18xW1wiZGVmYXVsdFwiXSgpKTtcbiAgICAgICAgICAgIGNhc2UgdHlwZXNfMS5DdXN0b21pemVSdWxlLlJlcGxhY2U6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGI7XG4gICAgICAgICAgICBjYXNlIHR5cGVzXzEuQ3VzdG9taXplUnVsZS5BcHBlbmQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lcmdlX3dpdGhfMVtcImRlZmF1bHRcIl0oW2EsIGJdLCBqb2luX2FycmF5c18xW1wiZGVmYXVsdFwiXSgpKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnRzLmN1c3RvbWl6ZU9iamVjdCA9IGN1c3RvbWl6ZU9iamVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/index.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/join-arrays.js":
/*!********************************************************!*\
  !*** ./node_modules/webpack-merge/dist/join-arrays.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nexports.__esModule = true;\nvar clone_deep_1 = __importDefault(__webpack_require__(/*! clone-deep */ \"./node_modules/clone-deep/index.js\"));\nvar merge_with_1 = __importDefault(__webpack_require__(/*! ./merge-with */ \"./node_modules/webpack-merge/dist/merge-with.js\"));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/webpack-merge/dist/utils.js\");\nvar isArray = Array.isArray;\nfunction joinArrays(_a) {\n    var _b = _a === void 0 ? {} : _a, customizeArray = _b.customizeArray, customizeObject = _b.customizeObject, key = _b.key;\n    return function _joinArrays(a, b, k) {\n        var newKey = key ? key + \".\" + k : k;\n        if (utils_1.isFunction(a) && utils_1.isFunction(b)) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return _joinArrays(a.apply(void 0, __spreadArray([], __read(args))), b.apply(void 0, __spreadArray([], __read(args))), k);\n            };\n        }\n        if (isArray(a) && isArray(b)) {\n            var customResult = customizeArray && customizeArray(a, b, newKey);\n            return customResult || __spreadArray(__spreadArray([], __read(a)), __read(b));\n        }\n        if (utils_1.isRegex(b)) {\n            return b;\n        }\n        if (utils_1.isPlainObject(a) && utils_1.isPlainObject(b)) {\n            var customResult = customizeObject && customizeObject(a, b, newKey);\n            return (customResult ||\n                merge_with_1[\"default\"]([a, b], joinArrays({\n                    customizeArray: customizeArray,\n                    customizeObject: customizeObject,\n                    key: newKey\n                })));\n        }\n        if (utils_1.isPlainObject(b)) {\n            return clone_deep_1[\"default\"](b);\n        }\n        if (isArray(b)) {\n            return __spreadArray([], __read(b));\n        }\n        return b;\n    };\n}\nexports[\"default\"] = joinArrays;\n//# sourceMappingURL=join-arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L2pvaW4tYXJyYXlzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0Esa0JBQWtCO0FBQ2xCLG1DQUFtQyxtQkFBTyxDQUFDLHNEQUFZO0FBQ3ZELG1DQUFtQyxtQkFBTyxDQUFDLHFFQUFjO0FBQ3pELGNBQWMsbUJBQU8sQ0FBQywyREFBUztBQUMvQjtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsdUJBQXVCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L2pvaW4tYXJyYXlzLmpzP2M0ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGlsID0gZnJvbS5sZW5ndGgsIGogPSB0by5sZW5ndGg7IGkgPCBpbDsgaSsrLCBqKyspXG4gICAgICAgIHRvW2pdID0gZnJvbVtpXTtcbiAgICByZXR1cm4gdG87XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBjbG9uZV9kZWVwXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImNsb25lLWRlZXBcIikpO1xudmFyIG1lcmdlX3dpdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tZXJnZS13aXRoXCIpKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBqb2luQXJyYXlzKF9hKSB7XG4gICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIGN1c3RvbWl6ZUFycmF5ID0gX2IuY3VzdG9taXplQXJyYXksIGN1c3RvbWl6ZU9iamVjdCA9IF9iLmN1c3RvbWl6ZU9iamVjdCwga2V5ID0gX2Iua2V5O1xuICAgIHJldHVybiBmdW5jdGlvbiBfam9pbkFycmF5cyhhLCBiLCBrKSB7XG4gICAgICAgIHZhciBuZXdLZXkgPSBrZXkgPyBrZXkgKyBcIi5cIiArIGsgOiBrO1xuICAgICAgICBpZiAodXRpbHNfMS5pc0Z1bmN0aW9uKGEpICYmIHV0aWxzXzEuaXNGdW5jdGlvbihiKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9qb2luQXJyYXlzKGEuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoYXJncykpKSwgYi5hcHBseSh2b2lkIDAsIF9fc3ByZWFkQXJyYXkoW10sIF9fcmVhZChhcmdzKSkpLCBrKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQXJyYXkoYSkgJiYgaXNBcnJheShiKSkge1xuICAgICAgICAgICAgdmFyIGN1c3RvbVJlc3VsdCA9IGN1c3RvbWl6ZUFycmF5ICYmIGN1c3RvbWl6ZUFycmF5KGEsIGIsIG5ld0tleSk7XG4gICAgICAgICAgICByZXR1cm4gY3VzdG9tUmVzdWx0IHx8IF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgX19yZWFkKGEpKSwgX19yZWFkKGIpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodXRpbHNfMS5pc1JlZ2V4KGIpKSB7XG4gICAgICAgICAgICByZXR1cm4gYjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodXRpbHNfMS5pc1BsYWluT2JqZWN0KGEpICYmIHV0aWxzXzEuaXNQbGFpbk9iamVjdChiKSkge1xuICAgICAgICAgICAgdmFyIGN1c3RvbVJlc3VsdCA9IGN1c3RvbWl6ZU9iamVjdCAmJiBjdXN0b21pemVPYmplY3QoYSwgYiwgbmV3S2V5KTtcbiAgICAgICAgICAgIHJldHVybiAoY3VzdG9tUmVzdWx0IHx8XG4gICAgICAgICAgICAgICAgbWVyZ2Vfd2l0aF8xW1wiZGVmYXVsdFwiXShbYSwgYl0sIGpvaW5BcnJheXMoe1xuICAgICAgICAgICAgICAgICAgICBjdXN0b21pemVBcnJheTogY3VzdG9taXplQXJyYXksXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbWl6ZU9iamVjdDogY3VzdG9taXplT2JqZWN0LFxuICAgICAgICAgICAgICAgICAgICBrZXk6IG5ld0tleVxuICAgICAgICAgICAgICAgIH0pKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHV0aWxzXzEuaXNQbGFpbk9iamVjdChiKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNsb25lX2RlZXBfMVtcImRlZmF1bHRcIl0oYik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQXJyYXkoYikpIHtcbiAgICAgICAgICAgIHJldHVybiBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoYikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiO1xuICAgIH07XG59XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGpvaW5BcnJheXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qb2luLWFycmF5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/join-arrays.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/merge-with.js":
/*!*******************************************************!*\
  !*** ./node_modules/webpack-merge/dist/merge-with.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexports.__esModule = true;\nfunction mergeWith(objects, customizer) {\n    var _a = __read(objects), first = _a[0], rest = _a.slice(1);\n    var ret = first;\n    rest.forEach(function (a) {\n        ret = mergeTo(ret, a, customizer);\n    });\n    return ret;\n}\nfunction mergeTo(a, b, customizer) {\n    var ret = {};\n    Object.keys(a)\n        .concat(Object.keys(b))\n        .forEach(function (k) {\n        var v = customizer(a[k], b[k], k);\n        ret[k] = typeof v === \"undefined\" ? a[k] : v;\n    });\n    return ret;\n}\nexports[\"default\"] = mergeWith;\n//# sourceMappingURL=merge-with.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L21lcmdlLXdpdGguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L21lcmdlLXdpdGguanM/ZDU0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBtZXJnZVdpdGgob2JqZWN0cywgY3VzdG9taXplcikge1xuICAgIHZhciBfYSA9IF9fcmVhZChvYmplY3RzKSwgZmlyc3QgPSBfYVswXSwgcmVzdCA9IF9hLnNsaWNlKDEpO1xuICAgIHZhciByZXQgPSBmaXJzdDtcbiAgICByZXN0LmZvckVhY2goZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgcmV0ID0gbWVyZ2VUbyhyZXQsIGEsIGN1c3RvbWl6ZXIpO1xuICAgIH0pO1xuICAgIHJldHVybiByZXQ7XG59XG5mdW5jdGlvbiBtZXJnZVRvKGEsIGIsIGN1c3RvbWl6ZXIpIHtcbiAgICB2YXIgcmV0ID0ge307XG4gICAgT2JqZWN0LmtleXMoYSlcbiAgICAgICAgLmNvbmNhdChPYmplY3Qua2V5cyhiKSlcbiAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgICAgdmFyIHYgPSBjdXN0b21pemVyKGFba10sIGJba10sIGspO1xuICAgICAgICByZXRba10gPSB0eXBlb2YgdiA9PT0gXCJ1bmRlZmluZWRcIiA/IGFba10gOiB2O1xuICAgIH0pO1xuICAgIHJldHVybiByZXQ7XG59XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1lcmdlV2l0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lcmdlLXdpdGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/merge-with.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/types.js":
/*!**************************************************!*\
  !*** ./node_modules/webpack-merge/dist/types.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nexports.__esModule = true;\nexports.CustomizeRule = void 0;\nvar CustomizeRule;\n(function (CustomizeRule) {\n    CustomizeRule[\"Match\"] = \"match\";\n    CustomizeRule[\"Merge\"] = \"merge\";\n    CustomizeRule[\"Append\"] = \"append\";\n    CustomizeRule[\"Prepend\"] = \"prepend\";\n    CustomizeRule[\"Replace\"] = \"replace\";\n})(CustomizeRule = exports.CustomizeRule || (exports.CustomizeRule = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDLHFCQUFxQixLQUFLO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L3R5cGVzLmpzPzhhNTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5DdXN0b21pemVSdWxlID0gdm9pZCAwO1xudmFyIEN1c3RvbWl6ZVJ1bGU7XG4oZnVuY3Rpb24gKEN1c3RvbWl6ZVJ1bGUpIHtcbiAgICBDdXN0b21pemVSdWxlW1wiTWF0Y2hcIl0gPSBcIm1hdGNoXCI7XG4gICAgQ3VzdG9taXplUnVsZVtcIk1lcmdlXCJdID0gXCJtZXJnZVwiO1xuICAgIEN1c3RvbWl6ZVJ1bGVbXCJBcHBlbmRcIl0gPSBcImFwcGVuZFwiO1xuICAgIEN1c3RvbWl6ZVJ1bGVbXCJQcmVwZW5kXCJdID0gXCJwcmVwZW5kXCI7XG4gICAgQ3VzdG9taXplUnVsZVtcIlJlcGxhY2VcIl0gPSBcInJlcGxhY2VcIjtcbn0pKEN1c3RvbWl6ZVJ1bGUgPSBleHBvcnRzLkN1c3RvbWl6ZVJ1bGUgfHwgKGV4cG9ydHMuQ3VzdG9taXplUnVsZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/types.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/unique.js":
/*!***************************************************!*\
  !*** ./node_modules/webpack-merge/dist/unique.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nexports.__esModule = true;\nfunction mergeUnique(key, uniques, getter) {\n    var uniquesSet = new Set(uniques);\n    return function (a, b, k) {\n        return (k === key) && Array.from(__spreadArray(__spreadArray([], __read(a)), __read(b)).map(function (it) { return ({ key: getter(it), value: it }); })\n            .map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return ({ key: (uniquesSet.has(key) ? key : value), value: value });\n        })\n            .reduce(function (m, _a) {\n            var key = _a.key, value = _a.value;\n            m[\"delete\"](key); // This is required to preserve backward compatible order of elements after a merge.\n            return m.set(key, value);\n        }, new Map())\n            .values());\n    };\n}\nexports[\"default\"] = mergeUnique;\n//# sourceMappingURL=unique.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L3VuaXF1ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUTtBQUM3RDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0Esb0hBQW9ILFVBQVUsNEJBQTRCLElBQUk7QUFDOUo7QUFDQTtBQUNBLHNCQUFzQix3REFBd0Q7QUFDOUUsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L3VuaXF1ZS5qcz80MTllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBpbCA9IGZyb20ubGVuZ3RoLCBqID0gdG8ubGVuZ3RoOyBpIDwgaWw7IGkrKywgaisrKVxuICAgICAgICB0b1tqXSA9IGZyb21baV07XG4gICAgcmV0dXJuIHRvO1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5mdW5jdGlvbiBtZXJnZVVuaXF1ZShrZXksIHVuaXF1ZXMsIGdldHRlcikge1xuICAgIHZhciB1bmlxdWVzU2V0ID0gbmV3IFNldCh1bmlxdWVzKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGspIHtcbiAgICAgICAgcmV0dXJuIChrID09PSBrZXkpICYmIEFycmF5LmZyb20oX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoYSkpLCBfX3JlYWQoYikpLm1hcChmdW5jdGlvbiAoaXQpIHsgcmV0dXJuICh7IGtleTogZ2V0dGVyKGl0KSwgdmFsdWU6IGl0IH0pOyB9KVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBfYS5rZXksIHZhbHVlID0gX2EudmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gKHsga2V5OiAodW5pcXVlc1NldC5oYXMoa2V5KSA/IGtleSA6IHZhbHVlKSwgdmFsdWU6IHZhbHVlIH0pO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnJlZHVjZShmdW5jdGlvbiAobSwgX2EpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBfYS5rZXksIHZhbHVlID0gX2EudmFsdWU7XG4gICAgICAgICAgICBtW1wiZGVsZXRlXCJdKGtleSk7IC8vIFRoaXMgaXMgcmVxdWlyZWQgdG8gcHJlc2VydmUgYmFja3dhcmQgY29tcGF0aWJsZSBvcmRlciBvZiBlbGVtZW50cyBhZnRlciBhIG1lcmdlLlxuICAgICAgICAgICAgcmV0dXJuIG0uc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9LCBuZXcgTWFwKCkpXG4gICAgICAgICAgICAudmFsdWVzKCkpO1xuICAgIH07XG59XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1lcmdlVW5pcXVlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5pcXVlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/unique.js\n");

/***/ }),

/***/ "./node_modules/webpack-merge/dist/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/webpack-merge/dist/utils.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nexports.__esModule = true;\nexports.isUndefined = exports.isPlainObject = exports.isFunction = exports.isRegex = void 0;\nfunction isRegex(o) {\n    return o instanceof RegExp;\n}\nexports.isRegex = isRegex;\n// https://stackoverflow.com/a/7356528/228885\nfunction isFunction(functionToCheck) {\n    return (functionToCheck && {}.toString.call(functionToCheck) === \"[object Function]\");\n}\nexports.isFunction = isFunction;\nfunction isPlainObject(a) {\n    if (a === null || Array.isArray(a)) {\n        return false;\n    }\n    return typeof a === \"object\";\n}\nexports.isPlainObject = isPlainObject;\nfunction isUndefined(a) {\n    return typeof a === \"undefined\";\n}\nexports.isUndefined = isUndefined;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay1tZXJnZS9kaXN0L3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCO0FBQ2xCLG1CQUFtQixHQUFHLHFCQUFxQixHQUFHLGtCQUFrQixHQUFHLGVBQWU7QUFDbEY7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmluZV9wcm9qLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2stbWVyZ2UvZGlzdC91dGlscy5qcz8zYjc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBleHBvcnRzLmlzUGxhaW5PYmplY3QgPSBleHBvcnRzLmlzRnVuY3Rpb24gPSBleHBvcnRzLmlzUmVnZXggPSB2b2lkIDA7XG5mdW5jdGlvbiBpc1JlZ2V4KG8pIHtcbiAgICByZXR1cm4gbyBpbnN0YW5jZW9mIFJlZ0V4cDtcbn1cbmV4cG9ydHMuaXNSZWdleCA9IGlzUmVnZXg7XG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNzM1NjUyOC8yMjg4ODVcbmZ1bmN0aW9uIGlzRnVuY3Rpb24oZnVuY3Rpb25Ub0NoZWNrKSB7XG4gICAgcmV0dXJuIChmdW5jdGlvblRvQ2hlY2sgJiYge30udG9TdHJpbmcuY2FsbChmdW5jdGlvblRvQ2hlY2spID09PSBcIltvYmplY3QgRnVuY3Rpb25dXCIpO1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QoYSkge1xuICAgIGlmIChhID09PSBudWxsIHx8IEFycmF5LmlzQXJyYXkoYSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZW9mIGEgPT09IFwib2JqZWN0XCI7XG59XG5leHBvcnRzLmlzUGxhaW5PYmplY3QgPSBpc1BsYWluT2JqZWN0O1xuZnVuY3Rpb24gaXNVbmRlZmluZWQoYSkge1xuICAgIHJldHVybiB0eXBlb2YgYSA9PT0gXCJ1bmRlZmluZWRcIjtcbn1cbmV4cG9ydHMuaXNVbmRlZmluZWQgPSBpc1VuZGVmaW5lZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack-merge/dist/utils.js\n");

/***/ }),

/***/ "./node_modules/wildcard/index.js":
/*!****************************************!*\
  !*** ./node_modules/wildcard/index.js ***!
  \****************************************/
/***/ (function(module) {

"use strict";
eval("/* jshint node: true */\n\n\nvar REGEXP_PARTS = /(\\*|\\?)/g;\n\n/**\n  # wildcard\n\n  Very simple wildcard matching, which is designed to provide the same\n  functionality that is found in the\n  [eve](https://github.com/adobe-webplatform/eve) eventing library.\n\n  ## Usage\n\n  It works with strings:\n\n  <<< examples/strings.js\n\n  Arrays:\n\n  <<< examples/arrays.js\n\n  Objects (matching against keys):\n\n  <<< examples/objects.js\n\n  ## Alternative Implementations\n\n  - <https://github.com/isaacs/node-glob>\n\n    Great for full file-based wildcard matching.\n\n  - <https://github.com/sindresorhus/matcher>\n\n     A well cared for and loved JS wildcard matcher.\n**/\n\nfunction WildcardMatcher(text, separator) {\n  this.text = text = text || '';\n  this.hasWild = text.indexOf('*') >= 0;\n  this.separator = separator;\n  this.parts = text.split(separator).map(this.classifyPart.bind(this));\n}\n\nWildcardMatcher.prototype.match = function(input) {\n  var matches = true;\n  var parts = this.parts;\n  var ii;\n  var partsCount = parts.length;\n  var testParts;\n\n  if (typeof input == 'string' || input instanceof String) {\n    if (!this.hasWild && this.text != input) {\n      matches = false;\n    } else {\n      testParts = (input || '').split(this.separator);\n      for (ii = 0; matches && ii < partsCount; ii++) {\n        if (parts[ii] === '*')  {\n          continue;\n        } else if (ii < testParts.length) {\n          matches = parts[ii] instanceof RegExp\n            ? parts[ii].test(testParts[ii])\n            : parts[ii] === testParts[ii];\n        } else {\n          matches = false;\n        }\n      }\n\n      // If matches, then return the component parts\n      matches = matches && testParts;\n    }\n  }\n  else if (typeof input.splice == 'function') {\n    matches = [];\n\n    for (ii = input.length; ii--; ) {\n      if (this.match(input[ii])) {\n        matches[matches.length] = input[ii];\n      }\n    }\n  }\n  else if (typeof input == 'object') {\n    matches = {};\n\n    for (var key in input) {\n      if (this.match(key)) {\n        matches[key] = input[key];\n      }\n    }\n  }\n\n  return matches;\n};\n\nWildcardMatcher.prototype.classifyPart = function(part) {\n  // in the event that we have been provided a part that is not just a wildcard\n  // then turn this into a regular expression for matching purposes\n  if (part === '*') {\n    return part;\n  } else if (part.indexOf('*') >= 0 || part.indexOf('?') >= 0) {\n    return new RegExp(part.replace(REGEXP_PARTS, '\\.$1'));\n  }\n\n  return part;\n};\n\nmodule.exports = function(text, test, separator) {\n  var matcher = new WildcardMatcher(text, separator || /[\\/\\.]/);\n  if (typeof test != 'undefined') {\n    return matcher.match(test);\n  }\n\n  return matcher;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2lsZGNhcmQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDYTs7QUFFYjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsbUJBQW1CLDRCQUE0QjtBQUMvQztBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDRCQUE0QixNQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdmluZV9wcm9qLy4vbm9kZV9tb2R1bGVzL3dpbGRjYXJkL2luZGV4LmpzPzZmNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoganNoaW50IG5vZGU6IHRydWUgKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIFJFR0VYUF9QQVJUUyA9IC8oXFwqfFxcPykvZztcblxuLyoqXG4gICMgd2lsZGNhcmRcblxuICBWZXJ5IHNpbXBsZSB3aWxkY2FyZCBtYXRjaGluZywgd2hpY2ggaXMgZGVzaWduZWQgdG8gcHJvdmlkZSB0aGUgc2FtZVxuICBmdW5jdGlvbmFsaXR5IHRoYXQgaXMgZm91bmQgaW4gdGhlXG4gIFtldmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9hZG9iZS13ZWJwbGF0Zm9ybS9ldmUpIGV2ZW50aW5nIGxpYnJhcnkuXG5cbiAgIyMgVXNhZ2VcblxuICBJdCB3b3JrcyB3aXRoIHN0cmluZ3M6XG5cbiAgPDw8IGV4YW1wbGVzL3N0cmluZ3MuanNcblxuICBBcnJheXM6XG5cbiAgPDw8IGV4YW1wbGVzL2FycmF5cy5qc1xuXG4gIE9iamVjdHMgKG1hdGNoaW5nIGFnYWluc3Qga2V5cyk6XG5cbiAgPDw8IGV4YW1wbGVzL29iamVjdHMuanNcblxuICAjIyBBbHRlcm5hdGl2ZSBJbXBsZW1lbnRhdGlvbnNcblxuICAtIDxodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL25vZGUtZ2xvYj5cblxuICAgIEdyZWF0IGZvciBmdWxsIGZpbGUtYmFzZWQgd2lsZGNhcmQgbWF0Y2hpbmcuXG5cbiAgLSA8aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tYXRjaGVyPlxuXG4gICAgIEEgd2VsbCBjYXJlZCBmb3IgYW5kIGxvdmVkIEpTIHdpbGRjYXJkIG1hdGNoZXIuXG4qKi9cblxuZnVuY3Rpb24gV2lsZGNhcmRNYXRjaGVyKHRleHQsIHNlcGFyYXRvcikge1xuICB0aGlzLnRleHQgPSB0ZXh0ID0gdGV4dCB8fCAnJztcbiAgdGhpcy5oYXNXaWxkID0gdGV4dC5pbmRleE9mKCcqJykgPj0gMDtcbiAgdGhpcy5zZXBhcmF0b3IgPSBzZXBhcmF0b3I7XG4gIHRoaXMucGFydHMgPSB0ZXh0LnNwbGl0KHNlcGFyYXRvcikubWFwKHRoaXMuY2xhc3NpZnlQYXJ0LmJpbmQodGhpcykpO1xufVxuXG5XaWxkY2FyZE1hdGNoZXIucHJvdG90eXBlLm1hdGNoID0gZnVuY3Rpb24oaW5wdXQpIHtcbiAgdmFyIG1hdGNoZXMgPSB0cnVlO1xuICB2YXIgcGFydHMgPSB0aGlzLnBhcnRzO1xuICB2YXIgaWk7XG4gIHZhciBwYXJ0c0NvdW50ID0gcGFydHMubGVuZ3RoO1xuICB2YXIgdGVzdFBhcnRzO1xuXG4gIGlmICh0eXBlb2YgaW5wdXQgPT0gJ3N0cmluZycgfHwgaW5wdXQgaW5zdGFuY2VvZiBTdHJpbmcpIHtcbiAgICBpZiAoIXRoaXMuaGFzV2lsZCAmJiB0aGlzLnRleHQgIT0gaW5wdXQpIHtcbiAgICAgIG1hdGNoZXMgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGVzdFBhcnRzID0gKGlucHV0IHx8ICcnKS5zcGxpdCh0aGlzLnNlcGFyYXRvcik7XG4gICAgICBmb3IgKGlpID0gMDsgbWF0Y2hlcyAmJiBpaSA8IHBhcnRzQ291bnQ7IGlpKyspIHtcbiAgICAgICAgaWYgKHBhcnRzW2lpXSA9PT0gJyonKSAge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9IGVsc2UgaWYgKGlpIDwgdGVzdFBhcnRzLmxlbmd0aCkge1xuICAgICAgICAgIG1hdGNoZXMgPSBwYXJ0c1tpaV0gaW5zdGFuY2VvZiBSZWdFeHBcbiAgICAgICAgICAgID8gcGFydHNbaWldLnRlc3QodGVzdFBhcnRzW2lpXSlcbiAgICAgICAgICAgIDogcGFydHNbaWldID09PSB0ZXN0UGFydHNbaWldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG1hdGNoZXMgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJZiBtYXRjaGVzLCB0aGVuIHJldHVybiB0aGUgY29tcG9uZW50IHBhcnRzXG4gICAgICBtYXRjaGVzID0gbWF0Y2hlcyAmJiB0ZXN0UGFydHM7XG4gICAgfVxuICB9XG4gIGVsc2UgaWYgKHR5cGVvZiBpbnB1dC5zcGxpY2UgPT0gJ2Z1bmN0aW9uJykge1xuICAgIG1hdGNoZXMgPSBbXTtcblxuICAgIGZvciAoaWkgPSBpbnB1dC5sZW5ndGg7IGlpLS07ICkge1xuICAgICAgaWYgKHRoaXMubWF0Y2goaW5wdXRbaWldKSkge1xuICAgICAgICBtYXRjaGVzW21hdGNoZXMubGVuZ3RoXSA9IGlucHV0W2lpXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZWxzZSBpZiAodHlwZW9mIGlucHV0ID09ICdvYmplY3QnKSB7XG4gICAgbWF0Y2hlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIga2V5IGluIGlucHV0KSB7XG4gICAgICBpZiAodGhpcy5tYXRjaChrZXkpKSB7XG4gICAgICAgIG1hdGNoZXNba2V5XSA9IGlucHV0W2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1hdGNoZXM7XG59O1xuXG5XaWxkY2FyZE1hdGNoZXIucHJvdG90eXBlLmNsYXNzaWZ5UGFydCA9IGZ1bmN0aW9uKHBhcnQpIHtcbiAgLy8gaW4gdGhlIGV2ZW50IHRoYXQgd2UgaGF2ZSBiZWVuIHByb3ZpZGVkIGEgcGFydCB0aGF0IGlzIG5vdCBqdXN0IGEgd2lsZGNhcmRcbiAgLy8gdGhlbiB0dXJuIHRoaXMgaW50byBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBmb3IgbWF0Y2hpbmcgcHVycG9zZXNcbiAgaWYgKHBhcnQgPT09ICcqJykge1xuICAgIHJldHVybiBwYXJ0O1xuICB9IGVsc2UgaWYgKHBhcnQuaW5kZXhPZignKicpID49IDAgfHwgcGFydC5pbmRleE9mKCc/JykgPj0gMCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKHBhcnQucmVwbGFjZShSRUdFWFBfUEFSVFMsICdcXC4kMScpKTtcbiAgfVxuXG4gIHJldHVybiBwYXJ0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0ZXh0LCB0ZXN0LCBzZXBhcmF0b3IpIHtcbiAgdmFyIG1hdGNoZXIgPSBuZXcgV2lsZGNhcmRNYXRjaGVyKHRleHQsIHNlcGFyYXRvciB8fCAvW1xcL1xcLl0vKTtcbiAgaWYgKHR5cGVvZiB0ZXN0ICE9ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIG1hdGNoZXIubWF0Y2godGVzdCk7XG4gIH1cblxuICByZXR1cm4gbWF0Y2hlcjtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wildcard/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;
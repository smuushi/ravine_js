/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/TileMap */ \"./src/scripts/TileMap.js\");\n/* harmony import */ var _scripts_Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _scripts_UserInterface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/UserInterface */ \"./src/scripts/UserInterface.js\");\n/* harmony import */ var _scripts_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/foodUtils */ \"./src/scripts/foodUtils.js\");\n/* harmony import */ var _scripts_Consumable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/Consumable */ \"./src/scripts/Consumable.js\");\n/* harmony import */ var _scripts_EnvObject__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scripts/EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _scripts_Menus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scripts/Menus */ \"./src/scripts/Menus.js\");\n/* harmony import */ var _scripts_Options__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scripts/Options */ \"./src/scripts/Options.js\");\n/* harmony import */ var _scripts_musics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scripts/musics */ \"./src/scripts/musics.js\");\n\n\n\n\n\n\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // waiting for stuff to load first. lmao\n\n  console.log('hello world');\n  console.log('hellos from index');\n\n  // game info so far... \n  // map size will be 30 x 20 squares. \n  // tile size 16 x 16 pixels also. \n\n  const canvas = document.getElementById('game-canvas'); // gathered my html elements that I will be working in. \n  const ctx = canvas.getContext('2d'); // all rendering takes place on the ctx. \n\n  const tileSize = 16;\n  const theTileMapInstance = new _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](tileSize);\n  const player = theTileMapInstance.getPlayer(1.13);\n  const nextDayMenu = new _scripts_Menus__WEBPACK_IMPORTED_MODULE_7__[\"default\"](theTileMapInstance);\n  const theOptionsMenu = new _scripts_Options__WEBPACK_IMPORTED_MODULE_8__[\"default\"](theTileMapInstance);\n  theTileMapInstance.bedMenu = nextDayMenu; // THIS IS AN IMPORTANT LINE OF CODE.. ughhh lmaoooo haha\n  theTileMapInstance.optionsMenu = theOptionsMenu; // by convention now.. all menus will be made this way lmaoo\n  // it's important to tie the menus to the tileMap so that the player inputs can reference it when making their selections.. \n\n  const userInter = new _scripts_UserInterface__WEBPACK_IMPORTED_MODULE_2__[\"default\"](theTileMapInstance, player);\n  const envObjects = theTileMapInstance.getObjects();\n  console.log(player);\n  // debugger\n\n  // if (!EnvObject.prototype.INTERACTIVEITEMS){\n  const foodItems = _scripts_EnvObject__WEBPACK_IMPORTED_MODULE_6__[\"default\"].prototype.INTERACTIVEITEMS;\n  // }\n\n  const hitboxes = _scripts_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.ALLHITBOXESMADE;\n  const passableHitboxes = _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].prototype.PASSABLEHITBOXES;\n  const gameOverMusic = new _scripts_musics__WEBPACK_IMPORTED_MODULE_9__[\"default\"]('./src/graphics/NinjaAdventure/Musics/14 - Curse.ogg');\n  function gameRender() {\n    // layer draw calls to create layers\n\n    if (theTileMapInstance.paused === false) {\n      theTileMapInstance.draw(ctx);\n      foodItems.forEach(food => food._drawFood(ctx));\n      // debugger\n      // player.animate(ctx)\n      // console.log(\"hello\")\n      // player.move(ctx);\n      // player.animate(ctx)\n      if (player.health === 0) {\n        // player.currentFrame = 0;\n        player.animateDeath(ctx);\n        gameOverMusic.play();\n      } else {\n        player.move(ctx);\n        if (player.state === \"idle\") {\n          player.animate(ctx);\n        } else if (player.state === \"attacking\") {\n          console.log('animating attacks');\n          player.animateAttack(ctx);\n        }\n      }\n      theTileMapInstance.draw2(ctx);\n    } else {\n      console.log(\"paused!\");\n      if (theTileMapInstance.optionsToggle === false) {\n        nextDayMenu.draw(ctx);\n        // render pause next day menu here!\n      } else if (theTileMapInstance.optionsToggle === true) {\n        theOptionsMenu.drawOptions(ctx);\n        // console.log(player.health)\n        // debugger\n        if (player.health === 0) {\n          // debugger\n          theOptionsMenu.drawDeadStatus(ctx);\n        } else if (player.health > 0) {\n          theOptionsMenu.drawAliveStatus(ctx);\n        }\n      }\n    }\n    userInter.drawControls(ctx);\n    userInter.drawDays(ctx);\n    userInter.drawFoodAmt(ctx);\n    userInter.drawHealthAmt(ctx);\n\n    // envObjects.forEach((obj) => obj.drawHitboxes(ctx));\n\n    //below lines will draw hitboxes.. comment them out to disable hitbox rendering\n    // player.hitbox._debugDraw(ctx)\n    // hitboxes.forEach((box) => box._debugDraw(ctx));\n    // passableHitboxes.forEach((box) => box._debugDraww(ctx));\n\n    // console.log(hitboxes);\n    _scripts_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].updateCollisionStateToTrueIfColliding();\n    _scripts_foodUtils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].updateDetectionStateToTrueIfDetecting();\n  }\n  theTileMapInstance.setCanvasSize(canvas);\n  setInterval(gameRender, 1000 / 75);\n\n  // order logic =>\n\n  // TileMap.js handles rendering logic. \n  // hitboxes handles collision detection only!\n  // each class will have their own move() function which will handle collision logic and what to do.\n  // separate player class. with a hitbox instance tied on an attribute. \n  // separate envionmental objects class. with a hitbox also tied. \n  // \n\n  // to do list: \n  // write out hitbox collision detection logic and refactor player.move() code to account. \n  // current problem is that in order to update collision, I need to iterate through all combinations of \n  // hitboxes... so I need to find a way of collecting them as they're created... \n  // look up a way of exporting an updatable class constant that I can use in the gameRender callback.\n\n  // above done by the end of Friday!\n\n  // next to do list.. \n  // create a food item that will render and place itself based on the tilemap.. \n  // after creating the note below, I will also extend this food item from the env objects class. \n  // we'll call it 'consumable'\n  //\n  // create a new day functionality.. \n  // ^ will necessitate a rendering and processing of an object that will allow the player to sleep. \n  // ^ will not sure if this will be a custom environmental object.. maybe I can do that by extending the class. \n\n  // food was done!... and picking up the food is tracking well... \n  // I just need to add the new day functionality now. \n  // I added a space to better contextualize where things will go.. So I added a room. \n  // Going to add a bed that will result in a menu prompt that will go to the next day and let the player spend their\n  // collected surplus food on upgrades to speed, health, luck, and attacking. \n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Consumable.js":
/*!***********************************!*\
  !*** ./src/scripts/Consumable.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _foodUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foodUtils */ \"./src/scripts/foodUtils.js\");\n\n\nclass Consumable extends _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0, passHitboxXOffset = 0, passHitboxYOffset = 0, rng) {\n    super(x, y, tileSize - 13, velocity, tileMap, hitboxXOffset, hitboxYOffset);\n    this.consImages = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.consImages[0].src = './src/graphics/NinjaAdventure/Items/Food/Fish.png';\n    this.consImages[1].src = './src/graphics/NinjaAdventure/Items/Food/Onigiri.png';\n    this.consImages[2].src = './src/graphics/NinjaAdventure/Items/Food/Octopus.png';\n    this.consImages[3].src = './src/graphics/NinjaAdventure/Items/Food/Shrimp.png';\n    this.consImages[4].src = './src/graphics/NinjaAdventure/Items/Food/Sushi.png';\n    this.consImages[5].src = './src/graphics/NinjaAdventure/Items/Food/Sushi2.png';\n    this.consImages[6].src = './src/graphics/NinjaAdventure/Items/Food/Yakitori.png';\n    this.consImages[7].src = './src/graphics/NinjaAdventure/Items/Food/SeedLarge.png';\n    this.consImages[8].src = './src/graphics/NinjaAdventure/Items/Food/Noodle.png';\n    this.rng = rng;\n    this.foodHitbox = new _foodUtils__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, tileSize - 3, tileSize - 3, this, passHitboxXOffset + 1.5, passHitboxYOffset + 2);\n    console.log(this);\n    if (!_EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS) {\n      _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS = [];\n    }\n    _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.INTERACTIVEITEMS.push(this);\n  }\n  _drawFood(ctx) {\n    // debugger\n    let foodSelector = this.rng % 8;\n    ctx.drawImage(this.consImages[foodSelector], this.x, this.y, this.tileSize + 13, this.tileSize + 13);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Consumable);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9Db25zdW1hYmxlLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFvQztBQUNLO0FBRXpDLE1BQU1FLFVBQVUsU0FBU0Ysa0RBQVMsQ0FBQztFQUUvQkcsV0FBV0EsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGlCQUFpQixHQUFHLENBQUMsRUFBRUMsaUJBQWlCLEdBQUcsQ0FBQyxFQUFFQyxHQUFHLEVBQUU7SUFDcEksS0FBSyxDQUFDVCxDQUFDLEVBQUVDLENBQUMsRUFBRUMsUUFBUSxHQUFHLEVBQUUsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRUMsYUFBYSxDQUFDO0lBRTNFLElBQUksQ0FBQ0ksVUFBVSxHQUFHLENBQ2QsSUFBSUMsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLEVBQ1gsSUFBSUEsS0FBSyxFQUFFLENBQ2Q7SUFDRCxJQUFJLENBQUNELFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLG1EQUFtRDtJQUM1RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHNEQUFzRDtJQUMvRSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHNEQUFzRDtJQUMvRSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUM5RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLG9EQUFvRDtJQUM3RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUM5RSxJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHVEQUF1RDtJQUNoRixJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHdEQUF3RDtJQUNqRixJQUFJLENBQUNGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHLHFEQUFxRDtJQUU5RSxJQUFJLENBQUNILEdBQUcsR0FBR0EsR0FBRztJQUVkLElBQUksQ0FBQ0ksVUFBVSxHQUFHLElBQUloQixrREFBYyxDQUFDRyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsUUFBUSxHQUFHLENBQUMsRUFBRUEsUUFBUSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUVLLGlCQUFpQixHQUFHLEdBQUcsRUFBRUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBRzVITSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUM7SUFFakIsSUFBSSxDQUFDbkIsNkVBQW9DLEVBQUU7TUFDdkNBLDZFQUFvQyxHQUFHLEVBQUU7SUFDN0M7SUFFQUEsa0ZBQXlDLENBQUMsSUFBSSxDQUFDO0VBRW5EO0VBRUF1QixTQUFTQSxDQUFDQyxHQUFHLEVBQUU7SUFDWDtJQUNBLElBQUlDLFlBQVksR0FBSSxJQUFJLENBQUNaLEdBQUcsR0FBRyxDQUFFO0lBQ2pDVyxHQUFHLENBQUNFLFNBQVMsQ0FBQyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1csWUFBWSxDQUFDLEVBQUUsSUFBSSxDQUFDckIsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxHQUFHLEVBQUUsRUFBRSxJQUFJLENBQUNBLFFBQVEsR0FBRyxFQUFFLENBQUM7RUFFeEc7QUFJSjtBQUVBLCtEQUFlSixVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9zcmMvc2NyaXB0cy9Db25zdW1hYmxlLmpzPzdmY2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVudk9iamVjdCBmcm9tIFwiLi9FbnZPYmplY3RcIjtcbmltcG9ydCBQYXNzYWJsZUhpdGJveCBmcm9tIFwiLi9mb29kVXRpbHNcIjtcblxuY2xhc3MgQ29uc3VtYWJsZSBleHRlbmRzIEVudk9iamVjdCB7XG5cbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCB0aWxlU2l6ZSwgdmVsb2NpdHksIHRpbGVNYXAsIGhpdGJveFhPZmZzZXQgPSAwLCBoaXRib3hZT2Zmc2V0ID0gMCwgcGFzc0hpdGJveFhPZmZzZXQgPSAwLCBwYXNzSGl0Ym94WU9mZnNldCA9IDAsIHJuZykge1xuICAgICAgICBzdXBlcih4LCB5LCB0aWxlU2l6ZSAtIDEzLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCwgaGl0Ym94WU9mZnNldClcblxuICAgICAgICB0aGlzLmNvbnNJbWFnZXMgPSBbXG4gICAgICAgICAgICBuZXcgSW1hZ2UoKSwgXG4gICAgICAgICAgICBuZXcgSW1hZ2UoKSxcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpLCBcbiAgICAgICAgICAgIG5ldyBJbWFnZSgpXG4gICAgICAgIF1cbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzBdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL0Zpc2gucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbMV0uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvT25pZ2lyaS5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1syXS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9PY3RvcHVzLnBuZydcbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzNdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL1NocmltcC5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1s0XS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9TdXNoaS5wbmcnXG4gICAgICAgIHRoaXMuY29uc0ltYWdlc1s1XS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSXRlbXMvRm9vZC9TdXNoaTIucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbNl0uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvWWFraXRvcmkucG5nJ1xuICAgICAgICB0aGlzLmNvbnNJbWFnZXNbN10uc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0l0ZW1zL0Zvb2QvU2VlZExhcmdlLnBuZydcbiAgICAgICAgdGhpcy5jb25zSW1hZ2VzWzhdLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL05vb2RsZS5wbmcnXG4gICAgICAgIFxuICAgICAgICB0aGlzLnJuZyA9IHJuZztcbiAgICAgICAgXG4gICAgICAgIHRoaXMuZm9vZEhpdGJveCA9IG5ldyBQYXNzYWJsZUhpdGJveCh4LCB5LCB0aWxlU2l6ZSAtIDMsIHRpbGVTaXplIC0gMywgdGhpcywgcGFzc0hpdGJveFhPZmZzZXQgKyAxLjUsIHBhc3NIaXRib3hZT2Zmc2V0ICsgMilcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzKVxuXG4gICAgICAgIGlmICghRW52T2JqZWN0LnByb3RvdHlwZS5JTlRFUkFDVElWRUlURU1TKSB7XG4gICAgICAgICAgICBFbnZPYmplY3QucHJvdG90eXBlLklOVEVSQUNUSVZFSVRFTVMgPSBbXVxuICAgICAgICB9XG5cbiAgICAgICAgRW52T2JqZWN0LnByb3RvdHlwZS5JTlRFUkFDVElWRUlURU1TLnB1c2godGhpcylcblxuICAgIH1cblxuICAgIF9kcmF3Rm9vZChjdHgpIHtcbiAgICAgICAgLy8gZGVidWdnZXJcbiAgICAgICAgbGV0IGZvb2RTZWxlY3RvciA9ICh0aGlzLnJuZyAlIDgpXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5jb25zSW1hZ2VzW2Zvb2RTZWxlY3Rvcl0sIHRoaXMueCwgdGhpcy55LCB0aGlzLnRpbGVTaXplICsgMTMsIHRoaXMudGlsZVNpemUgKyAxMylcblxuICAgIH1cblxuXG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uc3VtYWJsZTsiXSwibmFtZXMiOlsiRW52T2JqZWN0IiwiUGFzc2FibGVIaXRib3giLCJDb25zdW1hYmxlIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInRpbGVTaXplIiwidmVsb2NpdHkiLCJ0aWxlTWFwIiwiaGl0Ym94WE9mZnNldCIsImhpdGJveFlPZmZzZXQiLCJwYXNzSGl0Ym94WE9mZnNldCIsInBhc3NIaXRib3hZT2Zmc2V0Iiwicm5nIiwiY29uc0ltYWdlcyIsIkltYWdlIiwic3JjIiwiZm9vZEhpdGJveCIsImNvbnNvbGUiLCJsb2ciLCJwcm90b3R5cGUiLCJJTlRFUkFDVElWRUlURU1TIiwicHVzaCIsIl9kcmF3Rm9vZCIsImN0eCIsImZvb2RTZWxlY3RvciIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Consumable.js\n");

/***/ }),

/***/ "./src/scripts/EnvObject.js":
/*!**********************************!*\
  !*** ./src/scripts/EnvObject.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\n\nclass EnvObject {\n  //let rock = new EnvObject(col * this.tileSize, col * this.tileSize, this.tileSize, this.tileMap)\n\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.hitboxes = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize, this.tileSize, hitboxXOffset, hitboxYOffset);\n  }\n  drawHitboxes(ctx) {\n    // for debugging to see a semitransparent hitbox on all env objects like a rock.\n    // this.hitboxes.forEach((hitbox) => hitbox._debugDraw(ctx))\n    this.hitboxes._debugDraw(ctx);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnvObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9FbnZPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBZ0M7QUFJaEMsTUFBTUMsU0FBUyxDQUFDO0VBRVo7O0VBRUFDLFdBQVdBLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFO0lBQ2pGLElBQUksQ0FBQ04sQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUdBLENBQUM7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUV4QixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNDLE9BQU8sR0FBR0EsT0FBTztJQUV0QixJQUFJLENBQUNHLFFBQVEsR0FBRyxJQUFJVixpREFBTSxDQUFDLElBQUksQ0FBQ0csQ0FBQyxFQUFFLElBQUksQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0EsUUFBUSxFQUFFRyxhQUFhLEVBQUVDLGFBQWEsQ0FBQztFQUUxRztFQUVBRSxZQUFZQSxDQUFDQyxHQUFHLEVBQUU7SUFBRTtJQUNoQjtJQUNBLElBQUksQ0FBQ0YsUUFBUSxDQUFDRyxVQUFVLENBQUNELEdBQUcsQ0FBQztFQUNqQztBQUtKO0FBRUEsK0RBQWVYLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL0Vudk9iamVjdC5qcz9kYTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIaXRib3ggZnJvbSBcIi4vdXRpbHMuanNcIjtcblxuXG5cbmNsYXNzIEVudk9iamVjdCB7XG5cbiAgICAvL2xldCByb2NrID0gbmV3IEVudk9iamVjdChjb2wgKiB0aGlzLnRpbGVTaXplLCBjb2wgKiB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVNYXApXG4gICAgIFxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHRpbGVTaXplLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCA9IDAsIGhpdGJveFlPZmZzZXQgPSAwKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMudGlsZVNpemUgPSB0aWxlU2l6ZTtcblxuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gdmVsb2NpdHk7XG4gICAgICAgIHRoaXMudGlsZU1hcCA9IHRpbGVNYXA7XG5cbiAgICAgICAgdGhpcy5oaXRib3hlcyA9IG5ldyBIaXRib3godGhpcy54LCB0aGlzLnksIHRoaXMudGlsZVNpemUsIHRoaXMudGlsZVNpemUsIGhpdGJveFhPZmZzZXQsIGhpdGJveFlPZmZzZXQpO1xuICAgICAgICBcbiAgICB9XG5cbiAgICBkcmF3SGl0Ym94ZXMoY3R4KSB7IC8vIGZvciBkZWJ1Z2dpbmcgdG8gc2VlIGEgc2VtaXRyYW5zcGFyZW50IGhpdGJveCBvbiBhbGwgZW52IG9iamVjdHMgbGlrZSBhIHJvY2suXG4gICAgICAgIC8vIHRoaXMuaGl0Ym94ZXMuZm9yRWFjaCgoaGl0Ym94KSA9PiBoaXRib3guX2RlYnVnRHJhdyhjdHgpKVxuICAgICAgICB0aGlzLmhpdGJveGVzLl9kZWJ1Z0RyYXcoY3R4KTtcbiAgICB9XG5cblxuICAgIFxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEVudk9iamVjdCJdLCJuYW1lcyI6WyJIaXRib3giLCJFbnZPYmplY3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwidGlsZVNpemUiLCJ2ZWxvY2l0eSIsInRpbGVNYXAiLCJoaXRib3hYT2Zmc2V0IiwiaGl0Ym94WU9mZnNldCIsImhpdGJveGVzIiwiZHJhd0hpdGJveGVzIiwiY3R4IiwiX2RlYnVnRHJhdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/EnvObject.js\n");

/***/ }),

/***/ "./src/scripts/Menus.js":
/*!******************************!*\
  !*** ./src/scripts/Menus.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TileMap */ \"./src/scripts/TileMap.js\");\n\nclass BedMenu {\n  constructor(tileMap) {\n    this.nextDayMenuImg = new Image();\n    this.nextDayMenuImg.src = './src/graphics/menus/nextdaymenu.png';\n    this.selectionIndex = 1;\n    this.cursor = new Image();\n    this.cursor.src = './src/graphics/NinjaAdventure/HUD/NinePathRect/DialogueBubble.png';\n    this.options = [\"yes\", \"no\"];\n    this.tileMap = tileMap;\n  }\n  draw(ctx) {\n    ctx.drawImage(this.nextDayMenuImg, 0, 0);\n    if (this.selectionIndex === 0) {\n      ctx.drawImage(this.cursor, 120, 97);\n    } else if (this.selectionIndex === 1) {\n      ctx.drawImage(this.cursor, 265, 97);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (BedMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9NZW51cy5qcy5qcyIsIm1hcHBpbmdzIjoiOztBQUNnQztBQUVoQyxNQUFNQyxPQUFPLENBQUM7RUFFVkMsV0FBV0EsQ0FBRUMsT0FBTyxFQUFFO0lBRWxCLElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlDLEtBQUssRUFBRztJQUNsQyxJQUFJLENBQUNELGNBQWMsQ0FBQ0UsR0FBRyxHQUFHLHNDQUFzQztJQUNoRSxJQUFJLENBQUNDLGNBQWMsR0FBRyxDQUFDO0lBQ3ZCLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUlILEtBQUssRUFBRTtJQUN6QixJQUFJLENBQUNHLE1BQU0sQ0FBQ0YsR0FBRyxHQUFHLG1FQUFtRTtJQUVyRixJQUFJLENBQUNHLE9BQU8sR0FBRyxDQUNYLEtBQUssRUFDTCxJQUFJLENBQ1A7SUFHRCxJQUFJLENBQUNOLE9BQU8sR0FBR0EsT0FBTztFQUcxQjtFQUVBTyxJQUFJQSxDQUFDQyxHQUFHLEVBQUU7SUFFTkEsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDUixjQUFjLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUV4QyxJQUFJLElBQUksQ0FBQ0csY0FBYyxLQUFLLENBQUMsRUFBRTtNQUMzQkksR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDSixNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQztJQUN2QyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUNELGNBQWMsS0FBSyxDQUFDLEVBQUU7TUFDbENJLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ0osTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDdkM7RUFJSjtBQU1KO0FBRUEsK0RBQWVQLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL01lbnVzLmpzPzk4NDciXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgVGlsZU1hcCBmcm9tIFwiLi9UaWxlTWFwXCI7XG5cbmNsYXNzIEJlZE1lbnUge1xuXG4gICAgY29uc3RydWN0b3IgKHRpbGVNYXApIHtcblxuICAgICAgICB0aGlzLm5leHREYXlNZW51SW1nID0gbmV3IEltYWdlICgpO1xuICAgICAgICB0aGlzLm5leHREYXlNZW51SW1nLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9tZW51cy9uZXh0ZGF5bWVudS5wbmcnXG4gICAgICAgIHRoaXMuc2VsZWN0aW9uSW5kZXggPSAxO1xuICAgICAgICB0aGlzLmN1cnNvciA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmN1cnNvci5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvTmluamFBZHZlbnR1cmUvSFVEL05pbmVQYXRoUmVjdC9EaWFsb2d1ZUJ1YmJsZS5wbmcnXG4gICAgICAgIFxuICAgICAgICB0aGlzLm9wdGlvbnMgPSBbXG4gICAgICAgICAgICBcInllc1wiLFxuICAgICAgICAgICAgXCJub1wiXG4gICAgICAgIF07XG5cblxuICAgICAgICB0aGlzLnRpbGVNYXAgPSB0aWxlTWFwO1xuXG5cbiAgICB9XG5cbiAgICBkcmF3KGN0eCkge1xuXG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5uZXh0RGF5TWVudUltZywgMCwgMClcblxuICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25JbmRleCA9PT0gMCkge1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmN1cnNvciwgMTIwLCA5NylcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGlvbkluZGV4ID09PSAxKSB7XG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuY3Vyc29yLCAyNjUsIDk3KVxuICAgICAgICB9XG5cblxuXG4gICAgfVxuXG5cbiAgICBcblxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJlZE1lbnUiXSwibmFtZXMiOlsiVGlsZU1hcCIsIkJlZE1lbnUiLCJjb25zdHJ1Y3RvciIsInRpbGVNYXAiLCJuZXh0RGF5TWVudUltZyIsIkltYWdlIiwic3JjIiwic2VsZWN0aW9uSW5kZXgiLCJjdXJzb3IiLCJvcHRpb25zIiwiZHJhdyIsImN0eCIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Menus.js\n");

/***/ }),

/***/ "./src/scripts/Options.js":
/*!********************************!*\
  !*** ./src/scripts/Options.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass OptionsMenu {\n  constructor(tileMap) {\n    this.tileMap = tileMap;\n    this.selectionIndex = 0;\n    this.optionsMenu = new Image();\n    this.optionsMenu.src = './src/graphics/menus/optionsMenu.png';\n    this.aliveStatusImage = new Image();\n    this.aliveStatusImage.src = './src/graphics/menus/aliveStatus.png';\n    this.deadStatusImage = new Image();\n    this.deadStatusImage.src = './src/graphics/menus/deadStatus.png';\n    this.cursor = new Image();\n    this.cursor.src = './src/graphics/NinjaAdventure/HUD/NinePathRect/DialogueBubble.png';\n    this.options = [\"volume\", \"new game\"];\n  }\n  drawOptions(ctx) {\n    ctx.drawImage(this.optionsMenu, 0, 0);\n  }\n  drawAliveStatus(ctx) {\n    ctx.drawImage(this.aliveStatusImage, 0, 0);\n  }\n  drawDeadStatus(ctx) {\n    ctx.drawImage(this.deadStatusImage, 0, 0);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (OptionsMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9PcHRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxXQUFXLENBQUM7RUFDZEMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFDO0lBRWhCLElBQUksQ0FBQ0EsT0FBTyxHQUFHQSxPQUFPO0lBRXRCLElBQUksQ0FBQ0MsY0FBYyxHQUFHLENBQUM7SUFFdkIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUMsS0FBSyxFQUFHO0lBQy9CLElBQUksQ0FBQ0QsV0FBVyxDQUFDRSxHQUFHLEdBQUcsc0NBQXNDO0lBRTdELElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUcsSUFBSUYsS0FBSyxFQUFFO0lBQ25DLElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNELEdBQUcsR0FBRyxzQ0FBc0M7SUFFbEUsSUFBSSxDQUFDRSxlQUFlLEdBQUcsSUFBSUgsS0FBSyxFQUFFO0lBQ2xDLElBQUksQ0FBQ0csZUFBZSxDQUFDRixHQUFHLEdBQUcscUNBQXFDO0lBRWhFLElBQUksQ0FBQ0csTUFBTSxHQUFHLElBQUlKLEtBQUssRUFBRTtJQUN6QixJQUFJLENBQUNJLE1BQU0sQ0FBQ0gsR0FBRyxHQUFHLG1FQUFtRTtJQUVyRixJQUFJLENBQUNJLE9BQU8sR0FBRyxDQUNYLFFBQVEsRUFDUixVQUFVLENBQ2I7RUFFTDtFQUdBQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYkEsR0FBRyxDQUFDQyxTQUFTLENBQUMsSUFBSSxDQUFDVCxXQUFXLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztFQUN6QztFQUVBVSxlQUFlQSxDQUFDRixHQUFHLEVBQUU7SUFDakJBLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ04sZ0JBQWdCLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztFQUM1QztFQUVBUSxjQUFjQSxDQUFDSCxHQUFHLEVBQUU7SUFDaEJBLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQ0wsZUFBZSxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7RUFDM0M7QUFDSjtBQUVBLCtEQUFlUixXQUFXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9zcmMvc2NyaXB0cy9PcHRpb25zLmpzP2ExNzciXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgT3B0aW9uc01lbnUge1xuICAgIGNvbnN0cnVjdG9yKHRpbGVNYXApe1xuXG4gICAgICAgIHRoaXMudGlsZU1hcCA9IHRpbGVNYXA7XG5cbiAgICAgICAgdGhpcy5zZWxlY3Rpb25JbmRleCA9IDA7XG5cbiAgICAgICAgdGhpcy5vcHRpb25zTWVudSA9IG5ldyBJbWFnZSAoKTtcbiAgICAgICAgdGhpcy5vcHRpb25zTWVudS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvbWVudXMvb3B0aW9uc01lbnUucG5nJ1xuXG4gICAgICAgIHRoaXMuYWxpdmVTdGF0dXNJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmFsaXZlU3RhdHVzSW1hZ2Uuc3JjID0gJy4vc3JjL2dyYXBoaWNzL21lbnVzL2FsaXZlU3RhdHVzLnBuZydcblxuICAgICAgICB0aGlzLmRlYWRTdGF0dXNJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmRlYWRTdGF0dXNJbWFnZS5zcmMgPSAnLi9zcmMvZ3JhcGhpY3MvbWVudXMvZGVhZFN0YXR1cy5wbmcnXG5cbiAgICAgICAgdGhpcy5jdXJzb3IgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgdGhpcy5jdXJzb3Iuc3JjID0gJy4vc3JjL2dyYXBoaWNzL05pbmphQWR2ZW50dXJlL0hVRC9OaW5lUGF0aFJlY3QvRGlhbG9ndWVCdWJibGUucG5nJ1xuXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IFtcbiAgICAgICAgICAgIFwidm9sdW1lXCIsXG4gICAgICAgICAgICBcIm5ldyBnYW1lXCJcbiAgICAgICAgXVxuXG4gICAgfVxuXG5cbiAgICBkcmF3T3B0aW9ucyhjdHgpIHtcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLm9wdGlvbnNNZW51LCAwLCAwKTtcbiAgICB9XG5cbiAgICBkcmF3QWxpdmVTdGF0dXMoY3R4KSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5hbGl2ZVN0YXR1c0ltYWdlLDAsMCk7XG4gICAgfVxuXG4gICAgZHJhd0RlYWRTdGF0dXMoY3R4KSB7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5kZWFkU3RhdHVzSW1hZ2UsMCwwKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IE9wdGlvbnNNZW51OyJdLCJuYW1lcyI6WyJPcHRpb25zTWVudSIsImNvbnN0cnVjdG9yIiwidGlsZU1hcCIsInNlbGVjdGlvbkluZGV4Iiwib3B0aW9uc01lbnUiLCJJbWFnZSIsInNyYyIsImFsaXZlU3RhdHVzSW1hZ2UiLCJkZWFkU3RhdHVzSW1hZ2UiLCJjdXJzb3IiLCJvcHRpb25zIiwiZHJhd09wdGlvbnMiLCJjdHgiLCJkcmF3SW1hZ2UiLCJkcmF3QWxpdmVTdGF0dXMiLCJkcmF3RGVhZFN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Options.js\n");

/***/ }),

/***/ "./src/scripts/Player.js":
/*!*******************************!*\
  !*** ./src/scripts/Player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\n/* harmony import */ var _foodUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foodUtils.js */ \"./src/scripts/foodUtils.js\");\n/* harmony import */ var _musics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./musics.js */ \"./src/scripts/musics.js\");\nconst DIRS = [\n// directions made here to refer to. \n[0, -1], [0, 1], [1, 0], [-1, 0]];\n\n\n\nconst foodSound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Success1.wav\");\nconst treeSound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/MiniImpact.wav\");\nconst ouchieSound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Hit4.wav\");\nconst healingSound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/PowerUp1.wav\");\nconst normalNextDaySound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Success3.wav\");\nconst swordSound = new _musics_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\"./src/graphics/NinjaAdventure/Sounds/Game/Sword.wav\");\nclass Player {\n  constructor(x, y, tileSize, velocity, tileMap) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.state = \"idle\";\n\n    // const spriteCols = 10;\n    // const spriteRows = 6;\n    // const totalFrames = 6\n\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.playerImage = new Image();\n    this.playerImage.src = \"./src/graphics/sprites/characters/player.png\"; // idk how to use sprite sheets.. so I used the rock... \n    // this.playerImage.src = '../graphics/sprites/objects/rock_in_water_01.png'\n\n    this.dust = new Image();\n    this.dust.src = './src/graphics/sprites/particles/dust_particles_01.png';\n    this.currentMovingDirection = null;\n    document.addEventListener('keydown', this._keydown); // \n    document.addEventListener('keyup', this._keyup); // listener to set player current moving direction to null if they let go of a direction.\n\n    // this.currentFrame = 0; // why is there a duplicate here??? idk lmaoo \n\n    this.lastMovingDirection;\n    this.hitbox = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize - 5, this.tileSize, 1.5, -4);\n    this.passableHitbox = new _foodUtils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.x, this.y, this.tileSize - 4, this.tileSize, this, 1.5, -4);\n    if (!Player.prototype.keyss) {\n      Player.prototype.keyss = {};\n    }\n\n    // logic is... the player needs to collect 5 food each day\n    // if he doesn't, he will die.\n    // colliding with a food increases this.food by one and \n    // also destroys the food on the map.. \n    // at the end of the day, the player spend the extra food they pick up\n    // to gain an ability to attack, increase speed, increase health.. \n    // gaining extra stats require more food per day. \n    // shaking trees make monsters more aggressive, but also drops more food.\n\n    this.targetFood = 5;\n    this.food = 3;\n    this.health = 3;\n  }\n  animateDeath(ctx) {\n    // this.currentFrame = 0\n\n    // debugger\n    let srcX = this.currentFrame * 48;\n    if (srcX > 96) {\n      srcX = 96;\n    }\n    let srcY = 447;\n    // debugger\n\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(-this.x - 32), Math.floor(this.y - 15), 39, 39);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(-this.x - 32), Math.floor(this.y - 15), 39, 39);\n      ctx.restore();\n    } else {\n      if (Object.keys(Player.prototype.keyss).some(key => !!Player.prototype.keyss[key])) {\n        ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(this.x - 17 + Math.random() * 2), Math.floor(this.y - 15 + Math.random() * 2), 39, 39);\n      } else {\n        ctx.drawImage(this.playerImage, srcX, srcY, 39, 39, Math.floor(this.x - 17), Math.floor(this.y - 15), 39, 39);\n        // ctx.drawImage(this.playerImage, 32, 0, 32, 32, Math.floor(-this.x), Math.floor(this.y -15), -32, 32)\n      }\n    }\n\n    this.framesDrawn++;\n    if (this.framesDrawn > 45) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n  }\n  animateAttack(ctx) {\n    // console.log(\"reached line 124\")\n\n    let srcY;\n    let srcX = this.currentFrame * 48;\n    if (srcX > 145) {\n      srcX = 144;\n    }\n    console.log(srcX);\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right attack\n      srcY = 352;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up attack\n      srcY = 399;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 304;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 352;\n      srcX = this.currentFrame * 48 % 288 * 1;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle attack\n        srcY = 352;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle attack\n        srcY = 399;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 352;\n      } else {\n        // down idle\n        srcY = 304;\n      }\n    }\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(-this.x + 1 + 11), Math.floor(this.y - 15), -42, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(-this.x + 11), Math.floor(this.y - 15), -42, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      ctx.drawImage(this.playerImage, srcX, srcY, 42, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 42, 32);\n      // if (srcX === 144) {\n      //     this.state = \"idle\";\n      // }\n      // ctx.restore()\n    }\n\n    if (srcX === 144) {\n      this.state = \"idle\";\n    }\n    this.framesDrawn++;\n    if (this.framesDrawn >= 10) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n  }\n  animate(ctx) {\n    //288 x 480\n    // requestAnimationFrame(animate)\n\n    // currentFrame = this.currentFrame % totalFrames;\n    // if (this.health === 0) {\n    //     /// DEATH ANIMATION LMAO\n    //     /// moved section up to be a separate function that is called when health === 0\n    //     console.log('dead')\n    //     this.currentFrame = 0\n    //     // return\n    // } /// currentFrame set to 0 at the moment of playerinput/action..\n    /// no need to check for it during the animation call. \n\n    let srcX = this.currentFrame * 48 % 288;\n    let srcY;\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      srcY = 208;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      srcY = 255;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 158;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 208;\n      srcX = this.currentFrame * 48 % 288 * 1;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        srcY = 64;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        srcY = 110;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 64;\n      } else {\n        // down idle\n        srcY = 16;\n      }\n    }\n\n    // really ugly code to mirror the right animation run.. :T\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(-this.x + 1), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(-this.x), Math.floor(this.y - 15), -32, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, Math.floor(this.x - 17), Math.floor(this.y - 15), 32, 32);\n      // ctx.restore()\n    }\n\n    this.framesDrawn++;\n    if (this.framesDrawn >= 11) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n\n    // if (this.health === 0) {\n    //     /// DEATH ANIMATION LMAO\n    //     /// moved section up to be a separate function that is called when health === 0\n    //     console.log('dead')\n    //     this.currentFrame = 0\n\n    // }\n  }\n\n  _keydown = event => {\n    // pay attention to notes for which sections are doing what... \n    // debugger \n    // console.log(event)\n    if (!Player.prototype.keyss[event.code]) {\n      Player.prototype.keyss[event.code] = event.code;\n      console.log(Player.prototype.keyss[event.code]);\n    }\n    if (event.key === 'ArrowUp') {\n      this.currentMovingDirection = DIRS[0];\n    } else if (event.key === 'ArrowDown') {\n      this.currentMovingDirection = DIRS[1];\n    } else if (event.key === 'ArrowLeft') {\n      if (this.health > 0) {\n        this.currentMovingDirection = DIRS[3];\n      }\n      if (this.tileMap.bedMenu.selectionIndex === 1) {\n        this.tileMap.bedMenu.selectionIndex--;\n      }\n      if (this.tileMap.optionsMenu.selectionIndex === 1) {\n        this.tileMap.optionsMenu.selectionIndex--;\n      }\n    } else if (event.key === 'ArrowRight') {\n      if (this.health > 0) {\n        this.currentMovingDirection = DIRS[2];\n      }\n      if (this.tileMap.bedMenu.selectionIndex === 0) {\n        this.tileMap.bedMenu.selectionIndex++;\n      }\n      if (this.tileMap.optionsMenu.selectionIndex === 0) {\n        this.tileMap.optionsMenu.selectionIndex++;\n      }\n    }\n    // console.log('down')\n\n    // while (!!this.currentMovingDirection) {\n    // if (this.tileMap.paused === true) {\n\n    // }    \n\n    // debugger\n    if (event.key === ' ' && this.x > 347 && this.x < 390 && this.y < 70 && this.y > 50) {\n      //// TREE SHAKING OPERATIONS\n      let randomChance = Math.random() * 80;\n      treeSound.play();\n      this.tileMap.shakeStatus = true;\n      setTimeout(() => this.tileMap.shakeStatus = false, 300);\n      if (randomChance < this.tileMap.freeFood / 2 && this.tileMap.freeFood > 0) {\n        if (!this.counter) {\n          this.counter = 0;\n        }\n        this.tileMap.freeFood--;\n        this.food++;\n        foodSound.play();\n        this.counter++;\n        console.log(this.counter);\n        // this.tileMap.freeFood = randomChance;\n      } else if (randomChance < 0.35 && this.tileMap.freeFood === 0) {\n        this.food++;\n        foodSound.play();\n      }\n    } else if (event.key === ' ' && this.x > 88 && this.x < 145 && this.y < 210 && this.y > 190) {\n      //// TREE SHAKING OPERATIONS\n      treeSound.play();\n      if (!this.counter) {\n        this.counter = 0;\n      }\n      let randomChance = Math.random() * 80;\n      console.log(randomChance);\n      this.tileMap.shakeStatus2 = true;\n      setTimeout(() => this.tileMap.shakeStatus2 = false, 300);\n      // setTimeout(() => {\n      if (randomChance < this.tileMap.freeFood / 2 && this.tileMap.freeFood > 0) {\n        this.tileMap.freeFood--;\n        this.food++;\n        foodSound.play();\n        this.counter++;\n        console.log(this.counter);\n        // this.tileMap.freeFood = randomChance;\n      } else if (randomChance < 0.35 && this.tileMap.freeFood === 0) {\n        this.food++;\n        foodSound.play();\n      }\n      // }, 10000)\n      //// BUSH SHAKING OPERATIONS\n    } else if (event.key === ' ' && this.x > 110 && this.x < 129 && this.y < 110 && this.y > 55) {\n      // debugger\n      /// DOOR OPERATIONS HERE\n      if (this.tileMap.isDoorOpen === false) {\n        this.tileMap.isDoorOpen = true;\n      }\n      //     if (this.tileMap.bedMenu.selectionIndex === 0){\n      //         //FUNCTION TO GO TO NEXT DAY\n      //         console.log('chose to go to next day near bed')\n      //     } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n      //         this.tileMap.isDoorOpen = false;\n      //         console.log('chose to remain in the same day near bed')\n      //     }\n      // }\n\n      // if (this.tileMap.isDoorOpen === true) {\n      //     this.tileMap.isDoorOpen = false;\n\n      //     this.tileMap._updateDoorHitbox()\n      //     // let papaya = this.tileMap._updateDoorHitbox.bind(this.tileMap)\n      //     // setTimeout(papaya, 50000)\n\n      //     Hitbox.updateCollisionStateToTrueIfColliding();\n      //     // debugger\n      //     if (this.hitbox.collisionState === true){\n\n      //         this.tileMap.isDoorOpen = true;\n      //     } \n\n      // } else {\n      //     this.tileMap.isDoorOpen = true;\n      // }\n    } else if (this.health > 0 && event.key === ' ' && this.x > 90 && this.x < 100 && this.y < 60 && this.y > 46) {\n      //// BED MENU OPERATIONS\n      // if (this.tileMap.paused === true){\n      // if (this.tileMap.bedMenu.selectionIndex === 0){\n      //     //FUNCTION TO GO TO NEXT DAY\n      //     console.log('chose to go to next day near bed')\n      // } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n      //     this.tileMap.paused = false;\n      //     console.log('chose to remain in the same day near bed')\n      // }\n      // }\n\n      if (this.tileMap.paused === false) {\n        this.tileMap.paused = true;\n      } else {\n        if (this.tileMap.bedMenu.selectionIndex === 0) {\n          //FUNCTION TO GO TO NEXT DAY\n          this.tileMap.getNextDayFoodObjects();\n          this.tileMap.level++;\n          console.log('chose to go to next day near bed');\n          this.tileMap.paused = false;\n          this.food = this.food - this.targetFood - Math.floor(this.tileMap.level * .25);\n          if (this.food < 0) {\n            if (this.health > 0) {\n              this.health--;\n              ouchieSound.play();\n            }\n            this.food = 0;\n            if (this.health === 0) {\n              this.currentFrame = 0;\n            }\n          } else {\n            if (this.health < 3 && this.food > 1) {\n              this.food--;\n              this.health++;\n              healingSound.play();\n            } else if (this.health === 3 && this.food > 1) {\n              normalNextDaySound.play();\n            }\n          }\n          this.tileMap.freeFood = 10;\n        } else if (this.tileMap.bedMenu.selectionIndex === 1) {\n          this.tileMap.paused = false;\n          console.log('chose to remain in the same day near bed');\n        }\n      }\n    } else if (event.key === ' ' && this.state === \"idle\") {\n      console.log('attacking');\n      swordSound.play();\n      this.state = \"attacking\";\n      this.currentFrame = 0;\n      /// make an attacking animation.. attacking logic can go in here..\n      /// attacking animation occurs in the gameloop engine by checking this.state. \n      // ATTACK FUNCTION HERE; not written yet because I have no enemies to test on.. \n      // will come back later.  \n    } else if (event.key === 'Escape') {\n      if (this.tileMap.paused === false) {\n        this.tileMap.paused = true;\n        this.tileMap.optionsToggle = true;\n      } else {\n        this.tileMap.paused = false;\n        this.tileMap.optionsToggle = false;\n      }\n      console.log('opened options menu');\n    }\n  };\n  _keyup = event => {\n    Player.prototype.keyss[event.code] = null;\n\n    // debugger\n    if (event.code === 'Space') {\n      if (this.tileMap.shakeStatus === true) {\n        this.tileMap.shakeStatus = false;\n      }\n    } else {\n      console.log('key was let go');\n      // console.log('up')\n      // this.lastLastMovingDirectionLmao = this.lastMovingDirection; // this doesn't work lol\n      // note here.. attempting to make movement more fluid.. \n\n      // if (!!this.currentMovingDirection){\n      this.lastMovingDirection = this.currentMovingDirection;\n      // }\n\n      this.currentMovingDirection = null;\n      if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n        let stillHeldKey;\n        Object.values(Player.prototype.keyss).forEach(value => {\n          if (!!value) {\n            stillHeldKey = value;\n          }\n        });\n        // console.log(stillHeldKey)\n        if (this.health > 0) {\n          if (stillHeldKey === 'ArrowUp') {\n            this.currentMovingDirection = DIRS[0];\n          } else if (stillHeldKey === 'ArrowDown') {\n            this.currentMovingDirection = DIRS[1];\n          } else if (stillHeldKey === 'ArrowLeft') {\n            this.currentMovingDirection = DIRS[3];\n          } else if (stillHeldKey === 'ArrowRight') {\n            // debugger\n            this.currentMovingDirection = DIRS[2];\n          }\n        }\n\n        // console.log(this.currentMovingDirection)\n      }\n    }\n  };\n\n  _drawDust(ctx) {\n    // ctx.drawImage(this)\n    console.log(ctx);\n    ctx.drawImage(this.dust, this.x + 1, this.y - 15);\n    // wanted to implement a dust particle effect while moving... but too much work for nothing..\n    // need to focus more on functionality at this beginning state.. Can come back later maybe. \n  }\n\n  move(ctx) {\n    // move takes in a context to call movement specific additional drawings like dust particles. \n\n    if (this.passableHitbox.detectionState === true) {\n      // debugger\n      this._isCollidingWithFood();\n    }\n    if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n      if (!!this.currentMovingDirection) {\n        // let oldX = this.x;\n        // let oldY = this.y;\n\n        this.y = this.currentMovingDirection[1] * this.velocity + this.y;\n        this.x = this.currentMovingDirection[0] * this.velocity + this.x;\n        this.hitbox.x = this.x;\n        this.hitbox.y = this.y;\n        this.passableHitbox.x = this.x;\n        this.passableHitbox.y = this.y;\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n        while (this.hitbox.collisionState === true) {\n          // debugger\n          this.y = this.currentMovingDirection[1] * -1 * this.velocity + this.y;\n          this.x = this.currentMovingDirection[0] * -1 * this.velocity + this.x;\n          this.hitbox.x = this.x;\n          this.hitbox.y = this.y;\n          this.passableHitbox.x = this.x;\n          this.passableHitbox.y = this.y;\n          _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n\n          // debugger\n          return;\n        }\n\n        // this._drawDust(ctx); // see note in _drawDust.\n\n        // if (this.hitbox.collisionState === true) {\n        //     // debugger\n        //     this.y = this.currentMovingDirection[1]*(-1)* this.velocity + this.y; \n        //     this.x = this.currentMovingDirection[0]*(-1)* this.velocity + this.x;\n        //     this.hitbox.x = this.x;\n        //     this.hitbox.y = this.y;\n        //     // debugger\n        // }\n      }\n\n      if (!(this.x > 90 && this.x < 129 && this.y < 110 && this.y > 55)) {\n        this.tileMap.isDoorOpen = false;\n      }\n\n      // console.log([this.x, this.y])\n      // console.log(this.x)\n      // console.log(this.y)\n      // console.log(this.currentMovingDirection)\n    }\n  }\n\n  _isCollidingWithFood() {\n    if (this.passableHitbox.detectionState === true) {\n      let detections = this.passableHitbox._detectingWhat();\n      for (let i = 0; i < detections.length; i++) {\n        let questionedItem = detections[i];\n        // debugger\n        if (questionedItem.tiedObj.constructor.name === \"Consumable\") {\n          console.log('food/consumable detected by player');\n          this.food++;\n          foodSound.play();\n          if (this.food > 99) {\n            this.food = 99;\n          }\n          // questionedItem.tiedObj.hitbox = null;\n          // questionedItem.tiedObj.passableHitbox = null;\n          questionedItem.tiedObj.hitboxes.x = 0;\n          questionedItem.tiedObj.hitboxes.y = 0;\n          questionedItem.tiedObj.x = 0;\n          questionedItem.tiedObj.y = 0;\n          questionedItem.x = 0;\n          questionedItem.y = 0;\n          // debugger;\n          // questionedItem.tiedObj = null;\n          // questionedItem.x = null;\n          // questionedItem.y = null;\n          console.log(_foodUtils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype.PASSABLEHITBOXES);\n          this.passableHitbox.detectionState = false;\n          // debugger\n        }\n      }\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Player.js\n");

/***/ }),

/***/ "./src/scripts/TileMap.js":
/*!********************************!*\
  !*** ./src/scripts/TileMap.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _Consumable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Consumable */ \"./src/scripts/Consumable.js\");\n\n\n\n\n\nclass TileMap {\n  constructor(tileSize) {\n    this.tileSize = tileSize;\n    this.paused = false;\n    this.optionsToggle = false;\n    this.grass = new Image();\n    this.grass.src = \"./src/graphics/sprites/tilesets/grass.png\";\n    this.water = new Image();\n    this.water.src = './src/graphics/sprites/tilesets/water2.png';\n    this.wro = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.wro[0].src = './src/graphics/sprites/objects/rock_in_water_01.png';\n    this.wro[1].src = './src/graphics/sprites/objects/rock_in_water_02.png';\n    this.wro[2].src = './src/graphics/sprites/objects/rock_in_water_03.png';\n    this.wro[3].src = './src/graphics/sprites/objects/rock_in_water_04.png';\n    this.wro[4].src = './src/graphics/sprites/objects/rock_in_water_05.png';\n    this.wro[5].src = './src/graphics/sprites/objects/rock_in_water_06.png';\n    this.map1 = {\n      0: new Image(),\n      1: new Image(),\n      2: new Image(),\n      3: new Image(),\n      4: new Image(),\n      5: new Image()\n    };\n    this.map1[0].src = './src/graphics/maps/map1frame1.png';\n    this.map1[1].src = './src/graphics/maps/map1frame2.png';\n    this.map1[2].src = './src/graphics/maps/map1frame3.png';\n    this.map1[3].src = './src/graphics/maps/map1frame4.png';\n    this.map1[4].src = './src/graphics/maps/map1frame5.png';\n    this.map1[5].src = './src/graphics/maps/map1frame6.png';\n    this.room = new Image();\n    this.room.src = './src/graphics/maps/room3.png';\n    this.isDoorOpen = false;\n    this.doorClosed = new Image();\n    this.doorClosed.src = './src/graphics/maps/doorclosed.png';\n    this.doorOpen = new Image();\n    this.doorOpen.src = './src/graphics/maps/dooropen.png';\n    this.doorObj; // a door is assigned to it below in getObjects();\n\n    this.objectsImage = new Image();\n    this.objectsImage.src = './src/graphics/sprites/objects/objects.png';\n\n    // because food should disappear after interacting with the player, \n    // I moved the food rendering to the foodUtils.js page.. and it'll just be another loop\n    // that I call during my index rendering... omg so messy. haha\n    // this.foodImage = new Image();\n    // this.foodImage.src = \"./src/graphics/NinjaAdventure/Items/Food/Fish.png\"\n\n    this.shakeFactor = 1;\n    this.shakeStatus = false;\n    this.shakeStatus2 = false;\n    this.freeFood = 10;\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.level = 1;\n\n    //this.bedMenu is assigned in index because of poor file management... :(\n  }\n\n  // P = player\n  theMap1 = [[' ', ' ', ' ', ' ', ' ', '  ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Ta', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', 'Wr', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', '  ', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', '  ', ' ', 'BN', 'BN', ' ', 'P', 'Gc', ' ', ' ', 'BN', 'BN', 'Wr', '  ', 'BN', '  ', '  ', '  ', 'BN', 'BN', 'BN', '  ', 'BN', 'BN', '  ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', 'Bd', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', ' ', 'BN', 'BN', 'BN', ' ', ' ', ' ', ' ', '  ', ' ', 'BN', 'BN', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', '  ', ' ', 'BN', '  ', ' ', ' '], [' ', 'Wr', ' ', 'BN', 'BN', 'BN', 'BN', 'Dc', 'BN', 'BN', 'BN', 'BN', 'Co', ' ', ' ', 'Co', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', ' ', 'Co', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', 'Wr', ' ', 'BN', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', ' ', 'BC', ' ', ' ', 'R1', 'R1', 'R1', 'R1', 'R2', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', 'BN', ' ', ' ', ' ', 'BN', ' ', 'Co', ' ', 'BC', 'BN', ' ', ' '], [' ', 'BN', ' ', ' ', ' ', ' ', 'Bu', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', ' ', ' ', 'BN', ' ', ' ', ' '], [' ', 'BN', ' ', 'Co', ' ', ' ', '', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' '], [' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', 'Wr', ' '], [' ', 'BN', ' ', '  ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' '], [' ', 'BN', 'Co', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', '  ', ' ', '  ', 'BN', '  ', ' '], [' ', 'BN', ' ', ' ', ' ', ' ', ' ', 'BN', '  ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Co', ' ', 'BN', ' ', ' '], [' ', 'BN', 'BC', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', '  '], [' ', ' ', 'BN', 'BC', '  ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', 'Co', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', 'Co', ' ', '  ', 'BN'], [' ', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN', ' ', ' ', ' ', 'BN', 'BN', 'BN', 'BN', 'BN'], [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Wr', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']];\n  draw(ctx) {\n    // debugger\n    // adding some more if then logic to render background map animations so that it\n    // doesn't feel like we're on a floating landmass lmao.\n\n    this.framesDrawn = this.framesDrawn + Math.floor(Math.random() * 10);\n    if (this.framesDrawn >= 45) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this._drawBaseMap(ctx);\n    this._drawRoom(ctx);\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === 'P') {\n          // logic to denote what to render given the value in the theMap1 array.\n          // for now, just trying to render grass.. \n          // this._drawGrass, but also render the player or something so that I can use a player to manip..\n          // this._drawGrass(ctx, col, row, this.tileSize);\n          // this.getPlayer()\n          // depreciated section.. player drawing handled in player file.\n        } else if (tile === 'BN') {\n\n          // RENDER BOUNDARY HITBOX HERE\n          // depreciated code logic... hitboxes will be in .getObjects() below.\n        } else if (tile === \"W\") {\n          this._drawWater(ctx, 25, 20, col, row, this.tileSize);\n        } else if (tile === \"M1\") {\n          this._drawWater(ctx, 80, 0, col, row, this.tileSize); // top right corner!!\n        } else if (tile === \"M2\") {\n          this._drawWater(ctx, 64, 0, col, row, this.tileSize); //\n        } else if (tile === \"M3\") {\n          this._drawWater(ctx, 64, 16, col, row, this.tileSize);\n        } else if (tile === \"M4\") {\n          this._drawWater(ctx, 80, 16, col, row, this.tileSize);\n        } else if (tile === \"Wr\") {\n          this._drawWro(ctx, col, row, this.tileSize);\n        } else if (tile === \"R2\") {\n          this._drawObject(ctx, 16, 16, 16, 16, row, col);\n        } else if (tile === \"R1\") {\n          this._drawObject(ctx, 0, 16, 16, 16, row, col);\n        } else if (tile === \"Ta\") {\n          this._drawObject(ctx, 50, 146, 47, 64, row, col, tile);\n        } else if (tile === \"Co\") {\n          // this._drawFood(ctx, col, row, this.tileSize)\n          // see notes above.\n        } else if (tile === \"Bd\") {\n          this._drawObject(ctx, 176, 32, 16, 32, row * .94, col * .95, \"Bd\");\n        } else if (tile === \"Bu\") {\n          this._drawObject(ctx, 49, 75, 46, 70, row * .85, col, \"Bu\");\n        } else {\n          // debugger\n          // this._drawGrass(ctx, col, row, this.tileSize);\n        }\n      }\n    }\n  }\n  draw2(ctx) {\n    // draw things here that need to be drawn after the player renders. \n\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Dc\") {\n          this._drawDoor(ctx);\n        }\n      }\n    }\n  }\n  _drawDoor(ctx) {\n    if (this.isDoorOpen === false) {\n      ctx.drawImage(this.doorClosed, 0, 0);\n      this._updateDoorHitbox();\n      // console.log(this.doorObj)\n    } else {\n      ctx.drawImage(this.doorOpen, 0, 0);\n      this._updateDoorHitbox();\n    }\n  }\n  _updateDoorHitbox() {\n    if (this.isDoorOpen === true) {\n      this.doorObj.hitboxes.x = 0;\n      this.doorObj.hitboxes.y = 0;\n    } else {\n      this.doorObj.hitboxes.x = 112;\n      this.doorObj.hitboxes.y = 80;\n    }\n  }\n  _drawRoom(ctx) {\n    ctx.drawImage(this.room, 0, 0);\n  }\n  _drawBaseMap(ctx) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.map1[frameNum], 0, 0);\n  }\n  _drawFood(ctx, col, row, size) {\n\n    // ctx.drawImage(this.foodImage, col * this.tileSize, row *this.tileSize, size, size)\n    // depreciated.. see note in constructor. \n  }\n  _drawObject(ctx, srcX, srcY, cropSizeWidth, cropSizeHeight, row, col, tileType) {\n    if (tileType === \"Ta\" && this.shakeStatus === true && (this.currentFrame % 3 === 0 || this.currentFrame % 10 === 0 || this.currentFrame % 11 === 0 || this.currentFrame % 12 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 14 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 15 === 0)) {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth - 1, cropSizeHeight, col * this.tileSize + (3 - Math.floor(Math.random() * 10) / 3), row * this.tileSize + Math.random(), cropSizeWidth, cropSizeHeight);\n    } else if (tileType === \"Bu\" && this.shakeStatus2 === true) {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth - 1, cropSizeHeight, col * this.tileSize + (3 - Math.floor(Math.random() * 10) / 3), row * this.tileSize + Math.random(), cropSizeWidth, cropSizeHeight);\n    } else {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth, cropSizeHeight, col * this.tileSize, row * this.tileSize, cropSizeWidth, cropSizeHeight);\n    }\n    // this.currentFrame;\n  } // drawing a specific object needs to have a hardcoded srcX and srcY, and also a hard coded cropsize. \n  // specific drawing animations done here.... could maybe move this to the object instance,\n  // but this would require an extra reorganization.. \n\n  _drawWater(ctx, srcX, srcY, col, row, size) {\n    ctx.drawImage(this.water, srcX, srcY, size, size, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawWro(ctx, col, row, size) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.wro[frameNum], col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawGrass(ctx, col, row, size) {\n    ctx.drawImage(this.grass, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  getPlayer(velocity) {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"P\") {\n          return new _Player__WEBPACK_IMPORTED_MODULE_0__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, velocity, this);\n        }\n      }\n    }\n  }\n  getNextDayFoodObjects() {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Co\") {\n          if (this.level > 10) {\n            this.spawn = 10;\n          } else {\n            this.spawn = this.level;\n          }\n          let rng = Math.floor(Math.random() * 100) / 3 + this.spawn;\n          if (rng <= 11) {\n            let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n          }\n        }\n      }\n    }\n  }\n  getObjects() {\n    let objectsCollection = [];\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Wr\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 0, -3);\n          objectsCollection.push(rock);\n          // console.log(objectsCollection)\n        } else if (tile === 'BN') {\n          // render border hitbox here\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize - 6, 0, this, 3);\n          objectsCollection.push(invisBoundary);\n          // console.log(objectsCollection)\n        } else if (tile === 'BC') {\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize - 6, this.tileSize - 10, 0, this, 5, 5);\n          objectsCollection.push(invisBoundary);\n        } else if (tile === \"R2\" || tile === \"R1\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize - 3, 0, this, 1, 0);\n          objectsCollection.push(rock);\n        } else if (tile === \"Ta\") {\n          let tree = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 23, 0, this, 3, 8);\n          objectsCollection.push(tree);\n        } else if (tile == \"Bu\") {\n          let tree = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 23, 0, this, 3, -9);\n          objectsCollection.push(tree);\n        } else if (tile === \"Co\") {\n          if (this.level > 10) {\n            this.spawn = 10;\n          } else {\n            this.spawn = this.level;\n          }\n          let rng = Math.floor(Math.random() * 100) / 3 + this.spawn;\n          if (rng <= 11) {\n            let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n          }\n        } else if (tile === \"Gc\") {\n          let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 6.5, 6.5, 0, 0, Math.floor(Math.random() * 1000));\n        } else if (tile === \"Dc\") {\n          this.doorObj = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 6, 0, this, -4, -2);\n        } else if (tile === \"Bd\") {\n          let bed = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, -4, -3);\n        }\n      }\n    }\n    return objectsCollection;\n  }\n  setCanvasSize(canvas) {\n    canvas.width = this.theMap1[0].length * this.tileSize;\n    canvas.height = this.theMap1.length * this.tileSize;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (TileMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/TileMap.js\n");

/***/ }),

/***/ "./src/scripts/UserInterface.js":
/*!**************************************!*\
  !*** ./src/scripts/UserInterface.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass UserInterface {\n  // the point of this class file is to constantly display the controls of\n  // space to interact, escape to reach options, \n  // as well as constantly display/draw the player health and player collected food amount. \n\n  // player is linked as an attribute to keep track of those updates. \n  // not too sure why I need to link the tileMap... I just forgot why, but Im sure i'll run into it lmaooo\n\n  constructor(tileMap, player) {\n    this.tileMap = tileMap;\n    this.player = player;\n    this.controls = new Image();\n    this.controls.src = './src/graphics/userinterface/basicControlsDraft2.png';\n    this.dayOnesNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.dayOnesNums[0].src = './src/graphics/userinterface/days/dayones0.png';\n    this.dayOnesNums[1].src = './src/graphics/userinterface/days/dayones1.png';\n    this.dayOnesNums[2].src = './src/graphics/userinterface/days/dayones2.png';\n    this.dayOnesNums[3].src = './src/graphics/userinterface/days/dayones3.png';\n    this.dayOnesNums[4].src = './src/graphics/userinterface/days/dayones4.png';\n    this.dayOnesNums[5].src = './src/graphics/userinterface/days/dayones5.png';\n    this.dayOnesNums[6].src = './src/graphics/userinterface/days/dayones6.png';\n    this.dayOnesNums[7].src = './src/graphics/userinterface/days/dayones7.png';\n    this.dayOnesNums[8].src = './src/graphics/userinterface/days/dayones8.png';\n    this.dayOnesNums[9].src = './src/graphics/userinterface/days/dayones9.png';\n    this.dayTensNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.dayTensNums[0].src = './src/graphics/userinterface/days/daytens0.png';\n    this.dayTensNums[1].src = './src/graphics/userinterface/days/daytens1.png';\n    this.dayTensNums[2].src = './src/graphics/userinterface/days/daytens2.png';\n    this.dayTensNums[3].src = './src/graphics/userinterface/days/daytens3.png';\n    this.dayTensNums[4].src = './src/graphics/userinterface/days/daytens4.png';\n    this.dayTensNums[5].src = './src/graphics/userinterface/days/daytens5.png';\n    this.dayTensNums[6].src = './src/graphics/userinterface/days/daytens6.png';\n    this.dayTensNums[7].src = './src/graphics/userinterface/days/daytens7.png';\n    this.dayTensNums[8].src = './src/graphics/userinterface/days/daytens8.png';\n    this.dayTensNums[9].src = './src/graphics/userinterface/days/daytens9.png';\n    this.foodOnesNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.foodOnesNums[0].src = './src/graphics/userinterface/food/foodones0.png';\n    this.foodOnesNums[1].src = './src/graphics/userinterface/food/foodones1.png';\n    this.foodOnesNums[2].src = './src/graphics/userinterface/food/foodones2.png';\n    this.foodOnesNums[3].src = './src/graphics/userinterface/food/foodones3.png';\n    this.foodOnesNums[4].src = './src/graphics/userinterface/food/foodones4.png';\n    this.foodOnesNums[5].src = './src/graphics/userinterface/food/foodones5.png';\n    this.foodOnesNums[6].src = './src/graphics/userinterface/food/foodones6.png';\n    this.foodOnesNums[7].src = './src/graphics/userinterface/food/foodones7.png';\n    this.foodOnesNums[8].src = './src/graphics/userinterface/food/foodones8.png';\n    this.foodOnesNums[9].src = './src/graphics/userinterface/food/foodones9.png';\n    this.foodTensNums = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.foodTensNums[0].src = './src/graphics/userinterface/food/foodtens0.png';\n    this.foodTensNums[1].src = './src/graphics/userinterface/food/foodtens1.png';\n    this.foodTensNums[2].src = './src/graphics/userinterface/food/foodtens2.png';\n    this.foodTensNums[3].src = './src/graphics/userinterface/food/foodtens3.png';\n    this.foodTensNums[4].src = './src/graphics/userinterface/food/foodtens4.png';\n    this.foodTensNums[5].src = './src/graphics/userinterface/food/foodtens5.png';\n    this.foodTensNums[6].src = './src/graphics/userinterface/food/foodtens6.png';\n    this.foodTensNums[7].src = './src/graphics/userinterface/food/foodtens7.png';\n    this.foodTensNums[8].src = './src/graphics/userinterface/food/foodtens8.png';\n    this.foodTensNums[9].src = './src/graphics/userinterface/food/foodtens9.png';\n    this.healthImg = new Image();\n    this.healthImg.src = './src/graphics/NinjaAdventure/HUD/Heart.png';\n\n    // this.optionsMenu = new Image ();\n    // this.optionsMenu.src = './src/graphics/menus/optionsMenu.png'\n\n    // this.aliveStatusImage = new Image();\n    // this.aliveStatusImage.src = './src/graphics/menus/aliveStatus.png'\n\n    // this.deadStatusImage = new Image();\n    // this.deadStatusImage.src = './src/graphics/menus/deadStatus.png'\n  }\n\n  drawControls(ctx) {\n    ctx.drawImage(this.controls, 0, 0);\n  }\n  drawDays(ctx) {\n    let onesNum = this.tileMap.level % 10;\n    let tensNum = (this.tileMap.level - onesNum) / 10;\n    ctx.drawImage(this.dayOnesNums[onesNum], 0, 0);\n    ctx.drawImage(this.dayTensNums[tensNum], 0, 0);\n  }\n  drawFoodAmt(ctx) {\n    let onesNum = this.player.food % 10;\n    let tensNum = (this.player.food - onesNum) / 10;\n    ctx.drawImage(this.foodOnesNums[onesNum], 0, 0);\n    ctx.drawImage(this.foodTensNums[tensNum], 0, 0);\n  }\n  drawHealthAmt(ctx) {\n    if (this.player.health === 3) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 2) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 1) {\n      ctx.drawImage(this.healthImg, 0, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    } else if (this.player.health === 0) {\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 300, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 317, 3, 16, 16);\n      ctx.drawImage(this.healthImg, 64, 0, 16, 16, 334, 3, 16, 16);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (UserInterface);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/UserInterface.js\n");

/***/ }),

/***/ "./src/scripts/foodUtils.js":
/*!**********************************!*\
  !*** ./src/scripts/foodUtils.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n\nclass PassableHitbox {\n  constructor(x, y, width, height, tiedObj, xOffset = 0, yOffset = 0) {\n    // debugger\n    this.x = x;\n    this.y = y;\n    this.tiedObj = tiedObj;\n    // ^ a pointer back to what thing we're tied to.. \n\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.detectionState = false;\n    this.debugImageee = new Image();\n    this.debugImageee.src = './src/graphics/debug.png';\n    if (!PassableHitbox.prototype.PASSABLEHITBOXES) {\n      PassableHitbox.prototype.PASSABLEHITBOXES = [];\n    }\n    PassableHitbox.prototype.PASSABLEHITBOXES.push(this);\n    console.log(PassableHitbox.prototype.PASSABLEHITBOXES);\n  }\n  static updateDetectionStateToTrueIfDetecting() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n      PassableHitbox.prototype.PASSABLEHITBOXES[i].detectionState = false;\n    }\n    ;\n    for (let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n      for (let j = i + 1; j < PassableHitbox.prototype.PASSABLEHITBOXES.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = PassableHitbox.prototype.PASSABLEHITBOXES[i];\n        let hitbox2 = PassableHitbox.prototype.PASSABLEHITBOXES[j];\n        if (PassableHitbox._anyDetection(hitbox1, hitbox2)) {\n          hitbox1.detectionState = true;\n          hitbox2.detectionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  _detectingWhat() {\n    // copypasta'd the detections function above \n    // so that it would return an array of detections that I can iterate through later to implement logic. \n\n    let referencingPassableHitbox = this;\n    let listOfDetected = [];\n\n    // for(let i = 0; i < PassableHitbox.prototype.PASSABLEHITBOXES.length; i++) {\n    for (let j = 0; j < PassableHitbox.prototype.PASSABLEHITBOXES.length; j++) {\n      // console.log([i, j])\n      // let hitbox1 = PassableHitbox.prototype.PASSABLEHITBOXES[i];\n\n      let hitbox2 = PassableHitbox.prototype.PASSABLEHITBOXES[j];\n      if (PassableHitbox._anyDetection(referencingPassableHitbox, hitbox2) && !(referencingPassableHitbox === hitbox2)) {\n        // hitbox1.detectionState = true;\n        hitbox2.detectionState = true;\n        listOfDetected.push(hitbox2);\n        // debugger\n      }\n    }\n    // }\n    return listOfDetected;\n  }\n  static _anyDetection(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraww(ctx) {\n    // debugger\n    if (this.detectionState === false) {\n      ctx.filter = 'none';\n      // debugger\n      // ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height)\n      // ctx.drawImage(this.debugImage, 16, 16, this.x + this.xOffset, this.y + this.yOffset)\n      ctx.drawImage(this.debugImageee, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.detectionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImageee, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PassableHitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/foodUtils.js\n");

/***/ }),

/***/ "./src/scripts/musics.js":
/*!*******************************!*\
  !*** ./src/scripts/musics.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Sound {\n  constructor(src) {\n    this.sound = document.createElement(\"audio\");\n    this.sound.src = src;\n    this.sound.setAttribute(\"preload\", \"auto\");\n    this.sound.setAttribute(\"controls\", \"none\");\n    this.sound.style.display = \"none\";\n    this.play = function () {\n      this.sound.play();\n    };\n    this.stop = function () {\n      this.sound.pause();\n    };\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tdXNpY3MuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLEtBQUssQ0FBQztFQUVSQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYixJQUFJLENBQUNDLEtBQUssR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsT0FBTyxDQUFDO0lBQzVDLElBQUksQ0FBQ0YsS0FBSyxDQUFDRCxHQUFHLEdBQUdBLEdBQUc7SUFDcEIsSUFBSSxDQUFDQyxLQUFLLENBQUNHLFlBQVksQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO0lBQzFDLElBQUksQ0FBQ0gsS0FBSyxDQUFDRyxZQUFZLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQztJQUMzQyxJQUFJLENBQUNILEtBQUssQ0FBQ0ksS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtJQUNqQyxJQUFJLENBQUNDLElBQUksR0FBRyxZQUFXO01BQ25CLElBQUksQ0FBQ04sS0FBSyxDQUFDTSxJQUFJLEVBQUU7SUFDckIsQ0FBQztJQUVELElBQUksQ0FBQ0MsSUFBSSxHQUFHLFlBQVc7TUFDbkIsSUFBSSxDQUFDUCxLQUFLLENBQUNRLEtBQUssRUFBRTtJQUN0QixDQUFDO0VBQ0w7QUFFSjtBQUVBLCtEQUFlWCxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmF2aW5lX3Byb2ovLi9zcmMvc2NyaXB0cy9tdXNpY3MuanM/NTg1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTb3VuZCB7XG5cbiAgICBjb25zdHJ1Y3RvcihzcmMpIHtcbiAgICAgICAgdGhpcy5zb3VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhdWRpb1wiKTtcbiAgICAgICAgdGhpcy5zb3VuZC5zcmMgPSBzcmM7XG4gICAgICAgIHRoaXMuc291bmQuc2V0QXR0cmlidXRlKFwicHJlbG9hZFwiLCBcImF1dG9cIik7XG4gICAgICAgIHRoaXMuc291bmQuc2V0QXR0cmlidXRlKFwiY29udHJvbHNcIiwgXCJub25lXCIpO1xuICAgICAgICB0aGlzLnNvdW5kLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgdGhpcy5wbGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLnNvdW5kLnBsYXkoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RvcCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5zb3VuZC5wYXVzZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNvdW5kOyJdLCJuYW1lcyI6WyJTb3VuZCIsImNvbnN0cnVjdG9yIiwic3JjIiwic291bmQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJzdHlsZSIsImRpc3BsYXkiLCJwbGF5Iiwic3RvcCIsInBhdXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/musics.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// const ALLHITBOXESMADE = [];\n\nclass Hitbox {\n  // hitbox logic... \n  // track x, y positions in the game world. \n  // track height and width of the hitbox. \n  // MUST loop through all combinations of hitboxes to detect collisions. \n  // isColliding(target, checkingWith) => `target.collisionState = true` && return true if target and checking with colliding.\n  // \n  // Currently thinking of adding an x and y offset so I can attach accurate hitboxes to all the game assets.\n  // whenever a new object is made, hitboxes are tied to it through a callback. \n  constructor(x, y, width, height, xOffset = 0, yOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.collisionState = false;\n    this.debugImage = new Image();\n    this.debugImage.src = './src/graphics/debug.png';\n    if (!Hitbox.prototype.ALLHITBOXESMADE) {\n      Hitbox.prototype.ALLHITBOXESMADE = [];\n    }\n    Hitbox.prototype.ALLHITBOXESMADE.push(this);\n    // console.log(ALLHITBOXESMADE);\n  }\n\n  static updateCollisionStateToTrueIfColliding() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      Hitbox.prototype.ALLHITBOXESMADE[i].collisionState = false;\n    }\n    ;\n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      for (let j = i + 1; j < Hitbox.prototype.ALLHITBOXESMADE.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = Hitbox.prototype.ALLHITBOXESMADE[i];\n        let hitbox2 = Hitbox.prototype.ALLHITBOXESMADE[j];\n        if (Hitbox._anyCollision(hitbox1, hitbox2)) {\n          hitbox1.collisionState = true;\n          hitbox2.collisionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  static _anyCollision(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraw(ctx) {\n    // debugger\n    if (this.collisionState === false) {\n      ctx.filter = 'none';\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.collisionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n\n// class PassableHitbox {\n\n//     constructor(x, y, width, height, xOffset = 0, yOffset = 0){\n\n//         debugger\n//         this.x = x;\n//         this.y = y;\n\n//         this.xOffset = xOffset;\n//         this.yOffset = yOffset;\n\n//         this.width = width;\n//         this.height = height;\n\n//         this.detectionState = false;\n\n//         this.debugImage = new Image();\n//         this.debugImage.src = './src/graphics/debug.pngg';\n\n//         if (!Hitbox.prototype.PASSABLEHITBOXES){\n//             Hitbox.prototype.PASSABLEHITBOXES = []\n//         }\n\n//         Hitbox.prototype.PASSABLEHITBOXES.push(this);\n\n//         console.log(Hitbox.prototype.PASSABLEHITBOXES)\n//     }\n\n// }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Hitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;
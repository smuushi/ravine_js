/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/TileMap */ \"./src/scripts/TileMap.js\");\n/* harmony import */ var _scripts_Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _scripts_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/utils */ \"./src/scripts/utils.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // waiting for stuff to load first. lmao\n\n  console.log('hello world');\n  console.log('hellos from index');\n\n  // game info so far... \n  // map size will be 30 x 20 squares. \n  // tile size 16 x 16 pixels also. \n\n  const canvas = document.getElementById('game-canvas'); // gathered my html elements that I will be working in. \n  const ctx = canvas.getContext('2d'); // all rendering takes place on the ctx. \n\n  const tileSize = 16;\n  const theTileMapInstance = new _scripts_TileMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](tileSize);\n  const player = theTileMapInstance.getPlayer(1);\n  const envObjects = theTileMapInstance.getObjects();\n  console.log(player);\n  // debugger\n\n  const hitboxes = _scripts_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].prototype.ALLHITBOXESMADE;\n  function gameRender() {\n    // layer draw calls to create layers\n    theTileMapInstance.draw(ctx);\n    // debugger\n    player.animate(ctx);\n    // console.log(\"hello\")\n    player.move(ctx);\n\n    //below lines will draw hitboxes.. comment them out to disable hitbox rendering\n    player.hitbox._debugDraw(ctx);\n    // envObjects.forEach((obj) => obj.drawHitboxes(ctx));\n    hitboxes.forEach(box => box._debugDraw(ctx));\n    // console.log(hitboxes);\n    _scripts_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].updateCollisionStateToTrueIfColliding();\n  }\n  theTileMapInstance.setCanvasSize(canvas);\n  setInterval(gameRender, 1000 / 75);\n\n  // order logic =>\n\n  // TileMap.js handles rendering logic. \n  // hitboxes handles collision detection only!\n  // each class will have their own move() function which will handle collision logic and what to do.\n  // separate player class. with a hitbox instance tied on an attribute. \n  // separate envionmental objects class. with a hitbox also tied. \n  // \n\n  // to do list: \n  // write out hitbox collision detection logic and refactor player.move() code to account. \n  // current problem is that in order to update collision, I need to iterate through all combinations of \n  // hitboxes... so I need to find a way of collecting them as they're created... \n  // look up a way of exporting an updatable class constant that I can use in the gameRender callback.\n\n  // above done by the end of Friday!\n\n  // next to do list.. \n  // create a food item that will render and place itself based on the tilemap.. \n  // after creating the note below, I will also extend this food item from the env objects class. \n  // we'll call it 'consumable'\n  //\n  // create a new day functionality.. \n  // ^ will necessitate a rendering and processing of an object that will allow the player to sleep. \n  // ^ will not sure if this will be a custom environmental object.. maybe I can do that by extending the class. \n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUF3QztBQUNGO0FBQ0Q7QUFDckNHLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUFFOztFQUVsREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO0VBSTlCRCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQzs7RUFFaEM7RUFDQTtFQUNBOztFQUVBLE1BQU1DLE1BQU0sR0FBR0osUUFBUSxDQUFDSyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztFQUN2RCxNQUFNQyxHQUFHLEdBQUdGLE1BQU0sQ0FBQ0csVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7O0VBRXJDLE1BQU1DLFFBQVEsR0FBRyxFQUFFO0VBQ25CLE1BQU1DLGtCQUFrQixHQUFHLElBQUlaLHdEQUFPLENBQUNXLFFBQVEsQ0FBQztFQUdoRCxNQUFNRSxNQUFNLEdBQUdELGtCQUFrQixDQUFDRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0VBRTlDLE1BQU1DLFVBQVUsR0FBR0gsa0JBQWtCLENBQUNJLFVBQVUsRUFBRTtFQUNsRFgsT0FBTyxDQUFDQyxHQUFHLENBQUNPLE1BQU0sQ0FBQztFQUNuQjs7RUFFQSxNQUFNSSxRQUFRLEdBQUdmLGdGQUFnQztFQUVqRCxTQUFTa0IsVUFBVUEsQ0FBQSxFQUFHO0lBQUU7SUFDcEJSLGtCQUFrQixDQUFDUyxJQUFJLENBQUNaLEdBQUcsQ0FBQztJQUM1QjtJQUNBSSxNQUFNLENBQUNTLE9BQU8sQ0FBQ2IsR0FBRyxDQUFDO0lBQ25CO0lBQ0FJLE1BQU0sQ0FBQ1UsSUFBSSxDQUFDZCxHQUFHLENBQUM7O0lBR2hCO0lBQ0lJLE1BQU0sQ0FBQ1csTUFBTSxDQUFDQyxVQUFVLENBQUNoQixHQUFHLENBQUM7SUFDN0I7SUFDQVEsUUFBUSxDQUFDUyxPQUFPLENBQUVDLEdBQUcsSUFBS0EsR0FBRyxDQUFDRixVQUFVLENBQUNoQixHQUFHLENBQUMsQ0FBQztJQUNsRDtJQUNBUCw0RkFBNEMsRUFBRTtFQUtsRDtFQUVBVSxrQkFBa0IsQ0FBQ2lCLGFBQWEsQ0FBQ3RCLE1BQU0sQ0FBQztFQUV4Q3VCLFdBQVcsQ0FBQ1YsVUFBVSxFQUFFLElBQUksR0FBQyxFQUFFLENBQUM7O0VBRWhDOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztFQUVBOztFQUdBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QUFFQSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUaWxlTWFwIGZyb20gXCIuL3NjcmlwdHMvVGlsZU1hcFwiO1xuaW1wb3J0IFBsYXllciBmcm9tICcuL3NjcmlwdHMvUGxheWVyJztcbmltcG9ydCBIaXRib3ggZnJvbSAnLi9zY3JpcHRzL3V0aWxzJztcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHsgLy8gd2FpdGluZyBmb3Igc3R1ZmYgdG8gbG9hZCBmaXJzdC4gbG1hb1xuXG4gICAgY29uc29sZS5sb2coJ2hlbGxvIHdvcmxkJylcblxuXG5cbmNvbnNvbGUubG9nKCdoZWxsb3MgZnJvbSBpbmRleCcpXG5cbi8vIGdhbWUgaW5mbyBzbyBmYXIuLi4gXG4vLyBtYXAgc2l6ZSB3aWxsIGJlIDMwIHggMjAgc3F1YXJlcy4gXG4vLyB0aWxlIHNpemUgMTYgeCAxNiBwaXhlbHMgYWxzby4gXG5cbmNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnYW1lLWNhbnZhcycpOyAvLyBnYXRoZXJlZCBteSBodG1sIGVsZW1lbnRzIHRoYXQgSSB3aWxsIGJlIHdvcmtpbmcgaW4uIFxuY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7IC8vIGFsbCByZW5kZXJpbmcgdGFrZXMgcGxhY2Ugb24gdGhlIGN0eC4gXG5cbmNvbnN0IHRpbGVTaXplID0gMTY7XG5jb25zdCB0aGVUaWxlTWFwSW5zdGFuY2UgPSBuZXcgVGlsZU1hcCh0aWxlU2l6ZSk7XG5cblxuY29uc3QgcGxheWVyID0gdGhlVGlsZU1hcEluc3RhbmNlLmdldFBsYXllcigxKTtcblxuY29uc3QgZW52T2JqZWN0cyA9IHRoZVRpbGVNYXBJbnN0YW5jZS5nZXRPYmplY3RzKCk7XG5jb25zb2xlLmxvZyhwbGF5ZXIpO1xuLy8gZGVidWdnZXJcblxuY29uc3QgaGl0Ym94ZXMgPSBIaXRib3gucHJvdG90eXBlLkFMTEhJVEJPWEVTTUFERTtcblxuZnVuY3Rpb24gZ2FtZVJlbmRlcigpIHsgLy8gbGF5ZXIgZHJhdyBjYWxscyB0byBjcmVhdGUgbGF5ZXJzXG4gICAgdGhlVGlsZU1hcEluc3RhbmNlLmRyYXcoY3R4KVxuICAgIC8vIGRlYnVnZ2VyXG4gICAgcGxheWVyLmFuaW1hdGUoY3R4KVxuICAgIC8vIGNvbnNvbGUubG9nKFwiaGVsbG9cIilcbiAgICBwbGF5ZXIubW92ZShjdHgpO1xuXG4gICAgXG4gICAgLy9iZWxvdyBsaW5lcyB3aWxsIGRyYXcgaGl0Ym94ZXMuLiBjb21tZW50IHRoZW0gb3V0IHRvIGRpc2FibGUgaGl0Ym94IHJlbmRlcmluZ1xuICAgICAgICBwbGF5ZXIuaGl0Ym94Ll9kZWJ1Z0RyYXcoY3R4KVxuICAgICAgICAvLyBlbnZPYmplY3RzLmZvckVhY2goKG9iaikgPT4gb2JqLmRyYXdIaXRib3hlcyhjdHgpKTtcbiAgICAgICAgaGl0Ym94ZXMuZm9yRWFjaCgoYm94KSA9PiBib3guX2RlYnVnRHJhdyhjdHgpKTtcbiAgICAvLyBjb25zb2xlLmxvZyhoaXRib3hlcyk7XG4gICAgSGl0Ym94LnVwZGF0ZUNvbGxpc2lvblN0YXRlVG9UcnVlSWZDb2xsaWRpbmcoKTtcbiAgICBcbiAgICBcblxuXG59XG5cbnRoZVRpbGVNYXBJbnN0YW5jZS5zZXRDYW52YXNTaXplKGNhbnZhcyk7XG5cbnNldEludGVydmFsKGdhbWVSZW5kZXIsIDEwMDAvNzUpO1xuXG4vLyBvcmRlciBsb2dpYyA9PlxuXG4vLyBUaWxlTWFwLmpzIGhhbmRsZXMgcmVuZGVyaW5nIGxvZ2ljLiBcbi8vIGhpdGJveGVzIGhhbmRsZXMgY29sbGlzaW9uIGRldGVjdGlvbiBvbmx5IVxuLy8gZWFjaCBjbGFzcyB3aWxsIGhhdmUgdGhlaXIgb3duIG1vdmUoKSBmdW5jdGlvbiB3aGljaCB3aWxsIGhhbmRsZSBjb2xsaXNpb24gbG9naWMgYW5kIHdoYXQgdG8gZG8uXG4vLyBzZXBhcmF0ZSBwbGF5ZXIgY2xhc3MuIHdpdGggYSBoaXRib3ggaW5zdGFuY2UgdGllZCBvbiBhbiBhdHRyaWJ1dGUuIFxuLy8gc2VwYXJhdGUgZW52aW9ubWVudGFsIG9iamVjdHMgY2xhc3MuIHdpdGggYSBoaXRib3ggYWxzbyB0aWVkLiBcbi8vIFxuXG4vLyB0byBkbyBsaXN0OiBcbi8vIHdyaXRlIG91dCBoaXRib3ggY29sbGlzaW9uIGRldGVjdGlvbiBsb2dpYyBhbmQgcmVmYWN0b3IgcGxheWVyLm1vdmUoKSBjb2RlIHRvIGFjY291bnQuIFxuLy8gY3VycmVudCBwcm9ibGVtIGlzIHRoYXQgaW4gb3JkZXIgdG8gdXBkYXRlIGNvbGxpc2lvbiwgSSBuZWVkIHRvIGl0ZXJhdGUgdGhyb3VnaCBhbGwgY29tYmluYXRpb25zIG9mIFxuLy8gaGl0Ym94ZXMuLi4gc28gSSBuZWVkIHRvIGZpbmQgYSB3YXkgb2YgY29sbGVjdGluZyB0aGVtIGFzIHRoZXkncmUgY3JlYXRlZC4uLiBcbi8vIGxvb2sgdXAgYSB3YXkgb2YgZXhwb3J0aW5nIGFuIHVwZGF0YWJsZSBjbGFzcyBjb25zdGFudCB0aGF0IEkgY2FuIHVzZSBpbiB0aGUgZ2FtZVJlbmRlciBjYWxsYmFjay5cblxuLy8gYWJvdmUgZG9uZSBieSB0aGUgZW5kIG9mIEZyaWRheSFcblxuXG4vLyBuZXh0IHRvIGRvIGxpc3QuLiBcbi8vIGNyZWF0ZSBhIGZvb2QgaXRlbSB0aGF0IHdpbGwgcmVuZGVyIGFuZCBwbGFjZSBpdHNlbGYgYmFzZWQgb24gdGhlIHRpbGVtYXAuLiBcbi8vIGFmdGVyIGNyZWF0aW5nIHRoZSBub3RlIGJlbG93LCBJIHdpbGwgYWxzbyBleHRlbmQgdGhpcyBmb29kIGl0ZW0gZnJvbSB0aGUgZW52IG9iamVjdHMgY2xhc3MuIFxuLy8gd2UnbGwgY2FsbCBpdCAnY29uc3VtYWJsZSdcbi8vXG4vLyBjcmVhdGUgYSBuZXcgZGF5IGZ1bmN0aW9uYWxpdHkuLiBcbi8vIF4gd2lsbCBuZWNlc3NpdGF0ZSBhIHJlbmRlcmluZyBhbmQgcHJvY2Vzc2luZyBvZiBhbiBvYmplY3QgdGhhdCB3aWxsIGFsbG93IHRoZSBwbGF5ZXIgdG8gc2xlZXAuIFxuLy8gXiB3aWxsIG5vdCBzdXJlIGlmIHRoaXMgd2lsbCBiZSBhIGN1c3RvbSBlbnZpcm9ubWVudGFsIG9iamVjdC4uIG1heWJlIEkgY2FuIGRvIHRoYXQgYnkgZXh0ZW5kaW5nIHRoZSBjbGFzcy4gXG5cbn0pIl0sIm5hbWVzIjpbIlRpbGVNYXAiLCJQbGF5ZXIiLCJIaXRib3giLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25zb2xlIiwibG9nIiwiY2FudmFzIiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0IiwidGlsZVNpemUiLCJ0aGVUaWxlTWFwSW5zdGFuY2UiLCJwbGF5ZXIiLCJnZXRQbGF5ZXIiLCJlbnZPYmplY3RzIiwiZ2V0T2JqZWN0cyIsImhpdGJveGVzIiwicHJvdG90eXBlIiwiQUxMSElUQk9YRVNNQURFIiwiZ2FtZVJlbmRlciIsImRyYXciLCJhbmltYXRlIiwibW92ZSIsImhpdGJveCIsIl9kZWJ1Z0RyYXciLCJmb3JFYWNoIiwiYm94IiwidXBkYXRlQ29sbGlzaW9uU3RhdGVUb1RydWVJZkNvbGxpZGluZyIsInNldENhbnZhc1NpemUiLCJzZXRJbnRlcnZhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/Consumable.js":
/*!***********************************!*\
  !*** ./src/scripts/Consumable.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _foodUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./foodUtils */ \"./src/scripts/foodUtils.js\");\n\n\nclass Consumable extends _EnvObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0) {\n    super(x, y, tileSize - 13, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0);\n    this.consImage = new Image();\n    this.consImage.src = './src/graphics/NinjaAdventure/Items/Food/Shrimp.png';\n    this.foodHitbox = new _foodUtils__WEBPACK_IMPORTED_MODULE_1__[\"default\"](x, y, tileSize, tileSize, tileMap, 0, 0);\n    console.log(this);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Consumable);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9Db25zdW1hYmxlLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFvQztBQUNLO0FBRXpDLE1BQU1FLFVBQVUsU0FBU0Ysa0RBQVMsQ0FBQztFQUUvQkcsV0FBV0EsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUU7SUFDakYsS0FBSyxDQUFDTixDQUFDLEVBQUVDLENBQUMsRUFBRUMsUUFBUSxHQUFHLEVBQUUsRUFBRUMsUUFBUSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsR0FBRyxDQUFDLEVBQUVDLGFBQWEsR0FBRyxDQUFDLENBQUM7SUFFbkYsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSUMsS0FBSyxFQUFHO0lBQzdCLElBQUksQ0FBQ0QsU0FBUyxDQUFDRSxHQUFHLEdBQUcscURBQXFEO0lBSTFFLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUliLGtEQUFjLENBQUNHLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxRQUFRLEVBQUVBLFFBQVEsRUFBRUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFN0VPLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQztFQUVyQjtBQUlKO0FBRUEsK0RBQWVkLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL0NvbnN1bWFibGUuanM/N2ZjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRW52T2JqZWN0IGZyb20gXCIuL0Vudk9iamVjdFwiO1xuaW1wb3J0IFBhc3NhYmxlSGl0Ym94IGZyb20gXCIuL2Zvb2RVdGlsc1wiO1xuXG5jbGFzcyBDb25zdW1hYmxlIGV4dGVuZHMgRW52T2JqZWN0IHtcblxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHRpbGVTaXplLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCA9IDAsIGhpdGJveFlPZmZzZXQgPSAwKSB7XG4gICAgICAgIHN1cGVyKHgsIHksIHRpbGVTaXplIC0gMTMsIHZlbG9jaXR5LCB0aWxlTWFwLCBoaXRib3hYT2Zmc2V0ID0gMCwgaGl0Ym94WU9mZnNldCA9IDApXG5cbiAgICAgICAgdGhpcy5jb25zSW1hZ2UgPSBuZXcgSW1hZ2UgKCk7XG4gICAgICAgIHRoaXMuY29uc0ltYWdlLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9OaW5qYUFkdmVudHVyZS9JdGVtcy9Gb29kL1NocmltcC5wbmcnXG5cblxuICAgICAgICBcbiAgICAgICAgdGhpcy5mb29kSGl0Ym94ID0gbmV3IFBhc3NhYmxlSGl0Ym94KHgsIHksIHRpbGVTaXplLCB0aWxlU2l6ZSwgdGlsZU1hcCwgMCwgMClcbiAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMpXG5cbiAgICB9XG5cblxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbnN1bWFibGU7Il0sIm5hbWVzIjpbIkVudk9iamVjdCIsIlBhc3NhYmxlSGl0Ym94IiwiQ29uc3VtYWJsZSIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJ0aWxlU2l6ZSIsInZlbG9jaXR5IiwidGlsZU1hcCIsImhpdGJveFhPZmZzZXQiLCJoaXRib3hZT2Zmc2V0IiwiY29uc0ltYWdlIiwiSW1hZ2UiLCJzcmMiLCJmb29kSGl0Ym94IiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/Consumable.js\n");

/***/ }),

/***/ "./src/scripts/EnvObject.js":
/*!**********************************!*\
  !*** ./src/scripts/EnvObject.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\n\nclass EnvObject {\n  //let rock = new EnvObject(col * this.tileSize, col * this.tileSize, this.tileSize, this.tileMap)\n\n  constructor(x, y, tileSize, velocity, tileMap, hitboxXOffset = 0, hitboxYOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n    this.hitboxes = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize, this.tileSize, hitboxXOffset, hitboxYOffset);\n  }\n  drawHitboxes(ctx) {\n    // for debugging to see a semitransparent hitbox on all env objects like a rock.\n    // this.hitboxes.forEach((hitbox) => hitbox._debugDraw(ctx))\n    this.hitboxes._debugDraw(ctx);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnvObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9FbnZPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBZ0M7QUFJaEMsTUFBTUMsU0FBUyxDQUFDO0VBRVo7O0VBRUFDLFdBQVdBLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFQyxhQUFhLEdBQUcsQ0FBQyxFQUFFO0lBQ2pGLElBQUksQ0FBQ04sQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUdBLENBQUM7SUFDVixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUV4QixJQUFJLENBQUNDLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNDLE9BQU8sR0FBR0EsT0FBTztJQUV0QixJQUFJLENBQUNHLFFBQVEsR0FBRyxJQUFJVixpREFBTSxDQUFDLElBQUksQ0FBQ0csQ0FBQyxFQUFFLElBQUksQ0FBQ0MsQ0FBQyxFQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUFFLElBQUksQ0FBQ0EsUUFBUSxFQUFFRyxhQUFhLEVBQUVDLGFBQWEsQ0FBQztFQUUxRztFQUVBRSxZQUFZQSxDQUFDQyxHQUFHLEVBQUU7SUFBRTtJQUNoQjtJQUNBLElBQUksQ0FBQ0YsUUFBUSxDQUFDRyxVQUFVLENBQUNELEdBQUcsQ0FBQztFQUNqQztBQUtKO0FBRUEsK0RBQWVYLFNBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL0Vudk9iamVjdC5qcz9kYTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIaXRib3ggZnJvbSBcIi4vdXRpbHMuanNcIjtcblxuXG5cbmNsYXNzIEVudk9iamVjdCB7XG5cbiAgICAvL2xldCByb2NrID0gbmV3IEVudk9iamVjdChjb2wgKiB0aGlzLnRpbGVTaXplLCBjb2wgKiB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVTaXplLCB0aGlzLnRpbGVNYXApXG4gICAgIFxuICAgIGNvbnN0cnVjdG9yKHgsIHksIHRpbGVTaXplLCB2ZWxvY2l0eSwgdGlsZU1hcCwgaGl0Ym94WE9mZnNldCA9IDAsIGhpdGJveFlPZmZzZXQgPSAwKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMudGlsZVNpemUgPSB0aWxlU2l6ZTtcblxuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gdmVsb2NpdHk7XG4gICAgICAgIHRoaXMudGlsZU1hcCA9IHRpbGVNYXA7XG5cbiAgICAgICAgdGhpcy5oaXRib3hlcyA9IG5ldyBIaXRib3godGhpcy54LCB0aGlzLnksIHRoaXMudGlsZVNpemUsIHRoaXMudGlsZVNpemUsIGhpdGJveFhPZmZzZXQsIGhpdGJveFlPZmZzZXQpO1xuICAgICAgICBcbiAgICB9XG5cbiAgICBkcmF3SGl0Ym94ZXMoY3R4KSB7IC8vIGZvciBkZWJ1Z2dpbmcgdG8gc2VlIGEgc2VtaXRyYW5zcGFyZW50IGhpdGJveCBvbiBhbGwgZW52IG9iamVjdHMgbGlrZSBhIHJvY2suXG4gICAgICAgIC8vIHRoaXMuaGl0Ym94ZXMuZm9yRWFjaCgoaGl0Ym94KSA9PiBoaXRib3guX2RlYnVnRHJhdyhjdHgpKVxuICAgICAgICB0aGlzLmhpdGJveGVzLl9kZWJ1Z0RyYXcoY3R4KTtcbiAgICB9XG5cblxuICAgIFxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEVudk9iamVjdCJdLCJuYW1lcyI6WyJIaXRib3giLCJFbnZPYmplY3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwidGlsZVNpemUiLCJ2ZWxvY2l0eSIsInRpbGVNYXAiLCJoaXRib3hYT2Zmc2V0IiwiaGl0Ym94WU9mZnNldCIsImhpdGJveGVzIiwiZHJhd0hpdGJveGVzIiwiY3R4IiwiX2RlYnVnRHJhdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/EnvObject.js\n");

/***/ }),

/***/ "./src/scripts/Player.js":
/*!*******************************!*\
  !*** ./src/scripts/Player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/scripts/utils.js\");\nconst DIRS = [\n// directions made here to refer to. \n[0, -1], [0, 1], [1, 0], [-1, 0]];\n\nclass Player {\n  constructor(x, y, tileSize, velocity, tileMap) {\n    this.x = x;\n    this.y = y;\n    this.tileSize = tileSize;\n    this.velocity = velocity;\n    this.tileMap = tileMap;\n\n    // const spriteCols = 10;\n    // const spriteRows = 6;\n    // const totalFrames = 6\n\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n    this.playerImage = new Image();\n    this.playerImage.src = \"./src/graphics/sprites/characters/player.png\"; // idk how to use sprite sheets.. so I used the rock... \n    // this.playerImage.src = '../graphics/sprites/objects/rock_in_water_01.png'\n\n    this.dust = new Image();\n    this.dust.src = './src/graphics/sprites/particles/dust_particles_01.png';\n    this.currentMovingDirection = null;\n    document.addEventListener('keydown', this._keydown); // \n    document.addEventListener('keyup', this._keyup); // listener to set player current moving direction to null if they let go of a direction.\n\n    // this.currentFrame = 0; // why is there a duplicate here??? idk lmaoo \n\n    this.lastMovingDirection;\n    this.hitbox = new _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.x, this.y, this.tileSize - 4, this.tileSize - 3.5, 1.5, -4);\n    if (!Player.prototype.keyss) {\n      Player.prototype.keyss = {};\n    }\n  }\n  animate(ctx) {\n    //288 x 480\n    // requestAnimationFrame(animate)\n\n    // currentFrame = this.currentFrame % totalFrames;\n\n    let srcX = this.currentFrame * 48 % 288;\n    let srcY;\n\n    // switch(srcY) {\n    if (this.currentMovingDirection === DIRS[2]) {\n      // right\n      srcY = 208;\n    } else if (this.currentMovingDirection === DIRS[0]) {\n      // up\n      srcY = 255;\n    } else if (this.currentMovingDirection === DIRS[1]) {\n      // down\n      srcY = 158;\n    } else if (this.currentMovingDirection === DIRS[3]) {\n      // left\n      srcY = 208;\n      srcX = this.currentFrame * 48 % 288 * 1;\n    } else {\n      if (this.lastMovingDirection === DIRS[2]) {\n        // right idle\n        srcY = 64;\n      } else if (this.lastMovingDirection === DIRS[0]) {\n        // up idle\n        srcY = 110;\n      } else if (this.lastMovingDirection === DIRS[3]) {\n        // left idle... same as right idle lmao\n        srcY = 64;\n      } else {\n        // down idle\n        srcY = 16;\n      }\n    }\n\n    // really ugly code to mirror the right animation run.. :T\n    if (this.currentMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, -this.x + 1, this.y - 15, -32, 32);\n      ctx.restore();\n    } else if (this.currentMovingDirection === null && this.lastMovingDirection === DIRS[3]) {\n      ctx.save();\n      ctx.scale(-1, 1);\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, -this.x, this.y - 15, -32, 32);\n      ctx.restore();\n    } else {\n      // ctx.save()\n      ctx.drawImage(this.playerImage, srcX, srcY, 32, 32, this.x - 17, this.y - 15, 32, 32);\n      // ctx.restore()\n    }\n\n    this.framesDrawn++;\n    if (this.framesDrawn >= 12) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n  }\n  _keydown = event => {\n    // debugger \n    // console.log(event)\n    if (!Player.prototype.keyss[event.code]) {\n      Player.prototype.keyss[event.code] = event.code;\n      console.log(Player.prototype.keyss[event.code]);\n    }\n    if (event.key === 'ArrowUp') {\n      this.currentMovingDirection = DIRS[0];\n    } else if (event.key === 'ArrowDown') {\n      this.currentMovingDirection = DIRS[1];\n    } else if (event.key === 'ArrowLeft') {\n      this.currentMovingDirection = DIRS[3];\n    } else if (event.key === 'ArrowRight') {\n      this.currentMovingDirection = DIRS[2];\n    }\n    // console.log('down')\n\n    // while (!!this.currentMovingDirection) {\n\n    // debugger\n    if (event.key === ' ' && this.x > 347 && this.x < 390 && this.y < 70 && this.y > 50) {\n      this.tileMap.shakeStatus = true;\n      setTimeout(() => this.tileMap.shakeStatus = false, 300);\n    }\n  };\n  _keyup = event => {\n    Player.prototype.keyss[event.code] = null;\n    // debugger\n    if (event.code === 'Space') {\n      if (this.tileMap.shakeStatus === true) {\n        this.tileMap.shakeStatus = false;\n      }\n    } else {\n      console.log('key was let go');\n      // console.log('up')\n      // this.lastLastMovingDirectionLmao = this.lastMovingDirection; // this doesn't work lol\n      // note here.. attempting to make movement more fluid.. \n\n      // if (!!this.currentMovingDirection){\n      this.lastMovingDirection = this.currentMovingDirection;\n      // }\n\n      this.currentMovingDirection = null;\n      if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n        let stillHeldKey;\n        Object.values(Player.prototype.keyss).forEach(value => {\n          if (!!value) {\n            stillHeldKey = value;\n          }\n        });\n        // console.log(stillHeldKey)\n\n        if (stillHeldKey === 'ArrowUp') {\n          this.currentMovingDirection = DIRS[0];\n        } else if (stillHeldKey === 'ArrowDown') {\n          this.currentMovingDirection = DIRS[1];\n        } else if (stillHeldKey === 'ArrowLeft') {\n          this.currentMovingDirection = DIRS[3];\n        } else if (stillHeldKey === 'ArrowRight') {\n          // debugger\n          this.currentMovingDirection = DIRS[2];\n        }\n\n        // console.log(this.currentMovingDirection)\n      }\n    }\n  };\n\n  _drawDust(ctx) {\n    // ctx.drawImage(this)\n    console.log(ctx);\n    ctx.drawImage(this.dust, this.x + 1, this.y - 15);\n    // wanted to implement a dust particle effect while moving... but too much work for nothing..\n    // need to focus more on functionality at this beginning state.. Can come back later maybe. \n  }\n\n  move(ctx) {\n    // move takes in a context to call movement specific additional drawings like dust particles. \n\n    if (Object.values(Player.prototype.keyss).some(val => !!val)) {\n      if (!!this.currentMovingDirection) {\n        // let oldX = this.x;\n        // let oldY = this.y;\n\n        this.y = this.currentMovingDirection[1] * this.velocity + this.y;\n        this.x = this.currentMovingDirection[0] * this.velocity + this.x;\n        this.hitbox.x = this.x;\n        this.hitbox.y = this.y;\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n        while (this.hitbox.collisionState === true) {\n          // debugger\n          this.y = this.currentMovingDirection[1] * -1 * this.velocity + this.y;\n          this.x = this.currentMovingDirection[0] * -1 * this.velocity + this.x;\n          this.hitbox.x = this.x;\n          this.hitbox.y = this.y;\n          _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateCollisionStateToTrueIfColliding();\n\n          // debugger\n          return;\n        }\n\n        // this._drawDust(ctx); // see note in _drawDust.\n\n        // if (this.hitbox.collisionState === true) {\n        //     // debugger\n        //     this.y = this.currentMovingDirection[1]*(-1)* this.velocity + this.y; \n        //     this.x = this.currentMovingDirection[0]*(-1)* this.velocity + this.x;\n        //     this.hitbox.x = this.x;\n        //     this.hitbox.y = this.y;\n        //     // debugger\n        // }\n      }\n\n      console.log([this.x, this.y]);\n      // console.log(this.x)\n      // console.log(this.y)\n      // console.log(this.currentMovingDirection)\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/Player.js\n");

/***/ }),

/***/ "./src/scripts/TileMap.js":
/*!********************************!*\
  !*** ./src/scripts/TileMap.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player */ \"./src/scripts/Player.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n/* harmony import */ var _EnvObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EnvObject */ \"./src/scripts/EnvObject.js\");\n/* harmony import */ var _Consumable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Consumable */ \"./src/scripts/Consumable.js\");\n\n\n\n\nclass TileMap {\n  constructor(tileSize) {\n    this.tileSize = tileSize;\n    this.grass = new Image();\n    this.grass.src = \"./src/graphics/sprites/tilesets/grass.png\";\n    this.water = new Image();\n    this.water.src = './src/graphics/sprites/tilesets/water2.png';\n    this.wro = [new Image(), new Image(), new Image(), new Image(), new Image(), new Image()];\n    this.wro[0].src = './src/graphics/sprites/objects/rock_in_water_01.png';\n    this.wro[1].src = './src/graphics/sprites/objects/rock_in_water_02.png';\n    this.wro[2].src = './src/graphics/sprites/objects/rock_in_water_03.png';\n    this.wro[3].src = './src/graphics/sprites/objects/rock_in_water_04.png';\n    this.wro[4].src = './src/graphics/sprites/objects/rock_in_water_05.png';\n    this.wro[5].src = './src/graphics/sprites/objects/rock_in_water_06.png';\n    this.map1 = {\n      0: new Image(),\n      1: new Image(),\n      2: new Image(),\n      3: new Image(),\n      4: new Image(),\n      5: new Image()\n    };\n    this.map1[0].src = './src/graphics/maps/map1frame1.png';\n    this.map1[1].src = './src/graphics/maps/map1frame2.png';\n    this.map1[2].src = './src/graphics/maps/map1frame3.png';\n    this.map1[3].src = './src/graphics/maps/map1frame4.png';\n    this.map1[4].src = './src/graphics/maps/map1frame5.png';\n    this.map1[5].src = './src/graphics/maps/map1frame6.png';\n    this.objectsImage = new Image();\n    this.objectsImage.src = './src/graphics/sprites/objects/objects.png';\n    this.shakeFactor = 1;\n    this.shakeStatus = false;\n    this.currentFrame = 0;\n    this.framesDrawn = 0;\n  }\n\n  // P = player\n  theMap1 = [[' ', ' ', ' ', ' ', ' ', '  ', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'Ta', ' ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', 'Wr', ' ', 'BN', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', '  ', 'BN', '  ', ' ', ' ', ' ', ' ', ' ', ' '], [' ', '  ', '  ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', '  ', 'BN', '  ', 'Wr', '  ', 'BN', 'BN', 'BN', '  ', 'BN', 'BN', '  ', ' ', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', 'BN', 'BN', ' ', 'BN', 'BN', 'BN', ' ', ' ', ' ', ' ', '  ', ' ', 'BN', 'BN', ' ', ' ', ' '], [' ', ' ', ' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', ' ', 'BN', '  ', ' ', ' '], [' ', 'Wr', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', ' ', ' ', ' ', ' ', ' ', 'BC', 'BC', 'BC', 'BC', 'BC', ' ', ' ', ' ', '  ', 'BN', ' ', ' '], [' ', ' ', 'BN', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'BN', ' ', 'Wro', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '  ', ' ', ' ', 'BN', 'Wrr', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']];\n  draw(ctx) {\n    // debugger\n    // adding some more if then logic to render background map animations so that it\n    // doesn't feel like we're on a floating landmass lmao.\n\n    this.framesDrawn = this.framesDrawn + Math.floor(Math.random() * 10);\n    if (this.framesDrawn >= 45) {\n      this.currentFrame++;\n      this.framesDrawn = 0;\n    }\n    this._drawBaseMap(ctx);\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === 'P') {\n          // logic to denote what to render given the value in the theMap1 array.\n          // for now, just trying to render grass.. \n          // this._drawGrass, but also render the player or something so that I can use a player to manip..\n          this._drawGrass(ctx, col, row, this.tileSize);\n          // this.getPlayer()\n        } else if (tile === 'BN') {\n\n          // RENDER BOUNDARY HITBOX HERE\n          // depreciated code logic... hitboxes will be in .getObjects() below.\n        } else if (tile === \"W\") {\n          this._drawWater(ctx, 25, 20, col, row, this.tileSize);\n        } else if (tile === \"M1\") {\n          this._drawWater(ctx, 80, 0, col, row, this.tileSize); // top right corner!!\n        } else if (tile === \"M2\") {\n          this._drawWater(ctx, 64, 0, col, row, this.tileSize); //\n        } else if (tile === \"M3\") {\n          this._drawWater(ctx, 64, 16, col, row, this.tileSize);\n        } else if (tile === \"M4\") {\n          this._drawWater(ctx, 80, 16, col, row, this.tileSize);\n        } else if (tile === \"Wr\") {\n          this._drawWro(ctx, col, row, this.tileSize);\n        } else if (tile === \"R2\") {\n          this._drawObject(ctx, 16, 16, 16, 16, row, col);\n        } else if (tile === \"R1\") {\n          this._drawObject(ctx, 0, 16, 16, 16, row, col);\n        } else if (tile === \"Ta\") {\n          this._drawObject(ctx, 50, 146, 47, 64, row, col, tile);\n        } else {\n          // debugger\n          // this._drawGrass(ctx, col, row, this.tileSize);\n        }\n      }\n    }\n  }\n  _drawBaseMap(ctx) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.map1[frameNum], 0, 0);\n  }\n  _drawObject(ctx, srcX, srcY, cropSizeWidth, cropSizeHeight, row, col, tileType) {\n    if (tileType === \"Ta\" && this.shakeStatus === true && (this.currentFrame % 3 === 0 || this.currentFrame % 10 === 0 || this.currentFrame % 11 === 0 || this.currentFrame % 12 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 14 === 0 || this.currentFrame % 13 === 0 || this.currentFrame % 15 === 0)) {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth - 1, cropSizeHeight, col * this.tileSize + (3 - Math.floor(Math.random() * 10) / 3), row * this.tileSize + Math.random(), cropSizeWidth, cropSizeHeight);\n    } else {\n      ctx.drawImage(this.objectsImage, srcX, srcY, cropSizeWidth, cropSizeHeight, col * this.tileSize, row * this.tileSize, cropSizeWidth, cropSizeHeight);\n    }\n    // this.currentFrame;\n  } // drawing a specific object needs to have a hardcoded srcX and srcY, and also a hard coded cropsize. \n  // specific drawing animations done here.... could maybe move this to the object instance,\n  // but this would require an extra reorganization.. \n\n  _drawWater(ctx, srcX, srcY, col, row, size) {\n    ctx.drawImage(this.water, srcX, srcY, size, size, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawWro(ctx, col, row, size) {\n    let frameNum = this.currentFrame % 6;\n    ctx.drawImage(this.wro[frameNum], col * this.tileSize, row * this.tileSize, size, size);\n  }\n  _drawGrass(ctx, col, row, size) {\n    ctx.drawImage(this.grass, col * this.tileSize, row * this.tileSize, size, size);\n  }\n  getPlayer(velocity) {\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"P\") {\n          return new _Player__WEBPACK_IMPORTED_MODULE_0__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, velocity, this);\n        }\n      }\n    }\n  }\n  getObjects() {\n    let objectsCollection = [];\n    for (let row = 0; row < this.theMap1.length; row++) {\n      for (let col = 0; col < this.theMap1[row].length; col++) {\n        let tile = this.theMap1[row][col];\n        if (tile === \"Wr\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 0, -3);\n          objectsCollection.push(rock);\n          // console.log(objectsCollection)\n        } else if (tile === 'BN') {\n          // render border hitbox here\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize - 6, 0, this, 3);\n          objectsCollection.push(invisBoundary);\n          // console.log(objectsCollection)\n        } else if (tile === 'BC') {\n          let invisBoundary = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize - 6, this.tileSize - 10, 0, this, 5, 5);\n          objectsCollection.push(invisBoundary);\n        } else if (tile === \"R2\" || tile === \"R1\") {\n          let rock = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 0, -3);\n          objectsCollection.push(rock);\n        } else if (tile === \"Ta\") {\n          let tree = new _EnvObject__WEBPACK_IMPORTED_MODULE_2__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize + 23, 0, this, 3, 8);\n          objectsCollection.push(tree);\n        } else if (tile === \"Co\") {\n          let food = new _Consumable__WEBPACK_IMPORTED_MODULE_3__[\"default\"](col * this.tileSize, row * this.tileSize, this.tileSize, 0, this, 0, -3);\n        }\n      }\n    }\n    return objectsCollection;\n  }\n  setCanvasSize(canvas) {\n    canvas.width = this.theMap1[0].length * this.tileSize;\n    canvas.height = this.theMap1.length * this.tileSize;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (TileMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/TileMap.js\n");

/***/ }),

/***/ "./src/scripts/foodUtils.js":
/*!**********************************!*\
  !*** ./src/scripts/foodUtils.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n\nclass PassableHitbox {\n  constructor(x, y, width, height, xOffset = 0, yOffset = 0) {\n    // debugger\n    this.x = x;\n    this.y = y;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.detectionState = false;\n    this.debugImage = new Image();\n    this.debugImage.src = './src/graphics/debug.png';\n    if (!_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.PASSABLEHITBOXES) {\n      _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.PASSABLEHITBOXES = [];\n    }\n    _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.PASSABLEHITBOXES.push(this);\n    console.log(_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.PASSABLEHITBOXES);\n  }\n  static updateDetectionStateToTrueIfDetecting() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE.length; i++) {\n      _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE[i].collisionState = false;\n    }\n    ;\n    for (let i = 0; i < _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE.length; i++) {\n      for (let j = i + 1; j < _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE[i];\n        let hitbox2 = _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.ALLHITBOXESMADE[j];\n        if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"]._anyCollision(hitbox1, hitbox2)) {\n          hitbox1.collisionState = true;\n          hitbox2.collisionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  static _anyDetection(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraw(ctx) {\n    // debugger\n    if (this.detectionState === false) {\n      ctx.filter = 'none';\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.detectionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PassableHitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/foodUtils.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// const ALLHITBOXESMADE = [];\n\nclass Hitbox {\n  // hitbox logic... \n  // track x, y positions in the game world. \n  // track height and width of the hitbox. \n  // MUST loop through all combinations of hitboxes to detect collisions. \n  // isColliding(target, checkingWith) => `target.collisionState = true` && return true if target and checking with colliding.\n  // \n  // Currently thinking of adding an x and y offset so I can attach accurate hitboxes to all the game assets.\n  // whenever a new object is made, hitboxes are tied to it through a callback. \n  constructor(x, y, width, height, xOffset = 0, yOffset = 0) {\n    this.x = x;\n    this.y = y;\n    this.xOffset = xOffset;\n    this.yOffset = yOffset;\n    this.width = width;\n    this.height = height;\n    this.collisionState = false;\n    this.debugImage = new Image();\n    this.debugImage.src = './src/graphics/debug.png';\n    if (!Hitbox.prototype.ALLHITBOXESMADE) {\n      Hitbox.prototype.ALLHITBOXESMADE = [];\n    }\n    Hitbox.prototype.ALLHITBOXESMADE.push(this);\n    // console.log(ALLHITBOXESMADE);\n  }\n\n  static updateCollisionStateToTrueIfColliding() {\n    // if any hitboxes overlap, update their collision state to true,\n    // else do nothing... need to use separate functions because\n    // a collision may be detected early in this loop. \n    // Therefore, we need a one way switch. \n\n    // Let's first set everything that needs to be false to false.. \n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      Hitbox.prototype.ALLHITBOXESMADE[i].collisionState = false;\n    }\n    ;\n    for (let i = 0; i < Hitbox.prototype.ALLHITBOXESMADE.length; i++) {\n      for (let j = i + 1; j < Hitbox.prototype.ALLHITBOXESMADE.length; j++) {\n        // console.log([i, j])\n        let hitbox1 = Hitbox.prototype.ALLHITBOXESMADE[i];\n        let hitbox2 = Hitbox.prototype.ALLHITBOXESMADE[j];\n        if (Hitbox._anyCollision(hitbox1, hitbox2)) {\n          hitbox1.collisionState = true;\n          hitbox2.collisionState = true;\n          // debugger\n        }\n      }\n    }\n  }\n\n  static _anyCollision(box1, box2) {\n    // check to see if the positional coordinate is greater than the (other positional coordinate + that thing's dimesions..)\n    // return false if ^ is true... \n    // else return true! hehe\n    // it's so simple, but actually so difficult to think of on my own.. \n    // credits to this tutorial \n    // https://spicyyoghurt.com/tutorials/html5-javascript-game-development/collision-detection-physics\n    //\n\n    if (box1.x + box1.xOffset > box2.x + box2.xOffset + box2.width || box1.y + box1.yOffset > box2.y + box2.yOffset + box2.height || box2.x + box2.xOffset > box1.x + box1.xOffset + box1.width || box2.y + box2.yOffset > box1.y + box1.yOffset + box1.height) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  _debugDraw(ctx) {\n    // debugger\n    if (this.collisionState === false) {\n      ctx.filter = 'none';\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n    } else if (this.collisionState === true) {\n      // debugger\n      ctx.filter = 'invert(1)';\n      // debugger\n      ctx.drawImage(this.debugImage, 0, 0, 16, 16, this.x + this.xOffset, this.y + this.yOffset, this.width, this.height);\n      ctx.filter = 'none';\n    }\n  }\n}\n\n// class PassableHitbox {\n\n//     constructor(x, y, width, height, xOffset = 0, yOffset = 0){\n\n//         debugger\n//         this.x = x;\n//         this.y = y;\n\n//         this.xOffset = xOffset;\n//         this.yOffset = yOffset;\n\n//         this.width = width;\n//         this.height = height;\n\n//         this.detectionState = false;\n\n//         this.debugImage = new Image();\n//         this.debugImage.src = './src/graphics/debug.pngg';\n\n//         if (!Hitbox.prototype.PASSABLEHITBOXES){\n//             Hitbox.prototype.PASSABLEHITBOXES = []\n//         }\n\n//         Hitbox.prototype.PASSABLEHITBOXES.push(this);\n\n//         console.log(Hitbox.prototype.PASSABLEHITBOXES)\n//     }\n\n// }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Hitbox);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8sRUFBRSxJQUFJLENBQUNILEtBQUssRUFBRSxJQUFJLENBQUNDLE1BQU0sQ0FBQztNQUNuSG9CLEdBQUcsQ0FBQ0MsTUFBTSxHQUFHLE1BQU07SUFDdkI7RUFFSjtBQUlKOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFHQSwrREFBZTFCLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9zY3JpcHRzL3V0aWxzLmpzP2RiMTMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbi8vIGNvbnN0IEFMTEhJVEJPWEVTTUFERSA9IFtdO1xuXG5jbGFzcyBIaXRib3ggeyAvLyBoaXRib3ggbG9naWMuLi4gXG4gICAgLy8gdHJhY2sgeCwgeSBwb3NpdGlvbnMgaW4gdGhlIGdhbWUgd29ybGQuIFxuICAgIC8vIHRyYWNrIGhlaWdodCBhbmQgd2lkdGggb2YgdGhlIGhpdGJveC4gXG4gICAgLy8gTVVTVCBsb29wIHRocm91Z2ggYWxsIGNvbWJpbmF0aW9ucyBvZiBoaXRib3hlcyB0byBkZXRlY3QgY29sbGlzaW9ucy4gXG4gICAgLy8gaXNDb2xsaWRpbmcodGFyZ2V0LCBjaGVja2luZ1dpdGgpID0+IGB0YXJnZXQuY29sbGlzaW9uU3RhdGUgPSB0cnVlYCAmJiByZXR1cm4gdHJ1ZSBpZiB0YXJnZXQgYW5kIGNoZWNraW5nIHdpdGggY29sbGlkaW5nLlxuICAgIC8vIFxuICAgIC8vIEN1cnJlbnRseSB0aGlua2luZyBvZiBhZGRpbmcgYW4geCBhbmQgeSBvZmZzZXQgc28gSSBjYW4gYXR0YWNoIGFjY3VyYXRlIGhpdGJveGVzIHRvIGFsbCB0aGUgZ2FtZSBhc3NldHMuXG4gICAgLy8gd2hlbmV2ZXIgYSBuZXcgb2JqZWN0IGlzIG1hZGUsIGhpdGJveGVzIGFyZSB0aWVkIHRvIGl0IHRocm91Z2ggYSBjYWxsYmFjay4gXG4gICAgY29uc3RydWN0b3IoeCwgeSwgd2lkdGgsIGhlaWdodCwgeE9mZnNldCA9IDAsIHlPZmZzZXQgPSAwKXtcbiAgICAgICAgXG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLnhPZmZzZXQgPSB4T2Zmc2V0O1xuICAgICAgICB0aGlzLnlPZmZzZXQgPSB5T2Zmc2V0O1xuICAgICAgICBcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuY29sbGlzaW9uU3RhdGUgPSBmYWxzZTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuZGVidWdJbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICB0aGlzLmRlYnVnSW1hZ2Uuc3JjID0gJy4vc3JjL2dyYXBoaWNzL2RlYnVnLnBuZyc7XG4gICAgICAgIFxuICAgICAgICBpZiAoIUhpdGJveC5wcm90b3R5cGUuQUxMSElUQk9YRVNNQURFKXtcbiAgICAgICAgICAgIEhpdGJveC5wcm90b3R5cGUuQUxMSElUQk9YRVNNQURFID0gW11cbiAgICAgICAgfVxuXG4gICAgICAgIEhpdGJveC5wcm90b3R5cGUuQUxMSElUQk9YRVNNQURFLnB1c2godGhpcyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKEFMTEhJVEJPWEVTTUFERSk7XG4gICAgICAgIFxuICAgIH1cblxuXG4gICAgc3RhdGljIHVwZGF0ZUNvbGxpc2lvblN0YXRlVG9UcnVlSWZDb2xsaWRpbmcoKSB7IFxuICAgICAgICAvLyBpZiBhbnkgaGl0Ym94ZXMgb3ZlcmxhcCwgdXBkYXRlIHRoZWlyIGNvbGxpc2lvbiBzdGF0ZSB0byB0cnVlLFxuICAgICAgICAvLyBlbHNlIGRvIG5vdGhpbmcuLi4gbmVlZCB0byB1c2Ugc2VwYXJhdGUgZnVuY3Rpb25zIGJlY2F1c2VcbiAgICAgICAgLy8gYSBjb2xsaXNpb24gbWF5IGJlIGRldGVjdGVkIGVhcmx5IGluIHRoaXMgbG9vcC4gXG4gICAgICAgIC8vIFRoZXJlZm9yZSwgd2UgbmVlZCBhIG9uZSB3YXkgc3dpdGNoLiBcblxuICAgICAgICAvLyBMZXQncyBmaXJzdCBzZXQgZXZlcnl0aGluZyB0aGF0IG5lZWRzIHRvIGJlIGZhbHNlIHRvIGZhbHNlLi4gXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBIaXRib3gucHJvdG90eXBlLkFMTEhJVEJPWEVTTUFERS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgSGl0Ym94LnByb3RvdHlwZS5BTExISVRCT1hFU01BREVbaV0uY29sbGlzaW9uU3RhdGUgPSBmYWxzZTtcbiAgICAgICAgfTsgICBcbiAgICAgICAgXG5cbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IEhpdGJveC5wcm90b3R5cGUuQUxMSElUQk9YRVNNQURFLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBmb3IobGV0IGogPSBpICsgMTsgaiA8IEhpdGJveC5wcm90b3R5cGUuQUxMSElUQk9YRVNNQURFLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coW2ksIGpdKVxuICAgICAgICAgICAgICAgIGxldCBoaXRib3gxID0gSGl0Ym94LnByb3RvdHlwZS5BTExISVRCT1hFU01BREVbaV07XG4gICAgICAgICAgICAgICAgbGV0IGhpdGJveDIgPSBIaXRib3gucHJvdG90eXBlLkFMTEhJVEJPWEVTTUFERVtqXTtcblxuICAgICAgICAgICAgICAgIGlmIChIaXRib3guX2FueUNvbGxpc2lvbihoaXRib3gxLCBoaXRib3gyKSkge1xuICAgICAgICAgICAgICAgICAgICBoaXRib3gxLmNvbGxpc2lvblN0YXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaGl0Ym94Mi5jb2xsaXNpb25TdGF0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBzdGF0aWMgX2FueUNvbGxpc2lvbihib3gxLCBib3gyKSB7XG4gICAgICAgIC8vIGNoZWNrIHRvIHNlZSBpZiB0aGUgcG9zaXRpb25hbCBjb29yZGluYXRlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgKG90aGVyIHBvc2l0aW9uYWwgY29vcmRpbmF0ZSArIHRoYXQgdGhpbmcncyBkaW1lc2lvbnMuLilcbiAgICAgICAgLy8gcmV0dXJuIGZhbHNlIGlmIF4gaXMgdHJ1ZS4uLiBcbiAgICAgICAgLy8gZWxzZSByZXR1cm4gdHJ1ZSEgaGVoZVxuICAgICAgICAvLyBpdCdzIHNvIHNpbXBsZSwgYnV0IGFjdHVhbGx5IHNvIGRpZmZpY3VsdCB0byB0aGluayBvZiBvbiBteSBvd24uLiBcbiAgICAgICAgLy8gY3JlZGl0cyB0byB0aGlzIHR1dG9yaWFsIFxuICAgICAgICAvLyBodHRwczovL3NwaWN5eW9naHVydC5jb20vdHV0b3JpYWxzL2h0bWw1LWphdmFzY3JpcHQtZ2FtZS1kZXZlbG9wbWVudC9jb2xsaXNpb24tZGV0ZWN0aW9uLXBoeXNpY3NcbiAgICAgICAgLy9cblxuICAgICAgICBpZiAoKGJveDEueCArIGJveDEueE9mZnNldCkgPiAoYm94Mi54ICsgYm94Mi54T2Zmc2V0KSArIGJveDIud2lkdGggfHxcbiAgICAgICAgICAgIChib3gxLnkgKyBib3gxLnlPZmZzZXQpID4gKGJveDIueSArIGJveDIueU9mZnNldCkgKyBib3gyLmhlaWdodCB8fFxuICAgICAgICAgICAgKGJveDIueCArIGJveDIueE9mZnNldCkgPiAoYm94MS54ICsgYm94MS54T2Zmc2V0KSArIGJveDEud2lkdGggfHxcbiAgICAgICAgICAgIChib3gyLnkgKyBib3gyLnlPZmZzZXQpID4gKGJveDEueSArIGJveDEueU9mZnNldCkgKyBib3gxLmhlaWdodFxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgXG4gICAgfVxuICAgIFxuXG5cbiAgICBfZGVidWdEcmF3KGN0eCkge1xuICAgICAgICAvLyBkZWJ1Z2dlclxuICAgICAgICBpZiAodGhpcy5jb2xsaXNpb25TdGF0ZSA9PT0gZmFsc2Upe1xuICAgICAgICAgICAgY3R4LmZpbHRlciA9ICdub25lJ1xuICAgICAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmRlYnVnSW1hZ2UsIDAsIDAsIDE2LCAxNiwgdGhpcy54ICsgdGhpcy54T2Zmc2V0LCB0aGlzLnkgKyB0aGlzLnlPZmZzZXQsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KVxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29sbGlzaW9uU3RhdGUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgICAgICBjdHguZmlsdGVyID0gJ2ludmVydCgxKSdcbiAgICAgICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMuZGVidWdJbWFnZSwgMCwgMCwgMTYsIDE2LCB0aGlzLnggKyB0aGlzLnhPZmZzZXQsIHRoaXMueSArIHRoaXMueU9mZnNldCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpXG4gICAgICAgICAgICBjdHguZmlsdGVyID0gJ25vbmUnXG4gICAgICAgIH1cblxuICAgIH1cblxuXG5cbn1cblxuLy8gY2xhc3MgUGFzc2FibGVIaXRib3gge1xuXG4vLyAgICAgY29uc3RydWN0b3IoeCwgeSwgd2lkdGgsIGhlaWdodCwgeE9mZnNldCA9IDAsIHlPZmZzZXQgPSAwKXtcblxuLy8gICAgICAgICBkZWJ1Z2dlclxuLy8gICAgICAgICB0aGlzLnggPSB4O1xuLy8gICAgICAgICB0aGlzLnkgPSB5O1xuICAgICAgICBcbi8vICAgICAgICAgdGhpcy54T2Zmc2V0ID0geE9mZnNldDtcbi8vICAgICAgICAgdGhpcy55T2Zmc2V0ID0geU9mZnNldDtcbiAgICAgICAgXG4vLyAgICAgICAgIHRoaXMud2lkdGggPSB3aWR0aDtcbi8vICAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIFxuLy8gICAgICAgICB0aGlzLmRldGVjdGlvblN0YXRlID0gZmFsc2U7XG4gICAgICAgIFxuLy8gICAgICAgICB0aGlzLmRlYnVnSW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbi8vICAgICAgICAgdGhpcy5kZWJ1Z0ltYWdlLnNyYyA9ICcuL3NyYy9ncmFwaGljcy9kZWJ1Zy5wbmdnJztcbiAgICAgICAgXG5cbi8vICAgICAgICAgaWYgKCFIaXRib3gucHJvdG90eXBlLlBBU1NBQkxFSElUQk9YRVMpe1xuLy8gICAgICAgICAgICAgSGl0Ym94LnByb3RvdHlwZS5QQVNTQUJMRUhJVEJPWEVTID0gW11cbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIEhpdGJveC5wcm90b3R5cGUuUEFTU0FCTEVISVRCT1hFUy5wdXNoKHRoaXMpO1xuXG4vLyAgICAgICAgIGNvbnNvbGUubG9nKEhpdGJveC5wcm90b3R5cGUuUEFTU0FCTEVISVRCT1hFUylcbi8vICAgICB9XG5cbi8vIH1cblxuXG5leHBvcnQgZGVmYXVsdCBIaXRib3hcbiJdLCJuYW1lcyI6WyJIaXRib3giLCJjb25zdHJ1Y3RvciIsIngiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJ4T2Zmc2V0IiwieU9mZnNldCIsImNvbGxpc2lvblN0YXRlIiwiZGVidWdJbWFnZSIsIkltYWdlIiwic3JjIiwicHJvdG90eXBlIiwiQUxMSElUQk9YRVNNQURFIiwicHVzaCIsInVwZGF0ZUNvbGxpc2lvblN0YXRlVG9UcnVlSWZDb2xsaWRpbmciLCJpIiwibGVuZ3RoIiwiaiIsImhpdGJveDEiLCJoaXRib3gyIiwiX2FueUNvbGxpc2lvbiIsImJveDEiLCJib3gyIiwiX2RlYnVnRHJhdyIsImN0eCIsImZpbHRlciIsImRyYXdJbWFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYXZpbmVfcHJvai8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;